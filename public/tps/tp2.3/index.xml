<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>TP 2.3 on Guia de Trabajos Practicos</title>
    <link>http://aed.wfrre3.local/tps/tp2.3/</link>
    <description>Recent content in TP 2.3 on Guia de Trabajos Practicos</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="http://aed.wfrre3.local/tps/tp2.3/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title></title>
      <link>http://aed.wfrre3.local/tps/tp2.3/ej3-01a/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://aed.wfrre3.local/tps/tp2.3/ej3-01a/</guid>
      <description>Dado un fichero secuencial de Facturas, ordenado por Nro. de Cliente y Nro. de Factura, con la siguiente estructura:
FACTURAS Nro_Cliente Nro_Factura Fecha Importe 
Se desea un listado con el siguiente detalle:
   Nro. Cliente Nombre Cliente Nro_Factura      Los datos del cliente se encuentran en un fichero indexado por Nro. de Cliente, que tiene la siguiente estructura:
CLIENTES Nro_Cliente Nombre DNI CUIT Domicilio</description>
    </item>
    
    <item>
      <title></title>
      <link>http://aed.wfrre3.local/tps/tp2.3/ej3-01b/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://aed.wfrre3.local/tps/tp2.3/ej3-01b/</guid>
      <description>Dado un fichero secuencial de Facturas, ordenado por Nro. de Cliente y Nro. de Factura, con la siguiente estructura:
FACTURAS Nro_Cliente Nro_Factura Fecha Importe 
Se desea un listado con el siguiente detalle:
   Nro. Cliente Nombre Cliente Total Facturado Cantidad de Facturas      Los datos del cliente se encuentran en un fichero indexado por Nro. de Cliente, que tiene la siguiente estructura:
CLIENTES Nro_Cliente Nombre DNI CUIT Domicilio</description>
    </item>
    
    <item>
      <title></title>
      <link>http://aed.wfrre3.local/tps/tp2.3/ej3-02/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://aed.wfrre3.local/tps/tp2.3/ej3-02/</guid>
      <description>Una empresa dispone de un fichero secuencial con datos de sus empleados, ordenado por número de sucursal, y categoría, con los siguientes datos:
Nro_Sucursal Categoria (A,B,C) Nombre_Empleado Cod_Curso Tecnico (si,no)  y un fichero con datos de cursos, indexado por código de curso:
Cod_Curso Nombre Fecha Cant_Horas  Emitir un listado informando:
- Para cada empleado: sucursal, categoría, nombre del empleado y nombre del curso que debe realizar.
- Por sucursal, categoría y toda la empresa:</description>
    </item>
    
    <item>
      <title></title>
      <link>http://aed.wfrre3.local/tps/tp2.3/ej3-03/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://aed.wfrre3.local/tps/tp2.3/ej3-03/</guid>
      <description>Los automovilistas pasan por el peaje del Puente Gral. Belgrano y deben pagar según su categoría, pero además, si ya han pasado previamente dentro del día tienen pase libre.
Teniendo en cuenta el archivo siguiente, construya el algoritmo que realice lo que corresponda: genere el comprobante, indicando el importe a pagar o emita un mensaje indicando que ya pasó anteriormente. Además indique cuales deberían ser los datos de entrada.
PEAJE Indexado por Patente, Fecha Patente XXX-NNN Fecha N(8) Ult_Hora N(4) Costo XXX,XX</description>
    </item>
    
    <item>
      <title></title>
      <link>http://aed.wfrre3.local/tps/tp2.3/ej3-04/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://aed.wfrre3.local/tps/tp2.3/ej3-04/</guid>
      <description>Crear un algoritmo que simule el trabajo de una caja de supermercado. El algoritmo debe permitir imprimir el ticket de compra y realizar el descuento de stock del producto. Al generar el comprobante del ticket debe guardar los datos en los archivos TICKET y DETALLE_TICKET (el cliente es: &amp;ldquo;consumidor final&amp;rdquo; y el NroTicket se genera automáticamente, mediante la función OBTENER_TICKET). Archivos:
PRODUCTOS indexado por Cod_Prod
Cod_Prod Nombre Stock Precio  TICKET indexado por Nro_Ticket Nro_Ticket Fecha Cliente</description>
    </item>
    
    <item>
      <title></title>
      <link>http://aed.wfrre3.local/tps/tp2.3/ej3-05/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://aed.wfrre3.local/tps/tp2.3/ej3-05/</guid>
      <description>Para poder comprar dólares en una entidad bancaria al precio oficial ($9,40), el beneficiario, debe tener un ingreso promedio en los últimos 12 meses equivalente a dos veces el sueldo mínimo vital y móvil (el cual en la actualidad es de $5000 por mes). Luego, con el sueldo del mes actual, solo se permite comprar por un importe no superior al 30% del mismo.
Por ej.: si una persona tiene un sueldo de $10.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://aed.wfrre3.local/tps/tp2.3/ej3-06/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://aed.wfrre3.local/tps/tp2.3/ej3-06/</guid>
      <description>Una Municipalidad debe liquidar las patentes de su parque automotor para el cuarto trimestre del año e imprimir un padrón de cobros y deudas, con cortes de importe por grupo, categoría y año de fabricación.
Los archivos son:
AUTOS secuencial ordenado por CLAVE Grupo N(2) Categoria 1..50 Anio_Fab N(4) Nro_Patente N(8) DNI AN(8) ApyNom AN(25) Domicilio AN(30) 
DEUDAS indexado por CLAVED Nro_Patente N(8) Anio_Deuda N(4) Trimestre N(1) Importe N(5,2)</description>
    </item>
    
    <item>
      <title></title>
      <link>http://aed.wfrre3.local/tps/tp2.3/ej3-07/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://aed.wfrre3.local/tps/tp2.3/ej3-07/</guid>
      <description>Crear un algoritmo que imprima un reporte como el que se indica, incluyendo totales por Obra Social y Clínica de liquidaciones a médicos. Los archivos que intervienen son:
LIQUIDACIONES secuencial ordenado por O.S. y Clínica
O.S. Clinica Nro_Leg Mes Anio Bruto Descuento_AFIP Descuento_DGR  Neto = Bruto – (Desc_AFIP + Desc_DGR)
OBRAS_SOCIALES indexado por CodOs Cod_OS Nombre 
CLÍNICAS indexado por Cod_Cli Cod_Cli Nombre 
MÉDICOS indexado por Nro_Leg Nro_Leg ApyNom Especialidad DNI</description>
    </item>
    
    <item>
      <title></title>
      <link>http://aed.wfrre3.local/tps/tp2.3/ej3-08/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://aed.wfrre3.local/tps/tp2.3/ej3-08/</guid>
      <description>Los alumnos que desarrollaban el proyecto UTNBook (ejercicio 2.23) han decidido modificar parte de la aplicación para que esta tenga mayor interacción con el usuario. Es así que decidieron eliminar el archivo de Notificaciones, provocando así que la inserción nuevos amigos, la eliminación de amistades y la escritura en los muros de otras personas esté a cargo del usuario.
Con estas consideraciones trabajaron con el siguiente archivo:
AMIGOS indexado por Cod_Usuario y Cod_Amigo</description>
    </item>
    
    <item>
      <title></title>
      <link>http://aed.wfrre3.local/tps/tp2.3/ej3-09/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://aed.wfrre3.local/tps/tp2.3/ej3-09/</guid>
      <description>Pepsico S.A.I.C. desea que Ud. realice el algoritmo para poner al corriente los saldos de sus clientes y el stock de la empresa. Para ello cuentan con:
CLIENTES indexado por ClienteID
ClienteID Cliente_Nombre Cliente_CUIT Cliente_Saldo  DETALLE_CLIENTES indexado por Nro_Operacion
Nro_Operacion Fecha_Operacion ClienteID Importe Factura_Numero  VENTAS ordenado por Venta_Numero
Venta_Numero Venta_Fecha Factura_Numero ProductoID Cantidad_Vendida ClienteID  PRODUCTOS indexado por ProductoID
ProductoID Stock Producto_Detalle Costo_Unitario  Se debe actualizar el saldo del cliente y además agregar el detalle de la compra que figura en el archivo de Ventas al archivo Detalle_Clientes, por cada venta realizada se deberá descontar la cantidad vendida del stock.</description>
    </item>
    
  </channel>
</rss>