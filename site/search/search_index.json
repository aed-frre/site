{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Bienvenido! \u00b6 En este sitio vas a encontrar todo lo que necesitas para sobrevivir a la materia Cronograma \u00b6 Si no sabes que dia es hoy, o cuando va a ser el parcial, entra aca. Planificaci\u00f3n \u00b6 Si queres saber como aprobar o que libros comprar, pase Ud. Pr\u00e1ctica \u00b6 Una lista de todos los ejercicios practicos y complementarios que vamos a utilizar en las clases practicas Teor\u00eda \u00b6 Un complemento te\u00f3rico a los temas de teor\u00eda para que no te pierdas +++ \u00b6 Estamos dispuestos a mejorar, as\u00ed que si pensas en algo que podamos agregar, avisanos!","title":"Bienvenido!"},{"location":"#bienvenido","text":"En este sitio vas a encontrar todo lo que necesitas para sobrevivir a la materia","title":"Bienvenido!"},{"location":"#cronograma","text":"Si no sabes que dia es hoy, o cuando va a ser el parcial, entra aca.","title":"Cronograma"},{"location":"#planificacion","text":"Si queres saber como aprobar o que libros comprar, pase Ud.","title":"Planificaci\u00f3n"},{"location":"#practica","text":"Una lista de todos los ejercicios practicos y complementarios que vamos a utilizar en las clases practicas","title":"Pr\u00e1ctica"},{"location":"#teoria","text":"Un complemento te\u00f3rico a los temas de teor\u00eda para que no te pierdas","title":"Teor\u00eda"},{"location":"#_1","text":"Estamos dispuestos a mejorar, as\u00ed que si pensas en algo que podamos agregar, avisanos!","title":"+++"},{"location":"cron/","text":"Cronograma \u00b6","title":"Cronograma"},{"location":"cron/#cronograma","text":"","title":"Cronograma"},{"location":"plan/","text":"Planificaci\u00f3n \u00b6 C\u00e1tedra \u00b6 PLAN DE ESTUDIO: 2008 AREA: Programaci\u00f3n Porcentaje de horas c\u00e1tedra del \u00e1rea en la carrera: 12,6% Porcentaje de horas c\u00e1tedra de la asignatura en el \u00e1rea: 25% ASIGNATURA: Algoritmos y Estructuras de Datos Carga horaria semanal: 5 hs c\u00e1tedra Carga horaria total: 160 hs c\u00e1tedra NIVEL: 1 er Nivel ANUAL CICLO LECTIVO: 2019 Fundamentaci\u00f3n de la asignatura \u00b6 1. Explicar la importancia de la asignatura y posibilidades de desarrollo que promueve respecto a la trayectoria formativa del futuro 'Ingeniero/Licenciado' en relaci\u00f3n al Perfil Profesional del Egresado y Competencias propuestas en el LR: Gen\u00e9ricas, Tecnol\u00f3gicas y Espec\u00edficas. Seg\u00fan el Libro Rojo del CONFEDI, la carrera de Ingenier\u00eda en Sistemas de Informaci\u00f3n tiene como actividad reservada: Especificar, proyectar y desarrollar sistemas de informaci\u00f3n Dirigir y controlar la implementaci\u00f3n, operaci\u00f3n y mantenimiento de los sistemas de informaci\u00f3n En funci\u00f3n de esto, dentro de las Tecnolog\u00edas B\u00e1sicas, se encuentra el \u00edtem PROGRAMACI\u00d3N. Los contenidos de la materia apuntan a brindar el conocimiento para la soluci\u00f3n de problemas de la Ingenier\u00eda EN SISTEMAS DE INFORMACI\u00d3N teniendo como fundamento las herramientas de la programaci\u00f3n 2. Enunciar las competencias y sub-competencias Tecnol\u00f3gicas Identificar, formular y resolver problemas algoritmicos Aprender estructuras de datos y acciones Concebir, dise\u00f1ar y desarrollar programas Aprender lenguajes de programaci\u00f3n Desarrollar la capacidad de obtener soluciones de acuerdo a la necesidad planteada Utilizar de manera efectiva las t\u00e9cnicas y herramientas de la programaci\u00f3n Aprender las t\u00e9cnicas de la programaci\u00f3n Espec\u00edficas Especificar, proyectar y desarrollar soluciones algoritmicas Resolver problemas algor\u00edtmicos t\u00edpicos utilizando criteriosamente las estructuras tanto de datos como de acciones Especificar, proyectar y desarrollar Programas. Traducir las soluciones algor\u00ectmicas de pseudoc\u00f3digo a programas mediante Pascal Controlar la implementaci\u00f3n, operaci\u00f3n y mantenimiento de programas Resolver situaciones pr\u00e1cticas de manejo de robots con Ansi C Sociales, Pol\u00edticas y Actitudinales Aprender en forma continua y aut\u00f3noma Utilizar los contenidos te\u00f3ricos y bibliogr\u00e1ficos del aula Resolver casos estudio en equipos y de forma individual Comunicarse con efectividad Participar en los foros de debate Realizar una presentaci\u00f3n oral de casos de estudio en coloquios finales Desempe\u00f1arse de manera efectiva en equipos de trabajo Participar en los diferentes roles de equipo para resolver casos pr\u00e1cticos en el aula, en el laboratorio y en el TPI Objetivos \u00b6 Identificar problemas algor\u00edtmicos y sus soluciones m\u00e1s eficientes. Conocer el proceso de dise\u00f1o e implementaci\u00f3n de software. Aplicar las herramientas fundamentales representativas de los procesos, integrando la sintaxis elemental de un lenguaje de programaci\u00f3n en el laboratorio asociado y en proyectos de rob\u00f3tica. Contenidos \u00b6 Unidad I: Introducci\u00f3n a la Algoritmia \u00b6 Objetivos \u00b6 Identificar las acciones involucradas en un problema. Reconocer los estados de los objetos antes y despu\u00e9s de la acci\u00f3n realizada. Descomponer una acci\u00f3n en t\u00e9rminos de otras m\u00e1s elementales. Utilizar un l\u00e9xico m\u00ednimo com\u00fan. Comprender el significado del t\u00e9rmino Algoritmo Contenido \u00b6 Estrateg\u00edas de resoluci\u00f3n de problemas: algoritmos, descripci\u00f3n narrada, seudoc\u00f3digos, diagramas, tablas de decisi\u00f3n. Concepto de acci\u00f3n, estado, procesador y proceso. Concepto de m\u00e1quina, algoritmo y programa. Formas de representar los procesos. Esquemas. Concepto de dato y tipolog\u00eda de datos. Tipos elementales de datos. La operaci\u00f3n asignaci\u00f3n. Especificaci\u00f3n de la acci\u00f3n a realizar en funci\u00f3n de los estados. Concepto de estado intermedio. Descomposici\u00f3n de una acci\u00f3n en t\u00e9rminos de otras m\u00e1s elementales.Composici\u00f3n secuencial de acciones. Elementos b\u00e1sicos de la notaci\u00f3n algor\u00edtmica. Expresiones: tipos, operadores. precedencia de los operadores. Evaluaci\u00f3n de las expresiones. Errores: tipos de errores. El concepto de prueba del algoritmo. Bibliograf\u00eda \u00b6 Lucas M., Peyrin J., Scholl P. Algor\u00edtmica y Representaci\u00f3n de datos. Tomo I. Secuencias, aut\u00f3matas de estados finitos. Masson, 1985 Tremblay JP, Bunt R. Introducci\u00f3n a la ciencia de las computadoras: enfoque algor\u00edtmico. McGraw-Hill, 1982. Unidad II: Secuencias \u00b6 Subunidad A: Noci\u00f3n de Secuencia \u00b6 Objetivos \u00b6 Definir formalmente una secuencia. Enunciar y explicar las funciones de acceso a la secuencia Emplear los operadores de construcci\u00f3n de secuencias Reconocer en un conjunto de informaci\u00f3n una partici\u00f3n en subsecuencias. Especificar algoritmos de tratamiento de secuencia. Criticar soluciones para problemas de tratamiento de secuencias. Emplear sistem\u00e1ticamente los esquemas de tratamiento de secuencias Contenido \u00b6 Noci\u00f3n de secuencia. Definici\u00f3n formal de secuencia. Funciones de acceso a elementos de una secuencia. Operadores de construcci\u00f3n de secuencias. Subunidad B: Descomposici\u00f3n y Tratamiento de Secuencias \u00b6 Objetivos \u00b6 Emplear el an\u00e1lisis por caso. Componer acciones condicionadas. Combinar condiciones Componer acciones que se repiten Conocer las distintas estructuras de repetici\u00f3n Enunciar el teorema fundamental de la programaci\u00f3n estructurada Contenido \u00b6 Descomposici\u00f3n y composici\u00f3n de algoritmos:Subalgoritmos. Noci\u00f3n de par\u00e1metro. Parametrizaci\u00f3n de acciones. Noci\u00f3n de procedimientos y funciones. Acciones condicionadas. An\u00e1lisis por caso. Alternativa, ejecuci\u00f3n condicionada y selecci\u00f3n m\u00faltiple. Acciones que se repiten. Noci\u00f3n de las estructuras ..REPETIR...HASTA QUE..,MIENTRAS.... REPETIR, ITERAR. Teorema fundamental de la programaci\u00f3n estructurada y unicidad de puntos de entrada y salidas. La prueba de escritorio. Noci\u00f3n de acumulaci\u00f3n e invariante. Bibliograf\u00eda \u00b6 Lucas M., Peyrin J., Scholl P. Algor\u00edtmica y Representaci\u00f3n de datos. Tomo I. Secuencias, aut\u00f3matas de estados finitos. Masson, 1985 Braunstein S, Gioia A. Introducci\u00f3n a la programaci\u00f3n y a las estructuras de datos. Eudeba, 1986 Unidad III: Estructuras de Datos \u00b6 Subunidad A: Campo, registro, archivo \u00b6 Objetivos \u00b6 Definir el modelo de archivo secuencial. Especificar algoritmos de tratamiento de secuencia. Criticar soluciones para problemas de tratamiento de secuencias. Emplear sistem\u00e1ticamente los esquemas de tratamiento de secuencias Contenido \u00b6 Concepto de datos estructurados. Clasificaci\u00f3n en est\u00e1ticos y din\u00e1micos. Campos continentes y contenido. Registros. Selectores de campo. Modelo de archivo secuencial: operaciones de AVANZAR, ARRANCAR, CREAR y AGREGAR. Esquemas de tratamiento de secuencias para el modelo: recorrido y creaci\u00f3n. Noci\u00f3n de secuencia abstracta. Dise\u00f1o descendente. Noci\u00f3n de secuencia Bibliograf\u00eda \u00b6 Lucas M., Peyrin J., Scholl P. Algor\u00edtmica y Representaci\u00f3n de datos. Tomo I. Secuencias, aut\u00f3matas de estados finitos. Masson, 1985 Wirth N. Algoritmos + estructuras de datos = programas. Ediciones del Castillo, 1980 Subunidad B: Arreglos \u00b6 Objetivos \u00b6 Definir un arreglo a partir de la representaci\u00f3n tabulada de una funci\u00f3n. Definir los conceptos de tipo base y tipo \u00edndice. Emplear arreglos en la soluci\u00f3n de problemas. Interpretar arreglos n-dimensionales Dise\u00f1ar arreglos uni y n-dimensionales. Escribir esquemas fundamentales de ordenamiento y b\u00fasqueda Contenido \u00b6 Representaci\u00f3n tabulada de una funci\u00f3n. Tipo base y tipo \u00edndice. Arreglos uni-dimensionales y n-dimensionales. Recorrido. Esquemas de ordenaci\u00f3n: por inserci\u00f3n directa, por selecci\u00f3n directa, por intercambio directo, por partici\u00f3n. Esquemas de b\u00fasqueda. B\u00fasqueda en arreglos ordenados. Arreglos de registros. Aplicaci\u00f3n de arreglos en la t\u00e9cnica de dise\u00f1o de Programaci\u00f3n Din\u00e1mica. Bibliograf\u00eda \u00b6 Wirth N. Algoritmos + estructuras de datos = programas. Ediciones del Castillo, 1980 Subunidad C: Listas lineales \u00b6 Objetivos \u00b6 Definir formalmente una estructura avanzada Enunciar y explicar las funciones de acceso a las mismas y sus restricciones Reconocer en un conjunto de informaci\u00f3n la necesidad de una estructura de avanzada. Definir el modelo de listas lineales. Especificar algoritmos de tratamiento de las listas. Criticar soluciones para problemas de tratamiento de listas. Emplear sistem\u00e1ticamente los esquemas de tratamiento de secuencias en los procesos de listas. Contenido \u00b6 Clasificaci\u00f3n. Listas Lineales. Organizaci\u00f3n y acceso. Clases: particularizadas y generalizadas. Concepto de restricci\u00f3n. Noci\u00f3n de puntero. Operaciones con listas: recorrido - inserci\u00f3n - eliminaci\u00f3n. Bibliograf\u00eda \u00b6 Wirth N. Algoritmos + estructuras de datos = programas. Ediciones del Castillo, 1980 Braunstein S, Gioia A. Introducci\u00f3n a la programaci\u00f3n y a las estructuras de datos. Eudeba, 1986 Tremblay JP, Bunt R. Introducci\u00f3n a la ciencia de las computadoras: enfoque algor\u00edtmico. McGraw-Hill, 1982 Unidad IV: Algoritmos y estructuras recursivas \u00b6 Objetivos \u00b6 Enunciar la noci\u00f3n de funci\u00f3n recursiva. Comprender soluciones recursivas de problemas. Convertir soluciones recursivas en recurrentes. Crear procedimientos recursivos. Definir la estructura generalizada de datos Contenido \u00b6 Noci\u00f3n de funci\u00f3n recursiva. Noci\u00f3n de acci\u00f3n recursiva. Interpretaci\u00f3n de algoritmos recursivos. Dise\u00f1o de algoritmos recursivos. T\u00e9cnica de Dise\u00f1o de algoritmos: Divide y Vencer\u00e1s: subproblemas independientes. Generalizaci\u00f3n de las estructuras de datos: \u00e1rbol. Definici\u00f3n y conceptos b\u00e1sicos. \u00c1rboles binarios y n-arios. Recorrido y procesos de \u00e1rboles binarios. Bibliograf\u00eda \u00b6 Lucas M., Peyrin J., Scholl P. Algor\u00edtmica y Representaci\u00f3n de datos. Volumen 2. Masson, 1986. Wirth N. Algoritmos + estructuras de datos = programas. Ediciones del Castillo, 1980 Unidad V: Complejidad computacional y nocion de orden \u00b6 Objetivos \u00b6 Enunciar la noci\u00f3n de Complejidad Computacional Comprender la noci\u00f3n de orden de complejidad Contenido \u00b6 Introducci\u00f3n a la noci\u00f3n de complejidad algor\u00edtmica. Tiempo de ejecuci\u00f3n. Estudio del caso mejor, caso medio y caso peor. Cotas de complejidad, medidas asint\u00f3ticas.. Ordenes de complejidad. Reglas de la notaci\u00f3n as\u00edntotica. Importancia de la eficiencia. Estimaci\u00f3n de la complejidad en algoritmos no recursivos. Bibliograf\u00eda \u00b6 Rosa Guerequeta y Antonio Vallecillo. T\u00e9cnicas de Dise\u00f1o de Algoritmos. (libro digital ISBN: 84-7496-666-3) Estrategias metodol\u00f3gicas \u00b6 Considerar la/s metodolog\u00eda/s de ense\u00f1anza y aprendizaje a implementar seg\u00fan la unidad tem\u00e1tica y sub-competencia a desarrollar y el modo de agrupamiento Estrategias de ense\u00f1anza \u00b6 Las clases se desarrollar\u00e1n en forma entrelazada entre la teor\u00eda y la pr\u00e1ctica. El profesor de teor\u00eda desarrollar\u00e1 la parte conceptual, tratando de que el alumno descubra mediante ejemplos simples el contenido conceptual encerrado en los mismos y profundizando luego el conocimiento te\u00f3rico. Desarrollar\u00e1 adem\u00e1s ejemplos que provoquen el enlace con el contenido siguiente, de manera tal de crear en el alumno la inquietud por conocer c\u00f3mo resolver dicho inconveniente. Se sugerir\u00e1 a los alumnos que asistan con notebooks a las clases para favorecer el proceso de ense\u00f1anza-aprendizaje. La pr\u00e1ctica se desarrollar\u00e1 mediante la presentaci\u00f3n de problemas individualizados en correspondencia con la teor\u00eda, pero siempre se intentar\u00e1 cerrar la clase con un ejercicio integrador, en el cual el educando deba descubrir que estructura es la m\u00e1s conveniente y que proceso eficientiza la soluci\u00f3n del problema. Y si se desarrollaron en las PCs se los mostrar\u00e1 mediante el ca\u00f1\u00f3n. Se utilizar\u00e1n adem\u00e1s aplicaciones m\u00f3viles para integrar el tel\u00e9fono celular como recurso educativo a trav\u00e9s de evaluaciones online usando herramientas tales como Kahoot o Google Form. Adem\u00e1s, se har\u00e1 un uso extensivo e intensivo del recurso campus virtual, obligando a que cada semana el alumno deba contestar un cuestionario de autogesti\u00f3n. Durante los Ciclos Lectivos 2015-2017, se implement\u00f3 la estrategia Gamificaci\u00f3n con buenos resultados, en el ciclo 2018 hicimos uso de la elaboraci\u00f3n de un programa que de soluci\u00f3n a un CASO de estudio real centrado en diversas situaciones problem\u00e1ticas. En dichos ciclos se dej\u00f3 librado al criterio de los alumnos el uso del lenguaje para la confecci\u00f3n del juego o la resoluci\u00f3n del caso. Visto que la mayor\u00eda de los equipos optaban por el lenguaje PASCAL, y en funci\u00f3n de propiciar el uso del lenguaje C, en el presente ciclo se plantear\u00e1 un Trabajo Pr\u00e1ctico Integrador a desarrollarse en equipo donde la intenci\u00f3n es: Motivar la creatividad del estudiante,(dado que deber\u00e1 dise\u00f1ar y construir con diversos materiales, un robot b\u00e1sico) Promover el uso del lenguaje Ansi C, dado que utizaremos plaquetas Arduino Uno, para la programaci\u00f3n de los movimientos de dicho robot. Estrategia de Ense\u00f1anza Unidad/Eje Tem\u00e1tico Modo de Agrupamiento Organizaci\u00f3n de espacios Materiales Curriculares Aprendizaje Basado en problemas Todas las unidades Grupos peque\u00f1os de no mas de 5 estudiantes (flexible) Dentro de la Universidad: Aula Fuera de la Universidad: Aula virtual-trabajo en equipo remoto Presentaciones digitales (Powerpoint, Google Slides). Video. Apuntes digitalizados. Lecciones Moodle. Proyectos Integrador Grupos peque\u00f1os fijos de 5 estudiantes Dentro de la Universidad: Aula y Lab Rob\u00f3tica Fuera de la Universidad: Aula virtual-trabajo en equipo remoto Material de la c\u00e1tedra en PDF. Consignas del TPI. Tutoriales de Ansi C/Software. Plaquetas Arduino Uno. Motor Servo Debate Unidad 3 Subunidad B Comisi\u00f3n Dentro de la Universidad: Aula Presentaciones en PDF. Videos elaborados por los alumnos. Exposici\u00f3n dialogada Todas las teor\u00edas Comisi\u00f3n Dentro de la Universidad: Aula Presentaci\u00f3n PowerPoint Experiencias de Laboratorio Unidad 1-3 Comisi\u00f3n Dentro de la Universidad: Laboratorio inform\u00e1tico Gu\u00eda de Trabajo Pr\u00e1cticos. Tutoriales de los lenguajes Pascal y Ansi C. Software/equipo PC. Plaquetas Arduino Uno y motores servo. Coloquios Presentaci\u00f3n de los trabajos de cierre de los laboratorios Grupos peque\u00f1os fijos de 5 estudiantes Dentro de la Universidad: Laboratorio inform\u00e1tico y aulas Software/equipo PC. Carpeta del TPI. Robot constru\u00eddo. Modalidad de agrupamientos \u00b6 Dada la envergadura del programa de contenidos a desarrollar, se utilizar\u00e1 siempre que sea posible, herramientas de apoyo tales como presentaciones digitales, o gu\u00edas de estudio (impresas o en forma online), y en las pr\u00e1cticas se propiciar\u00e1 el trabajo en grupos de discusi\u00f3n, con participaci\u00f3n activa de los alumnos en el pizarr\u00f3n. El agrupamiento se efectuar\u00e1 a voluntad de los alumnos en n\u00famero de no mayor de 5 personas por grupo. Tambi\u00e9n se trabajar\u00e1 la t\u00e9cnica de \u201cProgramaci\u00f3n de a pares\u201d, buscando que parejas de estudiantes resuelvan casos pr\u00e1cticos determinados. Para poder alcanzar un desarrollo acorde a lo proyectado se deber\u00e1 tener en cuenta que esta materia es de 1er a\u00f1o, con un gran n\u00famero de alumnos, lo que implica la necesidad de contar con un n\u00famero suficiente de auxiliares docentes, a los efectos de poder efectuar un seguimiento del nivel de aprendizaje de cada grupo y de la clase en su totalidad. Consultas \u00b6 Se establecen un horario fijo de consulta por la ma\u00f1ana los martes de 9 a 10 hs y los jueves de 17 a 18 hs durante todo el a\u00f1o. Dicho horario ser\u00e1 cubierto por la responsable de c\u00e1tedra. Esto totaliza dos horas reloj semanal durante todo el a\u00f1o. Adem\u00e0s, en funci\u00f3n de los temas que se desarrollan y la necesidad de los alumnos, los auxiliares docentes establecer\u00e1n horarios temporales de consulta, los que ser\u00e1n informados a los alumnos a trav\u00e9s de carteles y aviso en el aula virtual. La c\u00e1tedra hace uso de un aula virtual en el campus global; en la misma se informa sobre cronograma de clase, horarios de consulta, fechas de los ex\u00e1menes, es adem\u00e1s un repositorio de contenidos y de cuestionarios y actividades obligatorias. Las acciones en el campus se encuentran segmentadas por semanas coincidentes con el cronograma de la planificaci\u00f3n. Cronograma \u00b6 Organizacion de espacios \u00b6 Para el desarrollo de la asignatura se deber\u00e1 contar con aulas con espacio suficiente para poder trabajar en forma grupal con un n\u00famero de alumnos que no supere la cantidad de 70 alumnos por curso. Y disponibilidad de aulas inform\u00e1ticas para el desarrollo de los laboratorios previstos para el lenguaje asociado. Laboratorio del Lenguaje PASCAL A partir de la unidad 2, se relacionaran los contenidos te\u00f3rica, con la sintaxis del lenguaje Los alumnos deber\u00e1n asistir a los laboratorios en las semanas establecidas para ello, donde se les dar\u00e1 una ejercitaci\u00f3n guiada sobre cada tipo de estructura de datos. Se pone a disposici\u00f3n de los alumnos tanto en los laboratorios como en el campus de una versi\u00f3n descargable de Turbo Pascal 7.0, del Free Pascal, del DEV Pascal y de tutoriales. Laboratorio de Rob\u00f3tica A partir del segundo cuatrimestre se desarrollaron los contenidos te\u00f3ricos relacionando con el lenguaje pascal y el Ansi C. Se propiciar\u00e1 la implementaci\u00f3n de subalgoritmos en C. Los tutoriales para este lenguaje y el lenguaje en si, estar\u00e1n disponibles para los alumnos tanto en el aula virtual como en los laboratorios. Materiales curriculares: \u00b6 Revistas, publicaciones, apuntes, textos, software, videos, internet, equipamiento did\u00e1ctico, otros. Filminas, gu\u00edas de pr\u00e1ctica, Campus virtual, libros digitales, proyector, links en internet. Formaci\u00f3n Practica \u00b6 Consignar la carga horaria parcial vinculada a cada uno de los cuatro grupos que se indican a continuaci\u00f3n y la carga total dedicada a la esta formaci\u00f3n: Formacion experimental \u00b6 Laboratorio del Lenguaje PASCAL \u00b6 \u00c1mbito de realizaci\u00f3n Aulas Inform\u00e1ticas (laboratorios) 1 y 2, 5 y 6. Disponibilidad de infraestructura y equipamiento 1 PC cada 2 alumnos, con el software necesario y conexi\u00f3n a Internet. Actividades a desarrollar Funciona en modalidad de taller En la primera clase se presenta el entorno de desarrollo y el lenguaje a utilizar, para la edici\u00f3n, compilaci\u00f3n, ejecuci\u00f3n y depuraci\u00f3n de programas. Se orienta a los alumnos y se ensaya la descarga e instalaci\u00f3n; se desarrollan habilidades pr\u00e1cticas para la operaci\u00f3n y aplicaci\u00f3n de los equipos y el entorno. Durante el desarrollo del taller se van introduciendo buenas pr\u00e1cticas de codificaci\u00f3n, como as\u00ed tambi\u00e9n normas y buenas pr\u00e1cticas para el desarrollo de sesiones de trabajo, cuidado de los equipos, resguardo de datos, cuidado y mantenimiento del aula inform\u00e1tica y los equipos. Para la ejercitaci\u00f3n se utiliza una gu\u00eda de ejercicio preparada especialmente para el desarrollo del laboratorio del lenguaje, codificando en orden de complejidad creciente, a los efectos de evidenciar por prueba y error las distintas estructuras tanto de datos como de acciones. Carga horaria 8 hs (2 talleres de 4 hs cada uno) Se desarrollan en la semana del 2do llamado de ex\u00e1menes finales (semana del 10 de julio). Se utiliza esta fecha por ser esta una materia de primer a\u00f1o anual, por lo tanto los alumnos no tienen ex\u00e1menes en dicha semana, y no hay inconvenientes de colisi\u00f3n de horarios entre las otras materias y adem\u00e1s la mayor disponibilidad de los laboratorios, a los efectos de asegurar mediante varios turnos la posibilidad de acceso a las PC de no m\u00e1s de dos alumnos en cada m\u00e1quina. Evaluaci\u00f3n El docente a cargo del taller y sus auxiliares llevan registro de asistencia y participaci\u00f3n de los alumnos; as\u00ed como revisan el desarrollo de la ejercitaci\u00f3n, sugiriendo distintos caminos de acci\u00f3n. Laboratorio de Rob\u00f3tica (lenguaje Ansi C) \u00b6 Se desarrolla en forma de autogesti\u00f3n, mediante la entrega de tutoriales y la descarga del software en las PCs propios de los estudiantes, a los efectos de que tomen conocimiento de las herramientas b\u00e1sicas del lenguaje que luego utilizar\u00e1n para la programaci\u00f3n del TPI. Evaluaci\u00f3n La evaluaci\u00f3n de este lenguaje se har\u00e1 en forma conjunta con la del TPI. Resoluci\u00f3n de problemas de ingenier\u00eda \u00b6 Trabajo de cierre del Laboratorio de Pascal \u00b6 \u00c1mbito de realizaci\u00f3n Extra-\u00e1ulico con apoyatura en las clases Disponibilidad de infraestructura y equipamiento Uso de herramientas del Google y OFFICE365 y equipamiento del grupo de trabajo de los alumnos Actividades a desarrollar Trabajo colaborativo. Comprensi\u00f3n, An\u00e1lisis, Dise\u00f1o de estrategias de Soluci\u00f3n, Edici\u00f3n, Compilaci\u00f3n, Documentaci\u00f3n, Prueba y Depuraci\u00f3n de aplicaciones (programas) Se plantea para el primer cierre la confecci\u00f3n de un sistema m\u00ednimo a ser desarrollado bajo restricciones y definiciones elaboradas por la c\u00e1tedra en lenguaje PASCAL. Carga Horaria 10 hs Los alumnos desarrollan la actividad en forma grupal comunic\u00e1ndose en forma oral o a trav\u00e9s de las herramientas del Google drive y el Office 365, y presentando la tarea en el campus. Evaluaci\u00f3n Cada trabajo es observado, corregido y evaluado por los docentes El mismo se desarrolla en forma grupal (no m\u00e1s de 3 alumnos por grupo) o individual (caso excepcional) Actividades de proyecto y dise\u00f1os: Trabajo Practico Integrador \u00b6 \u00c1mbito de realizaci\u00f3n Extra-\u00e1ulico con apoyatura en las clases y acceso al laboratorio de Rob\u00f3tica (IEM) en forma presencial durante el 4to llamado. Disponibilidad de infraestructura y equipamiento: uso de herramientas del Google y OFFICE365 y equipamiento del grupo de trabajo de los alumnos. Aporte de plaquetas y motores por la c\u00e1tedra. Software Ansi C Actividades a desarrollar Trabajo colaborativo. Comprensi\u00f3n, An\u00e1lisis, Dise\u00f1o de estrategias de Soluci\u00f3n, Dise\u00f1o y Creaci\u00f3n de un prototipo f\u00edsico de un Robot, Implementaci\u00f3n y programaci\u00f3n de plaquetas Arduino. Documentaci\u00f3n y ejecuci\u00f3n real del prototipo. Se plantea la confecci\u00f3n de robot b\u00e1sico seg\u00fan dise\u00f1o del grupo que tenga movilidad de adelante-atr\u00e1s y giro, mediante legos, rastis, madera balsa u isopor, el que luego ser\u00e0 movilizado mediante la programaci\u00f3n de plaquetas Arduino uno, en Ansi C. Las plaquetas y motores ser\u00e1n suministrados en pr\u00e9stamo por la c\u00e1tedra. Carga Horaria 10 hs presenciales a ser utilizadas para la programaci\u00f3n de las plaquetas en el laboratorio de Robotica (IEM) con la colaboraci\u00f3n de los docentes a cargo del mismo. El trabajo previo ser\u00e1 extra-a\u00falico. Los alumnos desarrollan la actividad en forma grupal comunic\u00e1ndose en forma oral o a trav\u00e9s de las herramientas del Google drive y el Office 365, y presentando la tarea en el campus. Evaluaci\u00f3n Cada trabajo es observado, corregido y evaluado por los docentes. El mismo se desarrolla en forma grupal (no m\u00e1s de 3 alumnos por grupo) o individual (caso excepcional). Tendr\u00e1 varias etapas: El dise\u00f1o en papel del robot, y la confecci\u00f3n f\u00edsica de dicho robot. La programaci\u00f3n de la movilidad del robot y la presentaci\u00f3n del mismo a la comunidad de la FRRE. Pr\u00e1ctica profesional supervisada \u00b6 No se consigna Evaluaci\u00f3n del alumno \u00b6 Momentos \u00b6 Tipos/Momentos Instrumentos Criterios Diagn\u00f3stica/Inicial No se realiza Formativa/Procesual Cuestionarios Guia de Trabajos Pr\u00e1cticos N\u00famerico Conceptual Sumativa/Final Parciales y Trabajo de Cierre de Laboratorios N\u00famerico Evaluaci\u00f3n inicial/diagn\u00f3stica: no se realiza, dado que los alumnos cursantes han aprobado el seminario de introducci\u00f3n a la carrera, donde tienen una materia espec\u00edfica con contenidos de nivelaci\u00f3n algor\u00edtmica. Evaluaci\u00f3n formativa: se realiza mediante el control de los cuestionarios que los alumnos deben desarrollar en el aula virtual y de la presentaci\u00f3n del TP (integrador) que elaboran en forma grupal Evaluaci\u00f3n Procesual: la realizan los auxiliares docentes durante el desarrollo de las pr\u00e1cticas, y en los laboratorios. Instrumentos \u00b6 Se determinan 4 instancias de evaluaci\u00f3n constituidas por: Ex\u00e1menes parciales: Se evaluar\u00e1 individualmente los contenidos te\u00f3ricos-pr\u00e1cticos de las unidades. La importancia de la teor\u00eda es igual que la de la pr\u00e1ctica, por lo que para aprobar cada parcial el alumno debe aprobar ambas partes. Se tomar\u00e1n 3(tres) parciales. Cuestionarios en el aula virtual: se han programado 21(veintiun) cuestionarios de autogesti\u00f3n individuales con notas de 0: no realizado y de 1 a 10.; a los efectos de promediar al finalizar el ciclo. Trabajo de cierre del laboratorio: se prevee 1(uno), referido al lenguaje PASCAL, modalidad grupal y colaborativa. Se evaluar\u00e1 simplemente como: Aprobado: nota 6 Desaprobado: nota 4 No presentado: nota 0 Trabajo pr\u00e1ctico integrador: se prevee 1(uno), modalidad grupal y colaborativa. La nota final ser\u00e1 el promedio de cada una de las etapas de evaluaci\u00f3n de dicho TPI, donde cada etapa se evalua de 1 a 10. Actividades \u00b6 Se busca la participaci\u00f3n del alumno en clase, y en algunos temas se propiciar\u00e1 el desarrollo de clases grupales especiales. Se posee una gu\u00eda de trabajos pr\u00e1cticos que el alumno debe desarrollar en las clases de pr\u00e1ctica. Se desarrollan contenidos de apoyo en el aula virtual, con la exigencia de contestar cuestionarios de correcci\u00f3n autom\u00e1tica (lecciones de avance individual, trabajos en el lenguaje, etc) Se ha generado una gu\u00eda de ejemplo-tipo de programas en el lenguaje PASCAL, que se explicitar\u00e1 durante los laboratorios del lenguaje. Se utilizar\u00e1 el lenguaje C a partir del segundo cuatrimestre, para lo cual tambi\u00e9n existe un apunte sobre dicho lenguaje. Trabajo pr\u00e1ctico integrador Robot b\u00e1sico con instancia evaluativa del dise\u00f1o del prototipo y otra instancia del trabajo terminado. Criterios \u00b6 Aprobaci\u00f3n Directa: \u00b6 Debe satisfacer el 75% de asistencia a las clases y a los laboratorios del lenguaje. Debe aprobar los tres parciales. Debe promediar como m\u00ednimo una nota 6(seis) entre los cuestionarios del aula virtual. Debe aprobar el trabajo de cierre del laboratorio de PASCAL. Debe promediar como m\u00ednimo una nota 6(seis) el Trabajo Practico Integrador. Solo podr\u00e1 hacer uso de recuperatorio en dos de los parciales. Aprobaci\u00f3n de Cursada: \u00b6 Debe satisfacer el 75% de asistencia a las clases y a los laboratorios del lenguaje. Debe aprobar los tres parciales con nota m\u00ecnima de 6(seis). Debe promediar como m\u00ednimo una nota 6(seis) entre los cuestionarios del aula virtual. Debe aprobar con nota 6(seis) el trabajo de cierre del laboratorio de PASCAL. Debe promediar como m\u00ednimo una nota 6(seis) el Trabajo Practico Integrador. Podr\u00e1 hacer uso de recuperatorio en: Cada uno de los parciales (los que se llevar\u00e1n a cabo a los 15 dias de la toma del correspondiente parcial) Podr\u00e1n presentar nuevamente el trabajo de cierre del laboratorio de PASCAL, en los recuperatorios que se consignan en el calendario. Podr\u00e1 corregir el Trabajo Practico Integrador, en los recuperatorios que se consignan en el calendario. Asignaturas o conocimientos con que se vincula la materia: \u00b6 El alumno deber\u00e1 aprender en esta asignatura, las t\u00e9cnicas apropiadas a las distintas representaciones de los procesos inform\u00e1ticos, para posteriormente integrar dichos conceptos y estrategias con las sintaxis y sem\u00e1nticas elementales de los lenguajes modernos de programaci\u00f3n, a desarrollar en las asignaturas que le contin\u00faan (SINTAXIS Y SEMANTICA DE LENGUAJES, PARADIGMAS DE PROGRAMACION), introduci\u00e9ndolos en los modelos de arboles de informaci\u00f3n, para formar la conocimientos previos necesarios para adentrarse en el tema de bases de datos que es propio de la asignatura Gesti\u00f3n de Datos. Actividades de Coordinaci\u00f3n (horizontal y vertical): \u00b6 En el segundo cuatrimestre del 2016 se realiz\u00f3 una reuni\u00f3n de responsables de AED entre todas las regionales de UTN que dictan ISI. En dicha reuni\u00f3n se determinaron contenidos prioritarios y se determin\u00f3 sobre la profundidad a alcanzar en cada tema, as\u00ed como que lenguajes utilizar como soporte de la pr\u00e1ctica. Como consecuencia de esos acuerdos, es la elecci\u00f2n de los lenguajes PASCAL y C. Durante el ciclo 2016 se ha determinado que Arquitectura de Computadoras (ADC) sea cursada en el segundo a\u00f1o, si bien no podemos coordinar el desarrollo de contenidos, hemos previsto que en la c\u00e0tedra de ADC tomen la plaqueta Arduino que utilizamos en AED y la estudien desde el punto de vista de su arquitectura. Con las materias siguientes del \u00e1rea de programaci\u00f3n, ya se ha articulado desde el inicio de la implementaci\u00f3n del plan 2008. Adem\u00e1s, dado que en el TPI deben dibujar el robot a presentar, se ha coordinado con la c\u00e1tedra de Sistemas de Representaci\u00f3n (SDR) de segundo a\u00f1o, para que durante el dictado de la misma, los alumnos realicen la representaci\u00f3n gr\u00e1fica formal en detalle del robot elaborado para AED. Bibliograf\u00eda \u00b6 Obligatoria \u00b6 Lucas M., Peyrin J., Scholl P. Algor\u00edtmica y Representaci\u00f3n de datos. Tomo I. Secuencias, aut\u00f3matas de estados finitos. Masson, 1985. Tremblay JP, Bunt R. Introducci\u00f3n a la ciencia de las computadoras: enfoque algor\u00edtmico. McGraw-Hill, 1982. Braunstein S, Gioia A. Introducci\u00f3n a la programaci\u00f3n y a las estructuras de datos. Eudeba, 1986 Wirth N. Algoritmos + estructuras de datos = programas. Ediciones del Castillo, 1980 Lucas M., Peyrin J., Scholl P. Algor\u00edtmica y Representaci\u00f3n de datos. Volumen 2. Masson, 1986. Rosa Guerequeta y Antonio Vallecillo. T\u00e9cnicas de Dise\u00f1o de Algoritmos. (libro digital ISBN: 84-7496-666-3) Complementaria \u00b6 S. Baase. Computer Algorithms: Introduction to Design and Analysis. AddisonWesley, 1988. C. Barry. TopSpeed Modula-2. Addison-Wesley, 1991. M. Bellmore y G. Nemhauser. The Travelling Salesman Problem: a Survey. Operation Research, Vol. 16, n\u00ba3, 538\u2013558, 1968. J.L. Bentley. Multidimensional Divide and Conquer. Comms. of the ACM, Vol. 23, n\u00ba4, 214\u2013229,1980. J.L. Bentley. A General Method for Solving Divide and Conquer Recurrences. SIGACT News ACM, Vol. 12, n\u00ba3, 36\u201344, 1980. J.L. Bentley. Programming Pearls: Algorithm Design Techniques. Comms. of the ACM, Vol. 27, n\u00ba9, 865\u2013871, 1984. J.L. Bentley. Programming Pearls. Addison-Wesley, 1989. R.S. Bird. Notes on Recursion Elimination. Comms. of the ACM, Vol. 20, n\u00ba 6, 434\u2013439, 1977. G. Brassard y P. Bratley. Fundamentos de Algoritmia. Prentice Hall, 1997. L. Chang y J. Korsh. Canonical Coin Changing and Greedy Solutions. Journal of the ACM, Vol. 23, n\u00ba 3, 418\u2013422, 1976. T.H. Cormen, C.E. Leiserson y R.L. Rivest. Introduction to Algorithms. MIT Press, 1989. G. Ford y R. Wienes. Modula-2, A Software Development Approach. John Wiley & Sons, NewYork, 1985. J. G\u00e1lve, J.C. Gonz\u00e1lez, A. S\u00e1nchez y J.A. Vel\u00e1zquez. Algor\u00edtmica: Dise\u00f1o y An\u00e1lisis de Algoritmos Funcionales e Imperativos. RA-MA, 1993. M.R. Garey y D. Johnson. Computers and Intractability. W.H. Freeman and Company, New York, 1979. Equipo Docente \u00b6 Lista \u00b6 Profesores \u00b6 Nombre y Apellido Categor\u00cda Concursado/Interino Dedicaci\u00f3n Horario Mirtha Eve Giovannini Titular Concursado 2 DS Martes 11.40 hs a 13.10 hs Jueves 9.15 hs a 10.55 hs Diego Bolatti Adjunto Interino 1 DS Jueves 18.00 hs a 19.30 hs Noelia Pinto Adjunto Interino 1 DS Viernes 17.10 hs a 18.40 hs Auxiliares \u00b6 Nombre y Apellido Categoria Concursado/Interino Dedicaci\u00f3n Horario Ilse Hodapp JTP Concursado 1 DS Mi\u00e9rcoles 16.25 hs a 18.40 hs Mi\u00e9rcoles 18.45 hs a 21.00 hs Nicolas Tortosa JTP Interino 1 DS Viernes 8.30 hs a 10.55 hs Viernes 10.55 hs a 13.15 hs Juan Esteban Colcombet Auxiliar 1 ra Interino 1 DS Mi\u00e9rcoles 16.25 hs a 18.40 hs Mi\u00e9rcoles 18.45 hs a 21.00 hs Nelson Yaccuzzi Auxiliar 1 ra Interino 1 DS Mi\u00e9rcoles 16.25 hs a 18.40 hs Mi\u00e9rcoles 18.45 hs a 21.00 hs Emiliano Pollero Auxiliar 2 da Interino 1 DS Viernes 8.30 hs a 10.55 hs Viernes 10.55 hs a 13.15 hs Mauro Rojas Auxiliar 2 da Interino 1 DS Viernes 8.30 hs a 10.55 hs Viernes 10.55 hs a 13.15 hs Distribucion de Tareas \u00b6 Mirtha Eve Giovannini \u00b6 Responsable de c\u00e1tedra Determinaci\u00f3n de los criterios de regularizaci\u00f3n, promoci\u00f3n de la parte pr\u00e1ctica y de la promoci\u00f3n directa Confecci\u00f3n de la planificaci\u00f3n de la asignatura Dictado de teor\u00eda en las comisiones A y B Elaboraci\u00f3n de los cuestionarios y actividades del Aula virtual Seguimiento y control de las actividades de los alumnos en el Aula Virtual Control de la Guia de TP Elaboraci\u00f3n y control de los apuntes del Aula Virtual Confecci\u00f3n de modelos de ex\u00e1menes finales Control y aprobaci\u00f3n de modelos de ex\u00e1menes parciales Toma y correcci\u00f3n de ex\u00e1menes finales Planificaci\u00f3n de los laboratorios del lenguaje Confecci\u00f3n de las consignas del trabajo de cierre del laboratorio Pascal Coordinaci\u00f3n del TPI Desarrollo de actividades dentro de 2 proyectos de investigaci\u00f3n aprobados para el ciclo 2019-2021 Tareas de control del campus: Lunes a viernes de 2 hs a determinar Diego Bolatti \u00b6 Dictado de teor\u00eda en las comisiones D Confecci\u00f3n de modelos de ex\u00e1menes finales Dictado del taller del lenguaje Pascal turno noche Correcci\u00f3n y evaluaci\u00f3n del trabajo pr\u00e1ctico integrador Confecci\u00f3n de ex\u00e1menes parciales (teor\u00eda) Toma y correcci\u00f3n de ex\u00e1menes finales Noelia Pinto \u00b6 Dictado de teor\u00eda en las comisiones C Confecci\u00f3n de modelos de ex\u00e1menes finales Dictado del taller del lenguaje Pascal turno tarde Correcci\u00f3n y evaluaci\u00f3n del trabajo pr\u00e1ctico integrador Confecci\u00f3n de ex\u00e1menes parciales (teor\u00eda) Toma y correcci\u00f3n de ex\u00e1menes finales Ilse Hodapp \u00b6 Responsable directa de la pr\u00e1ctica en todas las comisiones Desarrollo de las practicas en las comisiones C y D Elaboraci\u00f3n de la Guia de TP, con la colaboraci\u00f3n de los otros auxiliares Confecci\u00f3n y control de modelos de ex\u00e1menes parciales practicos Control de las evaluaciones parciales, de toda la c\u00e1tedra Toma de ex\u00e1menes parciales en las comisiones C y D Dictado del taller del lenguaje turno tarde Evaluaci\u00f3n del trabajo de cierre Lab Pascal comision C y D Responsable de la carga de notas en el SYSACAD comisiones C y D Nico Tortosa \u00b6 Desarrollo de las practicas en las comisiones A y B Colaboraci\u00f3n en la confecci\u00f3n del la Guia de TP Confecci\u00f3n y control modelos de ex\u00e1menes parciales practicos Toma de ex\u00e1menes parciales en las comisiones A y B Dictado del taller del lenguaje turno ma\u00f1ana Evaluaci\u00f3n del trabajo de cierre Lab Pascal comision A y B Responsable de la carga de notas en el SYSACAD comisiones A y B Juan Esteban Colcombet \u00b6 Colaborar con el desarrollo de la pr\u00e1ctica Colaborar con el dictado del taller del lenguaje turno tarde-noche Colaborar con la evaluaci\u00f3n del trabajo de cierre del Lab Pascal Nelson Yaccuzzi \u00b6 Colaborar con el desarrollo de la pr\u00e1ctica Colaborar con el dictado del taller del lenguaje turno tarde-noche Colaborar con la evaluaci\u00f3n del trabajo de cierre del Lab Pascal Emiliano Pollero \u00b6 Colaborar con el desarrollo de la pr\u00e1ctica Colaborar con el dictado del taller del lenguaje turno ma\u00f1ana Colaborar con la evaluaci\u00f3n del trabajo de cierre del Lab Pascal Mauro Rojas \u00b6 Colaborar con el desarrollo de la pr\u00e1ctica Colaborar con el dictado del taller del lenguaje turno ma\u00f1ana Colaborar con la evaluaci\u00f3n del trabajo de cierre del Lab Pascal Los profesores son los encargados del desarrollo del contenido te\u00f3rico y los auxiliares docentes de la realizaci\u00f3n de la pr\u00e1ctica de ejercicios. Para los laboratorios y en funci\u00f3n de la cantidad de puestos de trabajo, todo el equipo docente trabajar\u00e1 en forma coordinada bajo la direcci\u00f3n del responsable de c\u00e1tedra, pero ocup\u00e1ndose en forma indistinta las tareas de contenido te\u00f3rico y de implementaci\u00f3n en las m\u00e1quinas. Los recursos a utilizar (filminas, cuestionarios, actividades en el campus) ser\u00e1n supervisados por la responsable de c\u00e1tedra, y en la primera reuni\u00f3n anual de la c\u00e1tedra se establecer\u00e1n quienes ser\u00e1n los responsables de confecci\u00f3n de dichos recursos, como as\u00ed tambi\u00e9n de los textos de los ex\u00e1menes parciales, recuperatorio y finales, a los efectos de ir formando en las distintas actividades docentes a todo el equipo. Justificacion \u00b6 La planta docentes de la materia con respecto a la ordenanza 604 ampliada, solo difiere en la cantidad de auxiliares de segunda. La ordenanza da 1(una) designacion de aux de 1era y la c\u00e1tedra ha solicitado 3 (tres) designaciones de auxiliares de 2da, pero dicha ordenanza no establece que cantidad de alumnos debe haber en cada comisi\u00f3n. El regimen de promoci\u00f3n directa exige un seguimiento casi individual de los alumnos. La relaci\u00f3n docente-alumnnos que ser\u00eda la ideal para trabajar con alumnos (sobretodo si son de 1er a\u00f1o) es de aproximadamente 25 a 30 alumnos por docente. A la fecha de confecci\u00f3n de esta planificaci\u00f3n, y teniendo en cuenta los guarismos de alumnos por divisi\u00f3n de a\u00f1os anteriores, para una cantidad de 300 alumnos a raz\u00f3n de 30 a/d se necesitan 10 designaciones; con lo cual el plantel docente explicitado en esta planificaci\u00f3n, es el correcto. Articulacion \u00b6 Desarrollo de actividades dentro del proyecto de investigaci\u00f3n sobre perfiles de rendimiento de alumnos de AED. (UTI1719) segunda etapa. Este proyecto finaliz\u00f3 en diciembre del 2018. Actividades a realizar en dos proyectos de investigaci\u00f3n recien aprobados. Actividades planificadas \u00b6 Reuniones de asignatura y \u00e1rea. Reuniones de la materia se realizan antes del inicio y fin, de cada cuatrimestre y al cierre del ciclo lectivo. Generaci\u00f3n de material did\u00e1ctico de la asignatura, gu\u00edas de estudio, material multimedia, simulaciones o cualquier otro recurso utilizado para la ense\u00f1anza. El material did\u00e1ctico de la asignatura se encuentra subido al aula virtual de la materia. Presentaciones a congresos o eventos vinculados a la ense\u00f1anza. Se prev\u00e9 presentar la experiencia robotica en el evento de ROBOTEC a fin de a\u00f1o Actividades extra-acad\u00e9micas que aportan al crecimiento profesional de los docente,s relacionadas con la asignatura. Los profesores adjuntos, como los JTP y Auxiliar de 1era desarrollan tareas en el \u00e1mbito profesional relacionadas con el dise\u00f1o y la programaci\u00f3n. La profesora titular integra dos proyectos de investigaci\u00f3n recien aprobados y tiene a su cargo el \u00e1rea de Tecnolog\u00eca Educativa de la Direcci\u00f2n de Planeamiento. El Ing Bolatti, la Ing Pinto y el Ing Tortosa (JTP) forman parte del CInApTIC con proyectos de investigaci\u00f3n dentro del mismo y adem\u00e1s el ing Bolatti coordina el area de Redes y Telecomunicaciones del mismo y la Ing Pinto el area de Capacitaci\u00f2n y Formaci\u00f3n. El Ing Tortosa adem\u00e1s forma parte del equipo docente del proyecto 111MIL, y del INFORMATORIO. Actividades de formaci\u00f3n interna de los miembros de la c\u00e1tedra Formaci\u00f3n de auxiliares, actividades de capacitaci\u00f3n interna a la c\u00e1tedra, seminarios, etc. Los integrantes de la c\u00e1tedra asistir\u00e1n a cursos sobre perfeccionamiento docente planificados por la Sec Acad\u00e9mica y la Dir de Planeamiento ( Formaci\u00f3n por Competencias , Aula Moodle con herramienta por competencia y otros). La Ing Pinto se encuentra cursando el doctorado en la Universidad de La Plata. Adem\u00e1s en forma exclusiva para los docentes de la c\u00e1tedra el Ing Perez, dictar\u00e1 un curso intensivo de Programaci\u00f3n B\u00e1sica en ARDUINO, en fecha a determinar. Otras actividades vinculadas con la funci\u00f3n docencia. No se mencionan.","title":"Planificaci\u00f3n"},{"location":"plan/#planificacion","text":"","title":"Planificaci\u00f3n"},{"location":"plan/#catedra","text":"PLAN DE ESTUDIO: 2008 AREA: Programaci\u00f3n Porcentaje de horas c\u00e1tedra del \u00e1rea en la carrera: 12,6% Porcentaje de horas c\u00e1tedra de la asignatura en el \u00e1rea: 25% ASIGNATURA: Algoritmos y Estructuras de Datos Carga horaria semanal: 5 hs c\u00e1tedra Carga horaria total: 160 hs c\u00e1tedra NIVEL: 1 er Nivel ANUAL CICLO LECTIVO: 2019","title":"C\u00e1tedra"},{"location":"plan/#fundamentacion-de-la-asignatura","text":"1. Explicar la importancia de la asignatura y posibilidades de desarrollo que promueve respecto a la trayectoria formativa del futuro 'Ingeniero/Licenciado' en relaci\u00f3n al Perfil Profesional del Egresado y Competencias propuestas en el LR: Gen\u00e9ricas, Tecnol\u00f3gicas y Espec\u00edficas. Seg\u00fan el Libro Rojo del CONFEDI, la carrera de Ingenier\u00eda en Sistemas de Informaci\u00f3n tiene como actividad reservada: Especificar, proyectar y desarrollar sistemas de informaci\u00f3n Dirigir y controlar la implementaci\u00f3n, operaci\u00f3n y mantenimiento de los sistemas de informaci\u00f3n En funci\u00f3n de esto, dentro de las Tecnolog\u00edas B\u00e1sicas, se encuentra el \u00edtem PROGRAMACI\u00d3N. Los contenidos de la materia apuntan a brindar el conocimiento para la soluci\u00f3n de problemas de la Ingenier\u00eda EN SISTEMAS DE INFORMACI\u00d3N teniendo como fundamento las herramientas de la programaci\u00f3n 2. Enunciar las competencias y sub-competencias Tecnol\u00f3gicas Identificar, formular y resolver problemas algoritmicos Aprender estructuras de datos y acciones Concebir, dise\u00f1ar y desarrollar programas Aprender lenguajes de programaci\u00f3n Desarrollar la capacidad de obtener soluciones de acuerdo a la necesidad planteada Utilizar de manera efectiva las t\u00e9cnicas y herramientas de la programaci\u00f3n Aprender las t\u00e9cnicas de la programaci\u00f3n Espec\u00edficas Especificar, proyectar y desarrollar soluciones algoritmicas Resolver problemas algor\u00edtmicos t\u00edpicos utilizando criteriosamente las estructuras tanto de datos como de acciones Especificar, proyectar y desarrollar Programas. Traducir las soluciones algor\u00ectmicas de pseudoc\u00f3digo a programas mediante Pascal Controlar la implementaci\u00f3n, operaci\u00f3n y mantenimiento de programas Resolver situaciones pr\u00e1cticas de manejo de robots con Ansi C Sociales, Pol\u00edticas y Actitudinales Aprender en forma continua y aut\u00f3noma Utilizar los contenidos te\u00f3ricos y bibliogr\u00e1ficos del aula Resolver casos estudio en equipos y de forma individual Comunicarse con efectividad Participar en los foros de debate Realizar una presentaci\u00f3n oral de casos de estudio en coloquios finales Desempe\u00f1arse de manera efectiva en equipos de trabajo Participar en los diferentes roles de equipo para resolver casos pr\u00e1cticos en el aula, en el laboratorio y en el TPI","title":"Fundamentaci\u00f3n de la asignatura"},{"location":"plan/#objetivos","text":"Identificar problemas algor\u00edtmicos y sus soluciones m\u00e1s eficientes. Conocer el proceso de dise\u00f1o e implementaci\u00f3n de software. Aplicar las herramientas fundamentales representativas de los procesos, integrando la sintaxis elemental de un lenguaje de programaci\u00f3n en el laboratorio asociado y en proyectos de rob\u00f3tica.","title":"Objetivos"},{"location":"plan/#contenidos","text":"","title":"Contenidos"},{"location":"plan/#unidad-i-introduccion-a-la-algoritmia","text":"","title":"Unidad I: Introducci\u00f3n a la Algoritmia"},{"location":"plan/#objetivos_1","text":"Identificar las acciones involucradas en un problema. Reconocer los estados de los objetos antes y despu\u00e9s de la acci\u00f3n realizada. Descomponer una acci\u00f3n en t\u00e9rminos de otras m\u00e1s elementales. Utilizar un l\u00e9xico m\u00ednimo com\u00fan. Comprender el significado del t\u00e9rmino Algoritmo","title":"Objetivos"},{"location":"plan/#contenido","text":"Estrateg\u00edas de resoluci\u00f3n de problemas: algoritmos, descripci\u00f3n narrada, seudoc\u00f3digos, diagramas, tablas de decisi\u00f3n. Concepto de acci\u00f3n, estado, procesador y proceso. Concepto de m\u00e1quina, algoritmo y programa. Formas de representar los procesos. Esquemas. Concepto de dato y tipolog\u00eda de datos. Tipos elementales de datos. La operaci\u00f3n asignaci\u00f3n. Especificaci\u00f3n de la acci\u00f3n a realizar en funci\u00f3n de los estados. Concepto de estado intermedio. Descomposici\u00f3n de una acci\u00f3n en t\u00e9rminos de otras m\u00e1s elementales.Composici\u00f3n secuencial de acciones. Elementos b\u00e1sicos de la notaci\u00f3n algor\u00edtmica. Expresiones: tipos, operadores. precedencia de los operadores. Evaluaci\u00f3n de las expresiones. Errores: tipos de errores. El concepto de prueba del algoritmo.","title":"Contenido"},{"location":"plan/#bibliografia","text":"Lucas M., Peyrin J., Scholl P. Algor\u00edtmica y Representaci\u00f3n de datos. Tomo I. Secuencias, aut\u00f3matas de estados finitos. Masson, 1985 Tremblay JP, Bunt R. Introducci\u00f3n a la ciencia de las computadoras: enfoque algor\u00edtmico. McGraw-Hill, 1982.","title":"Bibliograf\u00eda"},{"location":"plan/#unidad-ii-secuencias","text":"","title":"Unidad II: Secuencias"},{"location":"plan/#subunidad-a-nocion-de-secuencia","text":"","title":"Subunidad A: Noci\u00f3n de Secuencia"},{"location":"plan/#objetivos_2","text":"Definir formalmente una secuencia. Enunciar y explicar las funciones de acceso a la secuencia Emplear los operadores de construcci\u00f3n de secuencias Reconocer en un conjunto de informaci\u00f3n una partici\u00f3n en subsecuencias. Especificar algoritmos de tratamiento de secuencia. Criticar soluciones para problemas de tratamiento de secuencias. Emplear sistem\u00e1ticamente los esquemas de tratamiento de secuencias","title":"Objetivos"},{"location":"plan/#contenido_1","text":"Noci\u00f3n de secuencia. Definici\u00f3n formal de secuencia. Funciones de acceso a elementos de una secuencia. Operadores de construcci\u00f3n de secuencias.","title":"Contenido"},{"location":"plan/#subunidad-b-descomposicion-y-tratamiento-de-secuencias","text":"","title":"Subunidad B: Descomposici\u00f3n y Tratamiento de Secuencias"},{"location":"plan/#objetivos_3","text":"Emplear el an\u00e1lisis por caso. Componer acciones condicionadas. Combinar condiciones Componer acciones que se repiten Conocer las distintas estructuras de repetici\u00f3n Enunciar el teorema fundamental de la programaci\u00f3n estructurada","title":"Objetivos"},{"location":"plan/#contenido_2","text":"Descomposici\u00f3n y composici\u00f3n de algoritmos:Subalgoritmos. Noci\u00f3n de par\u00e1metro. Parametrizaci\u00f3n de acciones. Noci\u00f3n de procedimientos y funciones. Acciones condicionadas. An\u00e1lisis por caso. Alternativa, ejecuci\u00f3n condicionada y selecci\u00f3n m\u00faltiple. Acciones que se repiten. Noci\u00f3n de las estructuras ..REPETIR...HASTA QUE..,MIENTRAS.... REPETIR, ITERAR. Teorema fundamental de la programaci\u00f3n estructurada y unicidad de puntos de entrada y salidas. La prueba de escritorio. Noci\u00f3n de acumulaci\u00f3n e invariante.","title":"Contenido"},{"location":"plan/#bibliografia_1","text":"Lucas M., Peyrin J., Scholl P. Algor\u00edtmica y Representaci\u00f3n de datos. Tomo I. Secuencias, aut\u00f3matas de estados finitos. Masson, 1985 Braunstein S, Gioia A. Introducci\u00f3n a la programaci\u00f3n y a las estructuras de datos. Eudeba, 1986","title":"Bibliograf\u00eda"},{"location":"plan/#unidad-iii-estructuras-de-datos","text":"","title":"Unidad III: Estructuras de Datos"},{"location":"plan/#subunidad-a-campo-registro-archivo","text":"","title":"Subunidad A: Campo, registro, archivo"},{"location":"plan/#objetivos_4","text":"Definir el modelo de archivo secuencial. Especificar algoritmos de tratamiento de secuencia. Criticar soluciones para problemas de tratamiento de secuencias. Emplear sistem\u00e1ticamente los esquemas de tratamiento de secuencias","title":"Objetivos"},{"location":"plan/#contenido_3","text":"Concepto de datos estructurados. Clasificaci\u00f3n en est\u00e1ticos y din\u00e1micos. Campos continentes y contenido. Registros. Selectores de campo. Modelo de archivo secuencial: operaciones de AVANZAR, ARRANCAR, CREAR y AGREGAR. Esquemas de tratamiento de secuencias para el modelo: recorrido y creaci\u00f3n. Noci\u00f3n de secuencia abstracta. Dise\u00f1o descendente. Noci\u00f3n de secuencia","title":"Contenido"},{"location":"plan/#bibliografia_2","text":"Lucas M., Peyrin J., Scholl P. Algor\u00edtmica y Representaci\u00f3n de datos. Tomo I. Secuencias, aut\u00f3matas de estados finitos. Masson, 1985 Wirth N. Algoritmos + estructuras de datos = programas. Ediciones del Castillo, 1980","title":"Bibliograf\u00eda"},{"location":"plan/#subunidad-b-arreglos","text":"","title":"Subunidad B: Arreglos"},{"location":"plan/#objetivos_5","text":"Definir un arreglo a partir de la representaci\u00f3n tabulada de una funci\u00f3n. Definir los conceptos de tipo base y tipo \u00edndice. Emplear arreglos en la soluci\u00f3n de problemas. Interpretar arreglos n-dimensionales Dise\u00f1ar arreglos uni y n-dimensionales. Escribir esquemas fundamentales de ordenamiento y b\u00fasqueda","title":"Objetivos"},{"location":"plan/#contenido_4","text":"Representaci\u00f3n tabulada de una funci\u00f3n. Tipo base y tipo \u00edndice. Arreglos uni-dimensionales y n-dimensionales. Recorrido. Esquemas de ordenaci\u00f3n: por inserci\u00f3n directa, por selecci\u00f3n directa, por intercambio directo, por partici\u00f3n. Esquemas de b\u00fasqueda. B\u00fasqueda en arreglos ordenados. Arreglos de registros. Aplicaci\u00f3n de arreglos en la t\u00e9cnica de dise\u00f1o de Programaci\u00f3n Din\u00e1mica.","title":"Contenido"},{"location":"plan/#bibliografia_3","text":"Wirth N. Algoritmos + estructuras de datos = programas. Ediciones del Castillo, 1980","title":"Bibliograf\u00eda"},{"location":"plan/#subunidad-c-listas-lineales","text":"","title":"Subunidad C: Listas lineales"},{"location":"plan/#objetivos_6","text":"Definir formalmente una estructura avanzada Enunciar y explicar las funciones de acceso a las mismas y sus restricciones Reconocer en un conjunto de informaci\u00f3n la necesidad de una estructura de avanzada. Definir el modelo de listas lineales. Especificar algoritmos de tratamiento de las listas. Criticar soluciones para problemas de tratamiento de listas. Emplear sistem\u00e1ticamente los esquemas de tratamiento de secuencias en los procesos de listas.","title":"Objetivos"},{"location":"plan/#contenido_5","text":"Clasificaci\u00f3n. Listas Lineales. Organizaci\u00f3n y acceso. Clases: particularizadas y generalizadas. Concepto de restricci\u00f3n. Noci\u00f3n de puntero. Operaciones con listas: recorrido - inserci\u00f3n - eliminaci\u00f3n.","title":"Contenido"},{"location":"plan/#bibliografia_4","text":"Wirth N. Algoritmos + estructuras de datos = programas. Ediciones del Castillo, 1980 Braunstein S, Gioia A. Introducci\u00f3n a la programaci\u00f3n y a las estructuras de datos. Eudeba, 1986 Tremblay JP, Bunt R. Introducci\u00f3n a la ciencia de las computadoras: enfoque algor\u00edtmico. McGraw-Hill, 1982","title":"Bibliograf\u00eda"},{"location":"plan/#unidad-iv-algoritmos-y-estructuras-recursivas","text":"","title":"Unidad IV: Algoritmos y estructuras recursivas"},{"location":"plan/#objetivos_7","text":"Enunciar la noci\u00f3n de funci\u00f3n recursiva. Comprender soluciones recursivas de problemas. Convertir soluciones recursivas en recurrentes. Crear procedimientos recursivos. Definir la estructura generalizada de datos","title":"Objetivos"},{"location":"plan/#contenido_6","text":"Noci\u00f3n de funci\u00f3n recursiva. Noci\u00f3n de acci\u00f3n recursiva. Interpretaci\u00f3n de algoritmos recursivos. Dise\u00f1o de algoritmos recursivos. T\u00e9cnica de Dise\u00f1o de algoritmos: Divide y Vencer\u00e1s: subproblemas independientes. Generalizaci\u00f3n de las estructuras de datos: \u00e1rbol. Definici\u00f3n y conceptos b\u00e1sicos. \u00c1rboles binarios y n-arios. Recorrido y procesos de \u00e1rboles binarios.","title":"Contenido"},{"location":"plan/#bibliografia_5","text":"Lucas M., Peyrin J., Scholl P. Algor\u00edtmica y Representaci\u00f3n de datos. Volumen 2. Masson, 1986. Wirth N. Algoritmos + estructuras de datos = programas. Ediciones del Castillo, 1980","title":"Bibliograf\u00eda"},{"location":"plan/#unidad-v-complejidad-computacional-y-nocion-de-orden","text":"","title":"Unidad V: Complejidad computacional y nocion de orden"},{"location":"plan/#objetivos_8","text":"Enunciar la noci\u00f3n de Complejidad Computacional Comprender la noci\u00f3n de orden de complejidad","title":"Objetivos"},{"location":"plan/#contenido_7","text":"Introducci\u00f3n a la noci\u00f3n de complejidad algor\u00edtmica. Tiempo de ejecuci\u00f3n. Estudio del caso mejor, caso medio y caso peor. Cotas de complejidad, medidas asint\u00f3ticas.. Ordenes de complejidad. Reglas de la notaci\u00f3n as\u00edntotica. Importancia de la eficiencia. Estimaci\u00f3n de la complejidad en algoritmos no recursivos.","title":"Contenido"},{"location":"plan/#bibliografia_6","text":"Rosa Guerequeta y Antonio Vallecillo. T\u00e9cnicas de Dise\u00f1o de Algoritmos. (libro digital ISBN: 84-7496-666-3)","title":"Bibliograf\u00eda"},{"location":"plan/#estrategias-metodologicas","text":"Considerar la/s metodolog\u00eda/s de ense\u00f1anza y aprendizaje a implementar seg\u00fan la unidad tem\u00e1tica y sub-competencia a desarrollar y el modo de agrupamiento","title":"Estrategias metodol\u00f3gicas"},{"location":"plan/#estrategias-de-ensenanza","text":"Las clases se desarrollar\u00e1n en forma entrelazada entre la teor\u00eda y la pr\u00e1ctica. El profesor de teor\u00eda desarrollar\u00e1 la parte conceptual, tratando de que el alumno descubra mediante ejemplos simples el contenido conceptual encerrado en los mismos y profundizando luego el conocimiento te\u00f3rico. Desarrollar\u00e1 adem\u00e1s ejemplos que provoquen el enlace con el contenido siguiente, de manera tal de crear en el alumno la inquietud por conocer c\u00f3mo resolver dicho inconveniente. Se sugerir\u00e1 a los alumnos que asistan con notebooks a las clases para favorecer el proceso de ense\u00f1anza-aprendizaje. La pr\u00e1ctica se desarrollar\u00e1 mediante la presentaci\u00f3n de problemas individualizados en correspondencia con la teor\u00eda, pero siempre se intentar\u00e1 cerrar la clase con un ejercicio integrador, en el cual el educando deba descubrir que estructura es la m\u00e1s conveniente y que proceso eficientiza la soluci\u00f3n del problema. Y si se desarrollaron en las PCs se los mostrar\u00e1 mediante el ca\u00f1\u00f3n. Se utilizar\u00e1n adem\u00e1s aplicaciones m\u00f3viles para integrar el tel\u00e9fono celular como recurso educativo a trav\u00e9s de evaluaciones online usando herramientas tales como Kahoot o Google Form. Adem\u00e1s, se har\u00e1 un uso extensivo e intensivo del recurso campus virtual, obligando a que cada semana el alumno deba contestar un cuestionario de autogesti\u00f3n. Durante los Ciclos Lectivos 2015-2017, se implement\u00f3 la estrategia Gamificaci\u00f3n con buenos resultados, en el ciclo 2018 hicimos uso de la elaboraci\u00f3n de un programa que de soluci\u00f3n a un CASO de estudio real centrado en diversas situaciones problem\u00e1ticas. En dichos ciclos se dej\u00f3 librado al criterio de los alumnos el uso del lenguaje para la confecci\u00f3n del juego o la resoluci\u00f3n del caso. Visto que la mayor\u00eda de los equipos optaban por el lenguaje PASCAL, y en funci\u00f3n de propiciar el uso del lenguaje C, en el presente ciclo se plantear\u00e1 un Trabajo Pr\u00e1ctico Integrador a desarrollarse en equipo donde la intenci\u00f3n es: Motivar la creatividad del estudiante,(dado que deber\u00e1 dise\u00f1ar y construir con diversos materiales, un robot b\u00e1sico) Promover el uso del lenguaje Ansi C, dado que utizaremos plaquetas Arduino Uno, para la programaci\u00f3n de los movimientos de dicho robot. Estrategia de Ense\u00f1anza Unidad/Eje Tem\u00e1tico Modo de Agrupamiento Organizaci\u00f3n de espacios Materiales Curriculares Aprendizaje Basado en problemas Todas las unidades Grupos peque\u00f1os de no mas de 5 estudiantes (flexible) Dentro de la Universidad: Aula Fuera de la Universidad: Aula virtual-trabajo en equipo remoto Presentaciones digitales (Powerpoint, Google Slides). Video. Apuntes digitalizados. Lecciones Moodle. Proyectos Integrador Grupos peque\u00f1os fijos de 5 estudiantes Dentro de la Universidad: Aula y Lab Rob\u00f3tica Fuera de la Universidad: Aula virtual-trabajo en equipo remoto Material de la c\u00e1tedra en PDF. Consignas del TPI. Tutoriales de Ansi C/Software. Plaquetas Arduino Uno. Motor Servo Debate Unidad 3 Subunidad B Comisi\u00f3n Dentro de la Universidad: Aula Presentaciones en PDF. Videos elaborados por los alumnos. Exposici\u00f3n dialogada Todas las teor\u00edas Comisi\u00f3n Dentro de la Universidad: Aula Presentaci\u00f3n PowerPoint Experiencias de Laboratorio Unidad 1-3 Comisi\u00f3n Dentro de la Universidad: Laboratorio inform\u00e1tico Gu\u00eda de Trabajo Pr\u00e1cticos. Tutoriales de los lenguajes Pascal y Ansi C. Software/equipo PC. Plaquetas Arduino Uno y motores servo. Coloquios Presentaci\u00f3n de los trabajos de cierre de los laboratorios Grupos peque\u00f1os fijos de 5 estudiantes Dentro de la Universidad: Laboratorio inform\u00e1tico y aulas Software/equipo PC. Carpeta del TPI. Robot constru\u00eddo.","title":"Estrategias de ense\u00f1anza"},{"location":"plan/#modalidad-de-agrupamientos","text":"Dada la envergadura del programa de contenidos a desarrollar, se utilizar\u00e1 siempre que sea posible, herramientas de apoyo tales como presentaciones digitales, o gu\u00edas de estudio (impresas o en forma online), y en las pr\u00e1cticas se propiciar\u00e1 el trabajo en grupos de discusi\u00f3n, con participaci\u00f3n activa de los alumnos en el pizarr\u00f3n. El agrupamiento se efectuar\u00e1 a voluntad de los alumnos en n\u00famero de no mayor de 5 personas por grupo. Tambi\u00e9n se trabajar\u00e1 la t\u00e9cnica de \u201cProgramaci\u00f3n de a pares\u201d, buscando que parejas de estudiantes resuelvan casos pr\u00e1cticos determinados. Para poder alcanzar un desarrollo acorde a lo proyectado se deber\u00e1 tener en cuenta que esta materia es de 1er a\u00f1o, con un gran n\u00famero de alumnos, lo que implica la necesidad de contar con un n\u00famero suficiente de auxiliares docentes, a los efectos de poder efectuar un seguimiento del nivel de aprendizaje de cada grupo y de la clase en su totalidad.","title":"Modalidad de agrupamientos"},{"location":"plan/#consultas","text":"Se establecen un horario fijo de consulta por la ma\u00f1ana los martes de 9 a 10 hs y los jueves de 17 a 18 hs durante todo el a\u00f1o. Dicho horario ser\u00e1 cubierto por la responsable de c\u00e1tedra. Esto totaliza dos horas reloj semanal durante todo el a\u00f1o. Adem\u00e0s, en funci\u00f3n de los temas que se desarrollan y la necesidad de los alumnos, los auxiliares docentes establecer\u00e1n horarios temporales de consulta, los que ser\u00e1n informados a los alumnos a trav\u00e9s de carteles y aviso en el aula virtual. La c\u00e1tedra hace uso de un aula virtual en el campus global; en la misma se informa sobre cronograma de clase, horarios de consulta, fechas de los ex\u00e1menes, es adem\u00e1s un repositorio de contenidos y de cuestionarios y actividades obligatorias. Las acciones en el campus se encuentran segmentadas por semanas coincidentes con el cronograma de la planificaci\u00f3n.","title":"Consultas"},{"location":"plan/#cronograma","text":"","title":"Cronograma"},{"location":"plan/#organizacion-de-espacios","text":"Para el desarrollo de la asignatura se deber\u00e1 contar con aulas con espacio suficiente para poder trabajar en forma grupal con un n\u00famero de alumnos que no supere la cantidad de 70 alumnos por curso. Y disponibilidad de aulas inform\u00e1ticas para el desarrollo de los laboratorios previstos para el lenguaje asociado. Laboratorio del Lenguaje PASCAL A partir de la unidad 2, se relacionaran los contenidos te\u00f3rica, con la sintaxis del lenguaje Los alumnos deber\u00e1n asistir a los laboratorios en las semanas establecidas para ello, donde se les dar\u00e1 una ejercitaci\u00f3n guiada sobre cada tipo de estructura de datos. Se pone a disposici\u00f3n de los alumnos tanto en los laboratorios como en el campus de una versi\u00f3n descargable de Turbo Pascal 7.0, del Free Pascal, del DEV Pascal y de tutoriales. Laboratorio de Rob\u00f3tica A partir del segundo cuatrimestre se desarrollaron los contenidos te\u00f3ricos relacionando con el lenguaje pascal y el Ansi C. Se propiciar\u00e1 la implementaci\u00f3n de subalgoritmos en C. Los tutoriales para este lenguaje y el lenguaje en si, estar\u00e1n disponibles para los alumnos tanto en el aula virtual como en los laboratorios.","title":"Organizacion de espacios"},{"location":"plan/#materiales-curriculares","text":"Revistas, publicaciones, apuntes, textos, software, videos, internet, equipamiento did\u00e1ctico, otros. Filminas, gu\u00edas de pr\u00e1ctica, Campus virtual, libros digitales, proyector, links en internet.","title":"Materiales curriculares:"},{"location":"plan/#formacion-practica","text":"Consignar la carga horaria parcial vinculada a cada uno de los cuatro grupos que se indican a continuaci\u00f3n y la carga total dedicada a la esta formaci\u00f3n:","title":"Formaci\u00f3n Practica"},{"location":"plan/#formacion-experimental","text":"","title":"Formacion experimental"},{"location":"plan/#laboratorio-del-lenguaje-pascal","text":"\u00c1mbito de realizaci\u00f3n Aulas Inform\u00e1ticas (laboratorios) 1 y 2, 5 y 6. Disponibilidad de infraestructura y equipamiento 1 PC cada 2 alumnos, con el software necesario y conexi\u00f3n a Internet. Actividades a desarrollar Funciona en modalidad de taller En la primera clase se presenta el entorno de desarrollo y el lenguaje a utilizar, para la edici\u00f3n, compilaci\u00f3n, ejecuci\u00f3n y depuraci\u00f3n de programas. Se orienta a los alumnos y se ensaya la descarga e instalaci\u00f3n; se desarrollan habilidades pr\u00e1cticas para la operaci\u00f3n y aplicaci\u00f3n de los equipos y el entorno. Durante el desarrollo del taller se van introduciendo buenas pr\u00e1cticas de codificaci\u00f3n, como as\u00ed tambi\u00e9n normas y buenas pr\u00e1cticas para el desarrollo de sesiones de trabajo, cuidado de los equipos, resguardo de datos, cuidado y mantenimiento del aula inform\u00e1tica y los equipos. Para la ejercitaci\u00f3n se utiliza una gu\u00eda de ejercicio preparada especialmente para el desarrollo del laboratorio del lenguaje, codificando en orden de complejidad creciente, a los efectos de evidenciar por prueba y error las distintas estructuras tanto de datos como de acciones. Carga horaria 8 hs (2 talleres de 4 hs cada uno) Se desarrollan en la semana del 2do llamado de ex\u00e1menes finales (semana del 10 de julio). Se utiliza esta fecha por ser esta una materia de primer a\u00f1o anual, por lo tanto los alumnos no tienen ex\u00e1menes en dicha semana, y no hay inconvenientes de colisi\u00f3n de horarios entre las otras materias y adem\u00e1s la mayor disponibilidad de los laboratorios, a los efectos de asegurar mediante varios turnos la posibilidad de acceso a las PC de no m\u00e1s de dos alumnos en cada m\u00e1quina. Evaluaci\u00f3n El docente a cargo del taller y sus auxiliares llevan registro de asistencia y participaci\u00f3n de los alumnos; as\u00ed como revisan el desarrollo de la ejercitaci\u00f3n, sugiriendo distintos caminos de acci\u00f3n.","title":"Laboratorio del Lenguaje PASCAL"},{"location":"plan/#laboratorio-de-robotica-lenguaje-ansi-c","text":"Se desarrolla en forma de autogesti\u00f3n, mediante la entrega de tutoriales y la descarga del software en las PCs propios de los estudiantes, a los efectos de que tomen conocimiento de las herramientas b\u00e1sicas del lenguaje que luego utilizar\u00e1n para la programaci\u00f3n del TPI. Evaluaci\u00f3n La evaluaci\u00f3n de este lenguaje se har\u00e1 en forma conjunta con la del TPI.","title":"Laboratorio de Rob\u00f3tica (lenguaje Ansi C)"},{"location":"plan/#resolucion-de-problemas-de-ingenieria","text":"","title":"Resoluci\u00f3n de problemas de ingenier\u00eda"},{"location":"plan/#trabajo-de-cierre-del-laboratorio-de-pascal","text":"\u00c1mbito de realizaci\u00f3n Extra-\u00e1ulico con apoyatura en las clases Disponibilidad de infraestructura y equipamiento Uso de herramientas del Google y OFFICE365 y equipamiento del grupo de trabajo de los alumnos Actividades a desarrollar Trabajo colaborativo. Comprensi\u00f3n, An\u00e1lisis, Dise\u00f1o de estrategias de Soluci\u00f3n, Edici\u00f3n, Compilaci\u00f3n, Documentaci\u00f3n, Prueba y Depuraci\u00f3n de aplicaciones (programas) Se plantea para el primer cierre la confecci\u00f3n de un sistema m\u00ednimo a ser desarrollado bajo restricciones y definiciones elaboradas por la c\u00e1tedra en lenguaje PASCAL. Carga Horaria 10 hs Los alumnos desarrollan la actividad en forma grupal comunic\u00e1ndose en forma oral o a trav\u00e9s de las herramientas del Google drive y el Office 365, y presentando la tarea en el campus. Evaluaci\u00f3n Cada trabajo es observado, corregido y evaluado por los docentes El mismo se desarrolla en forma grupal (no m\u00e1s de 3 alumnos por grupo) o individual (caso excepcional)","title":"Trabajo de cierre del Laboratorio de Pascal"},{"location":"plan/#actividades-de-proyecto-y-disenos-trabajo-practico-integrador","text":"\u00c1mbito de realizaci\u00f3n Extra-\u00e1ulico con apoyatura en las clases y acceso al laboratorio de Rob\u00f3tica (IEM) en forma presencial durante el 4to llamado. Disponibilidad de infraestructura y equipamiento: uso de herramientas del Google y OFFICE365 y equipamiento del grupo de trabajo de los alumnos. Aporte de plaquetas y motores por la c\u00e1tedra. Software Ansi C Actividades a desarrollar Trabajo colaborativo. Comprensi\u00f3n, An\u00e1lisis, Dise\u00f1o de estrategias de Soluci\u00f3n, Dise\u00f1o y Creaci\u00f3n de un prototipo f\u00edsico de un Robot, Implementaci\u00f3n y programaci\u00f3n de plaquetas Arduino. Documentaci\u00f3n y ejecuci\u00f3n real del prototipo. Se plantea la confecci\u00f3n de robot b\u00e1sico seg\u00fan dise\u00f1o del grupo que tenga movilidad de adelante-atr\u00e1s y giro, mediante legos, rastis, madera balsa u isopor, el que luego ser\u00e0 movilizado mediante la programaci\u00f3n de plaquetas Arduino uno, en Ansi C. Las plaquetas y motores ser\u00e1n suministrados en pr\u00e9stamo por la c\u00e1tedra. Carga Horaria 10 hs presenciales a ser utilizadas para la programaci\u00f3n de las plaquetas en el laboratorio de Robotica (IEM) con la colaboraci\u00f3n de los docentes a cargo del mismo. El trabajo previo ser\u00e1 extra-a\u00falico. Los alumnos desarrollan la actividad en forma grupal comunic\u00e1ndose en forma oral o a trav\u00e9s de las herramientas del Google drive y el Office 365, y presentando la tarea en el campus. Evaluaci\u00f3n Cada trabajo es observado, corregido y evaluado por los docentes. El mismo se desarrolla en forma grupal (no m\u00e1s de 3 alumnos por grupo) o individual (caso excepcional). Tendr\u00e1 varias etapas: El dise\u00f1o en papel del robot, y la confecci\u00f3n f\u00edsica de dicho robot. La programaci\u00f3n de la movilidad del robot y la presentaci\u00f3n del mismo a la comunidad de la FRRE.","title":"Actividades de proyecto y dise\u00f1os: Trabajo Practico Integrador"},{"location":"plan/#practica-profesional-supervisada","text":"No se consigna","title":"Pr\u00e1ctica profesional supervisada"},{"location":"plan/#evaluacion-del-alumno","text":"","title":"Evaluaci\u00f3n del alumno"},{"location":"plan/#momentos","text":"Tipos/Momentos Instrumentos Criterios Diagn\u00f3stica/Inicial No se realiza Formativa/Procesual Cuestionarios Guia de Trabajos Pr\u00e1cticos N\u00famerico Conceptual Sumativa/Final Parciales y Trabajo de Cierre de Laboratorios N\u00famerico Evaluaci\u00f3n inicial/diagn\u00f3stica: no se realiza, dado que los alumnos cursantes han aprobado el seminario de introducci\u00f3n a la carrera, donde tienen una materia espec\u00edfica con contenidos de nivelaci\u00f3n algor\u00edtmica. Evaluaci\u00f3n formativa: se realiza mediante el control de los cuestionarios que los alumnos deben desarrollar en el aula virtual y de la presentaci\u00f3n del TP (integrador) que elaboran en forma grupal Evaluaci\u00f3n Procesual: la realizan los auxiliares docentes durante el desarrollo de las pr\u00e1cticas, y en los laboratorios.","title":"Momentos"},{"location":"plan/#instrumentos","text":"Se determinan 4 instancias de evaluaci\u00f3n constituidas por: Ex\u00e1menes parciales: Se evaluar\u00e1 individualmente los contenidos te\u00f3ricos-pr\u00e1cticos de las unidades. La importancia de la teor\u00eda es igual que la de la pr\u00e1ctica, por lo que para aprobar cada parcial el alumno debe aprobar ambas partes. Se tomar\u00e1n 3(tres) parciales. Cuestionarios en el aula virtual: se han programado 21(veintiun) cuestionarios de autogesti\u00f3n individuales con notas de 0: no realizado y de 1 a 10.; a los efectos de promediar al finalizar el ciclo. Trabajo de cierre del laboratorio: se prevee 1(uno), referido al lenguaje PASCAL, modalidad grupal y colaborativa. Se evaluar\u00e1 simplemente como: Aprobado: nota 6 Desaprobado: nota 4 No presentado: nota 0 Trabajo pr\u00e1ctico integrador: se prevee 1(uno), modalidad grupal y colaborativa. La nota final ser\u00e1 el promedio de cada una de las etapas de evaluaci\u00f3n de dicho TPI, donde cada etapa se evalua de 1 a 10.","title":"Instrumentos"},{"location":"plan/#actividades","text":"Se busca la participaci\u00f3n del alumno en clase, y en algunos temas se propiciar\u00e1 el desarrollo de clases grupales especiales. Se posee una gu\u00eda de trabajos pr\u00e1cticos que el alumno debe desarrollar en las clases de pr\u00e1ctica. Se desarrollan contenidos de apoyo en el aula virtual, con la exigencia de contestar cuestionarios de correcci\u00f3n autom\u00e1tica (lecciones de avance individual, trabajos en el lenguaje, etc) Se ha generado una gu\u00eda de ejemplo-tipo de programas en el lenguaje PASCAL, que se explicitar\u00e1 durante los laboratorios del lenguaje. Se utilizar\u00e1 el lenguaje C a partir del segundo cuatrimestre, para lo cual tambi\u00e9n existe un apunte sobre dicho lenguaje. Trabajo pr\u00e1ctico integrador Robot b\u00e1sico con instancia evaluativa del dise\u00f1o del prototipo y otra instancia del trabajo terminado.","title":"Actividades"},{"location":"plan/#criterios","text":"","title":"Criterios"},{"location":"plan/#aprobacion-directa","text":"Debe satisfacer el 75% de asistencia a las clases y a los laboratorios del lenguaje. Debe aprobar los tres parciales. Debe promediar como m\u00ednimo una nota 6(seis) entre los cuestionarios del aula virtual. Debe aprobar el trabajo de cierre del laboratorio de PASCAL. Debe promediar como m\u00ednimo una nota 6(seis) el Trabajo Practico Integrador. Solo podr\u00e1 hacer uso de recuperatorio en dos de los parciales.","title":"Aprobaci\u00f3n Directa:"},{"location":"plan/#aprobacion-de-cursada","text":"Debe satisfacer el 75% de asistencia a las clases y a los laboratorios del lenguaje. Debe aprobar los tres parciales con nota m\u00ecnima de 6(seis). Debe promediar como m\u00ednimo una nota 6(seis) entre los cuestionarios del aula virtual. Debe aprobar con nota 6(seis) el trabajo de cierre del laboratorio de PASCAL. Debe promediar como m\u00ednimo una nota 6(seis) el Trabajo Practico Integrador. Podr\u00e1 hacer uso de recuperatorio en: Cada uno de los parciales (los que se llevar\u00e1n a cabo a los 15 dias de la toma del correspondiente parcial) Podr\u00e1n presentar nuevamente el trabajo de cierre del laboratorio de PASCAL, en los recuperatorios que se consignan en el calendario. Podr\u00e1 corregir el Trabajo Practico Integrador, en los recuperatorios que se consignan en el calendario.","title":"Aprobaci\u00f3n de Cursada:"},{"location":"plan/#asignaturas-o-conocimientos-con-que-se-vincula-la-materia","text":"El alumno deber\u00e1 aprender en esta asignatura, las t\u00e9cnicas apropiadas a las distintas representaciones de los procesos inform\u00e1ticos, para posteriormente integrar dichos conceptos y estrategias con las sintaxis y sem\u00e1nticas elementales de los lenguajes modernos de programaci\u00f3n, a desarrollar en las asignaturas que le contin\u00faan (SINTAXIS Y SEMANTICA DE LENGUAJES, PARADIGMAS DE PROGRAMACION), introduci\u00e9ndolos en los modelos de arboles de informaci\u00f3n, para formar la conocimientos previos necesarios para adentrarse en el tema de bases de datos que es propio de la asignatura Gesti\u00f3n de Datos.","title":"Asignaturas o conocimientos con que se vincula la materia:"},{"location":"plan/#actividades-de-coordinacion-horizontal-y-vertical","text":"En el segundo cuatrimestre del 2016 se realiz\u00f3 una reuni\u00f3n de responsables de AED entre todas las regionales de UTN que dictan ISI. En dicha reuni\u00f3n se determinaron contenidos prioritarios y se determin\u00f3 sobre la profundidad a alcanzar en cada tema, as\u00ed como que lenguajes utilizar como soporte de la pr\u00e1ctica. Como consecuencia de esos acuerdos, es la elecci\u00f2n de los lenguajes PASCAL y C. Durante el ciclo 2016 se ha determinado que Arquitectura de Computadoras (ADC) sea cursada en el segundo a\u00f1o, si bien no podemos coordinar el desarrollo de contenidos, hemos previsto que en la c\u00e0tedra de ADC tomen la plaqueta Arduino que utilizamos en AED y la estudien desde el punto de vista de su arquitectura. Con las materias siguientes del \u00e1rea de programaci\u00f3n, ya se ha articulado desde el inicio de la implementaci\u00f3n del plan 2008. Adem\u00e1s, dado que en el TPI deben dibujar el robot a presentar, se ha coordinado con la c\u00e1tedra de Sistemas de Representaci\u00f3n (SDR) de segundo a\u00f1o, para que durante el dictado de la misma, los alumnos realicen la representaci\u00f3n gr\u00e1fica formal en detalle del robot elaborado para AED.","title":"Actividades de Coordinaci\u00f3n (horizontal y vertical):"},{"location":"plan/#bibliografia_7","text":"","title":"Bibliograf\u00eda"},{"location":"plan/#obligatoria","text":"Lucas M., Peyrin J., Scholl P. Algor\u00edtmica y Representaci\u00f3n de datos. Tomo I. Secuencias, aut\u00f3matas de estados finitos. Masson, 1985. Tremblay JP, Bunt R. Introducci\u00f3n a la ciencia de las computadoras: enfoque algor\u00edtmico. McGraw-Hill, 1982. Braunstein S, Gioia A. Introducci\u00f3n a la programaci\u00f3n y a las estructuras de datos. Eudeba, 1986 Wirth N. Algoritmos + estructuras de datos = programas. Ediciones del Castillo, 1980 Lucas M., Peyrin J., Scholl P. Algor\u00edtmica y Representaci\u00f3n de datos. Volumen 2. Masson, 1986. Rosa Guerequeta y Antonio Vallecillo. T\u00e9cnicas de Dise\u00f1o de Algoritmos. (libro digital ISBN: 84-7496-666-3)","title":"Obligatoria"},{"location":"plan/#complementaria","text":"S. Baase. Computer Algorithms: Introduction to Design and Analysis. AddisonWesley, 1988. C. Barry. TopSpeed Modula-2. Addison-Wesley, 1991. M. Bellmore y G. Nemhauser. The Travelling Salesman Problem: a Survey. Operation Research, Vol. 16, n\u00ba3, 538\u2013558, 1968. J.L. Bentley. Multidimensional Divide and Conquer. Comms. of the ACM, Vol. 23, n\u00ba4, 214\u2013229,1980. J.L. Bentley. A General Method for Solving Divide and Conquer Recurrences. SIGACT News ACM, Vol. 12, n\u00ba3, 36\u201344, 1980. J.L. Bentley. Programming Pearls: Algorithm Design Techniques. Comms. of the ACM, Vol. 27, n\u00ba9, 865\u2013871, 1984. J.L. Bentley. Programming Pearls. Addison-Wesley, 1989. R.S. Bird. Notes on Recursion Elimination. Comms. of the ACM, Vol. 20, n\u00ba 6, 434\u2013439, 1977. G. Brassard y P. Bratley. Fundamentos de Algoritmia. Prentice Hall, 1997. L. Chang y J. Korsh. Canonical Coin Changing and Greedy Solutions. Journal of the ACM, Vol. 23, n\u00ba 3, 418\u2013422, 1976. T.H. Cormen, C.E. Leiserson y R.L. Rivest. Introduction to Algorithms. MIT Press, 1989. G. Ford y R. Wienes. Modula-2, A Software Development Approach. John Wiley & Sons, NewYork, 1985. J. G\u00e1lve, J.C. Gonz\u00e1lez, A. S\u00e1nchez y J.A. Vel\u00e1zquez. Algor\u00edtmica: Dise\u00f1o y An\u00e1lisis de Algoritmos Funcionales e Imperativos. RA-MA, 1993. M.R. Garey y D. Johnson. Computers and Intractability. W.H. Freeman and Company, New York, 1979.","title":"Complementaria"},{"location":"plan/#equipo-docente","text":"","title":"Equipo Docente"},{"location":"plan/#lista","text":"","title":"Lista"},{"location":"plan/#profesores","text":"Nombre y Apellido Categor\u00cda Concursado/Interino Dedicaci\u00f3n Horario Mirtha Eve Giovannini Titular Concursado 2 DS Martes 11.40 hs a 13.10 hs Jueves 9.15 hs a 10.55 hs Diego Bolatti Adjunto Interino 1 DS Jueves 18.00 hs a 19.30 hs Noelia Pinto Adjunto Interino 1 DS Viernes 17.10 hs a 18.40 hs","title":"Profesores"},{"location":"plan/#auxiliares","text":"Nombre y Apellido Categoria Concursado/Interino Dedicaci\u00f3n Horario Ilse Hodapp JTP Concursado 1 DS Mi\u00e9rcoles 16.25 hs a 18.40 hs Mi\u00e9rcoles 18.45 hs a 21.00 hs Nicolas Tortosa JTP Interino 1 DS Viernes 8.30 hs a 10.55 hs Viernes 10.55 hs a 13.15 hs Juan Esteban Colcombet Auxiliar 1 ra Interino 1 DS Mi\u00e9rcoles 16.25 hs a 18.40 hs Mi\u00e9rcoles 18.45 hs a 21.00 hs Nelson Yaccuzzi Auxiliar 1 ra Interino 1 DS Mi\u00e9rcoles 16.25 hs a 18.40 hs Mi\u00e9rcoles 18.45 hs a 21.00 hs Emiliano Pollero Auxiliar 2 da Interino 1 DS Viernes 8.30 hs a 10.55 hs Viernes 10.55 hs a 13.15 hs Mauro Rojas Auxiliar 2 da Interino 1 DS Viernes 8.30 hs a 10.55 hs Viernes 10.55 hs a 13.15 hs","title":"Auxiliares"},{"location":"plan/#distribucion-de-tareas","text":"","title":"Distribucion de Tareas"},{"location":"plan/#mirtha-eve-giovannini","text":"Responsable de c\u00e1tedra Determinaci\u00f3n de los criterios de regularizaci\u00f3n, promoci\u00f3n de la parte pr\u00e1ctica y de la promoci\u00f3n directa Confecci\u00f3n de la planificaci\u00f3n de la asignatura Dictado de teor\u00eda en las comisiones A y B Elaboraci\u00f3n de los cuestionarios y actividades del Aula virtual Seguimiento y control de las actividades de los alumnos en el Aula Virtual Control de la Guia de TP Elaboraci\u00f3n y control de los apuntes del Aula Virtual Confecci\u00f3n de modelos de ex\u00e1menes finales Control y aprobaci\u00f3n de modelos de ex\u00e1menes parciales Toma y correcci\u00f3n de ex\u00e1menes finales Planificaci\u00f3n de los laboratorios del lenguaje Confecci\u00f3n de las consignas del trabajo de cierre del laboratorio Pascal Coordinaci\u00f3n del TPI Desarrollo de actividades dentro de 2 proyectos de investigaci\u00f3n aprobados para el ciclo 2019-2021 Tareas de control del campus: Lunes a viernes de 2 hs a determinar","title":"Mirtha Eve Giovannini"},{"location":"plan/#diego-bolatti","text":"Dictado de teor\u00eda en las comisiones D Confecci\u00f3n de modelos de ex\u00e1menes finales Dictado del taller del lenguaje Pascal turno noche Correcci\u00f3n y evaluaci\u00f3n del trabajo pr\u00e1ctico integrador Confecci\u00f3n de ex\u00e1menes parciales (teor\u00eda) Toma y correcci\u00f3n de ex\u00e1menes finales","title":"Diego Bolatti"},{"location":"plan/#noelia-pinto","text":"Dictado de teor\u00eda en las comisiones C Confecci\u00f3n de modelos de ex\u00e1menes finales Dictado del taller del lenguaje Pascal turno tarde Correcci\u00f3n y evaluaci\u00f3n del trabajo pr\u00e1ctico integrador Confecci\u00f3n de ex\u00e1menes parciales (teor\u00eda) Toma y correcci\u00f3n de ex\u00e1menes finales","title":"Noelia Pinto"},{"location":"plan/#ilse-hodapp","text":"Responsable directa de la pr\u00e1ctica en todas las comisiones Desarrollo de las practicas en las comisiones C y D Elaboraci\u00f3n de la Guia de TP, con la colaboraci\u00f3n de los otros auxiliares Confecci\u00f3n y control de modelos de ex\u00e1menes parciales practicos Control de las evaluaciones parciales, de toda la c\u00e1tedra Toma de ex\u00e1menes parciales en las comisiones C y D Dictado del taller del lenguaje turno tarde Evaluaci\u00f3n del trabajo de cierre Lab Pascal comision C y D Responsable de la carga de notas en el SYSACAD comisiones C y D","title":"Ilse Hodapp"},{"location":"plan/#nico-tortosa","text":"Desarrollo de las practicas en las comisiones A y B Colaboraci\u00f3n en la confecci\u00f3n del la Guia de TP Confecci\u00f3n y control modelos de ex\u00e1menes parciales practicos Toma de ex\u00e1menes parciales en las comisiones A y B Dictado del taller del lenguaje turno ma\u00f1ana Evaluaci\u00f3n del trabajo de cierre Lab Pascal comision A y B Responsable de la carga de notas en el SYSACAD comisiones A y B","title":"Nico Tortosa"},{"location":"plan/#juan-esteban-colcombet","text":"Colaborar con el desarrollo de la pr\u00e1ctica Colaborar con el dictado del taller del lenguaje turno tarde-noche Colaborar con la evaluaci\u00f3n del trabajo de cierre del Lab Pascal","title":"Juan Esteban Colcombet"},{"location":"plan/#nelson-yaccuzzi","text":"Colaborar con el desarrollo de la pr\u00e1ctica Colaborar con el dictado del taller del lenguaje turno tarde-noche Colaborar con la evaluaci\u00f3n del trabajo de cierre del Lab Pascal","title":"Nelson Yaccuzzi"},{"location":"plan/#emiliano-pollero","text":"Colaborar con el desarrollo de la pr\u00e1ctica Colaborar con el dictado del taller del lenguaje turno ma\u00f1ana Colaborar con la evaluaci\u00f3n del trabajo de cierre del Lab Pascal","title":"Emiliano Pollero"},{"location":"plan/#mauro-rojas","text":"Colaborar con el desarrollo de la pr\u00e1ctica Colaborar con el dictado del taller del lenguaje turno ma\u00f1ana Colaborar con la evaluaci\u00f3n del trabajo de cierre del Lab Pascal Los profesores son los encargados del desarrollo del contenido te\u00f3rico y los auxiliares docentes de la realizaci\u00f3n de la pr\u00e1ctica de ejercicios. Para los laboratorios y en funci\u00f3n de la cantidad de puestos de trabajo, todo el equipo docente trabajar\u00e1 en forma coordinada bajo la direcci\u00f3n del responsable de c\u00e1tedra, pero ocup\u00e1ndose en forma indistinta las tareas de contenido te\u00f3rico y de implementaci\u00f3n en las m\u00e1quinas. Los recursos a utilizar (filminas, cuestionarios, actividades en el campus) ser\u00e1n supervisados por la responsable de c\u00e1tedra, y en la primera reuni\u00f3n anual de la c\u00e1tedra se establecer\u00e1n quienes ser\u00e1n los responsables de confecci\u00f3n de dichos recursos, como as\u00ed tambi\u00e9n de los textos de los ex\u00e1menes parciales, recuperatorio y finales, a los efectos de ir formando en las distintas actividades docentes a todo el equipo.","title":"Mauro Rojas"},{"location":"plan/#justificacion","text":"La planta docentes de la materia con respecto a la ordenanza 604 ampliada, solo difiere en la cantidad de auxiliares de segunda. La ordenanza da 1(una) designacion de aux de 1era y la c\u00e1tedra ha solicitado 3 (tres) designaciones de auxiliares de 2da, pero dicha ordenanza no establece que cantidad de alumnos debe haber en cada comisi\u00f3n. El regimen de promoci\u00f3n directa exige un seguimiento casi individual de los alumnos. La relaci\u00f3n docente-alumnnos que ser\u00eda la ideal para trabajar con alumnos (sobretodo si son de 1er a\u00f1o) es de aproximadamente 25 a 30 alumnos por docente. A la fecha de confecci\u00f3n de esta planificaci\u00f3n, y teniendo en cuenta los guarismos de alumnos por divisi\u00f3n de a\u00f1os anteriores, para una cantidad de 300 alumnos a raz\u00f3n de 30 a/d se necesitan 10 designaciones; con lo cual el plantel docente explicitado en esta planificaci\u00f3n, es el correcto.","title":"Justificacion"},{"location":"plan/#articulacion","text":"Desarrollo de actividades dentro del proyecto de investigaci\u00f3n sobre perfiles de rendimiento de alumnos de AED. (UTI1719) segunda etapa. Este proyecto finaliz\u00f3 en diciembre del 2018. Actividades a realizar en dos proyectos de investigaci\u00f3n recien aprobados.","title":"Articulacion"},{"location":"plan/#actividades-planificadas","text":"Reuniones de asignatura y \u00e1rea. Reuniones de la materia se realizan antes del inicio y fin, de cada cuatrimestre y al cierre del ciclo lectivo. Generaci\u00f3n de material did\u00e1ctico de la asignatura, gu\u00edas de estudio, material multimedia, simulaciones o cualquier otro recurso utilizado para la ense\u00f1anza. El material did\u00e1ctico de la asignatura se encuentra subido al aula virtual de la materia. Presentaciones a congresos o eventos vinculados a la ense\u00f1anza. Se prev\u00e9 presentar la experiencia robotica en el evento de ROBOTEC a fin de a\u00f1o Actividades extra-acad\u00e9micas que aportan al crecimiento profesional de los docente,s relacionadas con la asignatura. Los profesores adjuntos, como los JTP y Auxiliar de 1era desarrollan tareas en el \u00e1mbito profesional relacionadas con el dise\u00f1o y la programaci\u00f3n. La profesora titular integra dos proyectos de investigaci\u00f3n recien aprobados y tiene a su cargo el \u00e1rea de Tecnolog\u00eca Educativa de la Direcci\u00f2n de Planeamiento. El Ing Bolatti, la Ing Pinto y el Ing Tortosa (JTP) forman parte del CInApTIC con proyectos de investigaci\u00f3n dentro del mismo y adem\u00e1s el ing Bolatti coordina el area de Redes y Telecomunicaciones del mismo y la Ing Pinto el area de Capacitaci\u00f2n y Formaci\u00f3n. El Ing Tortosa adem\u00e1s forma parte del equipo docente del proyecto 111MIL, y del INFORMATORIO. Actividades de formaci\u00f3n interna de los miembros de la c\u00e1tedra Formaci\u00f3n de auxiliares, actividades de capacitaci\u00f3n interna a la c\u00e1tedra, seminarios, etc. Los integrantes de la c\u00e1tedra asistir\u00e1n a cursos sobre perfeccionamiento docente planificados por la Sec Acad\u00e9mica y la Dir de Planeamiento ( Formaci\u00f3n por Competencias , Aula Moodle con herramienta por competencia y otros). La Ing Pinto se encuentra cursando el doctorado en la Universidad de La Plata. Adem\u00e1s en forma exclusiva para los docentes de la c\u00e1tedra el Ing Perez, dictar\u00e1 un curso intensivo de Programaci\u00f3n B\u00e1sica en ARDUINO, en fecha a determinar. Otras actividades vinculadas con la funci\u00f3n docencia. No se mencionan.","title":"Actividades planificadas"},{"location":"practica/1/","text":"1. Datos y Estructuras Elementales \u00b6 Datos Elementales \u00b6 Ejercicio 1.1.1 \u00b6 Encuentre el valor de la variable RESULT despu\u00e9s de la ejecuci\u00f3n de las siguientes secuencias de operaciones. Realizar prueba de escritorio. RESULT := 5 + 2**3*2; X := 2; Y := 3; RESULT := X**Y - X; UNO := 10; DOS := 200; RESULT := ABSO (UNO - DOS); UNO := TRUNC ( RESULT / 3 ) - UNO ** 2; RESULT := (DOS - UNO) * 2; VBLE1 := 10; VBLE2 := 3; RESULT := TRUNC (VBLE1 / VBLE2); VBLE1 := VBLE1 + VBLE2; RESULT := ABSO (VBLE2 - VBLE1) ** 2; RESULT := RESULT * 0,1; X := 10; RESULT := 3; TRES := ABSO (RESULT - X) + 2 * RESULT; X := REDOND (TRES / 2); Z := X MOD RESULT; RESULT := (2*(-5) + X)**2; UNO := 1; DOS := 2; TRES := 4; DOS := ABSO (UNO - TRES); RESULT := DOS * TRES; Ejercicio 1.1.2 \u00b6 Indique en cu\u00e1les de los siguientes pares es importante el orden de los enunciados. Es decir, que si se modifica el orden de ellos cambian los resultados (sup\u00f3ngase X<>Y, Y<>Z, Z<>X). Justifique su respuesta. X:=Y Y:=Z X:=Y Z:=X X:=Z X:=Y Z:=Y X:=Y Ejercicio 1.1.3 \u00b6 Complete las siguientes frases: Una .......................... es un acontecimiento producido por un actor, que tiene lugar durante un per\u00edodo de tiempo ........................... y produce un ................................................... bien determinado. El instante de ...................... de la acci\u00f3n se denomina Ti y el instante de ...................................... se denomina Tf. El conjunto de los valores en el instante t dado del desarrollo del acontecimiento se denomina ................................ en el instante t. Ejercicio 1.1.4 \u00b6 Relacionar las columnas Definicion Concepto 1. Conjunto de fen\u00f3menos organizados en el tiempo y concebido como activo. a. Programa 2. Descripci\u00f3n de un esquema de comportamiento. b. Proceso 3. Algoritmo destinado a gobernar una m\u00e1quina real. c. M\u00e1quina 4. Mecanismo capaz de generar acciones que tienen lugar seg\u00fan un esquema determinado. d. Algoritmo Estructuras Secuenciales \u00b6 Ejercicio 1.2.1 \u00b6 Escribir un programa que permita calcular el precio de un art\u00edculo para un a\u00f1o dado, considerando que la inflaci\u00f3n es del 4 por 100 anual. La f\u00f3rmula del precio es: P = C * (1 + R) ^ (N - A) C - Precio actual. N - A\u00f1o futuro. R - Tasa de Inflaci\u00f3n. A - A\u00f1o actual. Ejercicio 1.2.2 \u00b6 Las ra\u00edces de una ecuaci\u00f3n de segundo grado $ax^2+bx+c=0$ son reales si y s\u00f3lo si el discriminante dado por $(b2-4ac)$ no es negativo. Se desea leer el valor de los coeficientes $a$, $b$, $c$ e imprimir el resultado del discriminante. Realizar prueba de escritorio. Ejercicio 1.2.3 \u00b6 Se desea comprar una PC y una impresora. Calcular el precio total: el cual est\u00e1 dado por la suma de los precios de costos, los porcentajes de ganancia del vendedor y un 21% de IVA. Sup\u00f3ngase una ganancia del vendedor del 12% por la PC y 7% por la impresora. Se leen los costos y se imprimen el precio total de ventas. Ejercicio 1.2.4 \u00b6 Se desea calcular la superficie de un trapecio, para la cual se ingresa la longitud de ambas bases y la altura. En base a la f\u00f3rmula: $$S = \\frac{(B_{may} + B_{men}) \\times h}{2}$$ Finalizando el proceso, emitir dicha superficie y los valores ingresados. Ejercicio 1.2.5 \u00b6 Se desea calcular el valor de la secci\u00f3n ($S$) de un conductor, la cual se determina en funci\u00f3n de la corriente el\u00e9ctrica $I$ y de la conductividad $C$ del material ($C=I/S$). Adem\u00e1s, a la secci\u00f3n as\u00ed obtenida se le incrementa un 25% por razones de seguridad. Ejercicio 1.2.6 \u00b6 Realizar un programa que lea dos n\u00famero complejos, $(a,b)$ y $(c,d)$, y calcule su producto: $$(a,b) * (c,d) = (ac - db, ad + bc)$$ Ejercicio 1.2.7 \u00b6 Escriba un algoritmo que halle la media geom\u00e9trica de tres valores $X$, $Y$, $Z$. Este debe emitir los tres valores por separado y luego el valor medio. La media geom\u00e9trica es igual a $(X \\times Y \\times Z)/3$ Estructuras condicionales y repetitivas \u00b6 Ejercicio 1.3.1 \u00b6 Escriba un algoritmo que acepte dos n\u00fameros, calcule la suma e imprima el mensaje de acuerdo al resultado obtenido. Suma <= 50 Suma > 50 y <= 100 Suma > 100 y <= 200 Suma > 200 Ejercicio 1.3.2 \u00b6 Escriba un algoritmo que permita conocer la edad de una persona, con solo ingresar la fecha de nacimiento y la fecha actual, ambas en el formato: DIA, MES, A\u00d1O Ejercicio 1.3.3 \u00b6 Una persona decide realizar un viaje a Europa, para lo cual necesita una determinada cantidad de euros. La persona tiene ahorrada una cierta suma en d\u00f3lares y desea saber si es suficiente y, en caso de haber diferencia (de m\u00e1s o de menos) a cuantos pesos equivale. Realice un algoritmo que solucione el problema, para lo cual deber\u00e1 prever que se ingresen las equivalencias de monedas que considere necesarias (por ejemplo la cotizacion en pesos de d\u00f3lar y/o del euro, o a cuantos euros equivale un d\u00f3lar). Ejercicio 1.3.4 \u00b6 Dados dos n\u00fameros enteros A y B generar un algoritmo que permita determinar si A es divisor de B o B es divisor de A. Ejercicio 1.3.5 \u00b6 Dado un a\u00f1o ingresado por el usuario, emitir el mensaje 'ACTUAL' si corresponde al a\u00f1o en curso, 'PASADO' si es menor y 'FUTURO' si es mayor. Ejercicio 1.3.6 \u00b6 En un experimento se obtuvieron un conjunto de pares de valores (S, V) y se requiere que desarrolle un programa que determine e imprima: Cuantos pares (S, V) tienen el mismo valor de S que el primer par (S, V) de la lista. Primer valor de S mayor que V En cuantos pares (S, V) se cumple que S es el doble de V Productoria de los valores se S no nulos, donde V es nulo Ejercicio 1.3.7 \u00b6 Hacer un algoritmo que calcule la altura aproximada de un edificio en pies, ingresando como dato la cantidad de pisos del mismo y la altura promedio de cada piso, en metros. (1 m = 3.28 pies) Modifique el algoritmo del punto 1. para que permita calcular la altura de 50 edificios. Modifique el algoritmo del punto 1. para que permita calcular la altura de una cantidad indeterminada de edificios. Prevea una condici\u00f3n de fin. Ejercicio 1.3.8 \u00b6 Dise\u00f1e un algoritmo que obtenga el porcentaje de alumnos de ISI, IQ e IEM, sobre el total de egresados de la UTN-FRRe de un a\u00f1o. Modifique el algoritmo del punto 1. para que permita obtener e informar los mismos porcentajes pero para varias Facultades y al final emitir el total de alumnos por carrera y total general. Ejercicio 1.3.9 \u00b6 Elabore un algoritmo que calcule el producto de dos enteros A y B empleando s\u00f3lo la operaci\u00f3n suma. Ejercicio 1.3.10 \u00b6 Elabore un algoritmo que calcule el cociente de dos enteros F y G y el Resto de la operaci\u00f3n, empleando s\u00f3lo las operaciones suma y diferencia. Ejercicio 1.3.11 \u00b6 Escribir un algoritmo que ingrese una variable V y emita el valor de \u00e9sta, su cuadrado y su cubo. Ejercicio 1.3.12 \u00b6 Teniendo en cuenta el ejercicio anterior, realizar un incremento de la variable V en forma constante y creciente recalculando los dem\u00e1s valores 10 veces. Por ejemplo V=2 V V2 V3 2 4 8 3 9 27 .... .... .... 12 144 1728 Ejercicio 1.3.13 \u00b6 Repita el ejercicio anterior con un c\u00e1lculo de n veces, con n > 1. Por final emitir la suma de los cuadrados de V. Ejercicio 1.3.14 \u00b6 Escriba un algoritmo que determine si un n\u00famero es primo. Ejercicio 1.3.15 \u00b6 Escriba un algoritmo para calcular cada rengl\u00f3n de una factura (valor unitario * cantidad vendida) y el total de la misma, suponiendo que el n\u00famero de renglones es variable. Emitir un mensaje de error si el valor unitario es <= 0. Realizar la prueba de escritorio con los siguientes valores: Cantidad de renglones: 4 Valor Unitario Cantidad Vendida 2 10 1 25 3 15 2 8.5 Ejercicio 1.3.16 \u00b6 Escribir un algoritmo que, dado un importe dinero, permia calcular e informar cuanto corresponde pagar por un impuesto, en cuantas cuotas y el valor de las mismas. Tener en cuenta los siguientes datos: IMPUESTO = 10% del importe dado. Los importes mayores que \\$500 y menor o igual que $1000 se pagan en dos cuotas. Los mayores de $1000 en tres cuotas. El algoritmo debe permitir tratar varios importes finalizando cuando se ingresa 9999 como importe. Ejercicio 1.3.17 \u00b6 Elabore un algoritmo para calcular los primeros 50 n\u00fameros de FIBONACCI, sabiendo que dichos n\u00fameros cumplen con lo siguiente: $$A_0=0, A_1=1, A_2=A_0+A_1, ..., A_n=A_{(n-1)}+A_{(n-2)}$$ Ejercicio 1.3.18 \u00b6 Generar un algoritmo para imprimir las coordenadas $(X,Y)$ de una funci\u00f3n cuadr\u00e1tica, de la forma: $Y = aX^2+bX+c$, haciendo variar $X$ en el intervalo $[20, -20]$ con un decremento de 2. Ejercicio 1.3.19 \u00b6 Repita el ejercicio anterior de modo que sea posible estudiar varias funciones, indicando que se desea terminar al ingresar 9999 para el t\u00e9rmino cuadr\u00e1tico. Ejercicio 1.3.20 \u00b6 Construya un algoritmo capaz de encontrar todas las cifras de tres d\u00edgitos que cumplan con la condici\u00f3n de que la suma de los cubos de sus d\u00edgitos sea igual al n\u00famero que la cifra representa. Ejercicio 1.3.21 \u00b6 Escriba un algoritmo para imprimir los n\u00fameros primos menores a un valor dado n. Ejercicio 1.3.22 \u00b6 Escriba un algoritmo para resolver el siguiente problema: Una empresa de transportes desea conocer el sueldo de sus 100 choferes. Estos se calculan teniendo en cuenta la categor\u00eda (1 o 2) y la asistencia (perfecta: si o no). El sueldo se obtiene sumando el sueldo b\u00e1sico, m\u00e1s el 2% de antig\u00fcedad por cada a\u00f1o trabajado y \\$200 de premio por asistencia. El sueldo b\u00e1sico es de \\$700 para choferes de categor\u00eda 1 y de \\$500.- para los de categor\u00eda 2. Ejercicio 1.3.23 \u00b6 Una f\u00e1brica textil produce telas de dos calidades distintas (primera y segunda) y de dos materiales distintos (seda y algod\u00f3n). Generar un algoritmo que calcule el peso de varias piezas de tela, el cual est\u00e1 dado por la suma del peso neto, m\u00e1s un porcentaje por el apresto, m\u00e1s el peso del n\u00facleo de cart\u00f3n. Para realizar el c\u00e1lculo, tener en cuenta la siguiente informaci\u00f3n, para cada pieza: El peso del m2 y la longitud de cada pieza. Al peso neto de la tela hay que sumarle un porcentaje por cada pieza, debido al apresto, el cual es del 2% para las telas de seda y del 7% para las de algod\u00f3n. Tambi\u00e9n se debe considerar el n\u00facleo de cart\u00f3n, que es de 400 gr. para los rollos de telas de primera y de 300 gr. en los de segunda. Finalizar cuando la variable FIN sea igual a 'SI'. Ejercicio 1.3.24 \u00b6 La fecha del domingo de Pascua corresponde al primer domingo despu\u00e9s de la primera luna llena que sigue al equinoccio de primavera. La secuencia de c\u00e1lculos que permite conocer esta fecha es: A = anio mod 19 B = anio mod 4 C = anio mod 7 D = ( 19 * A + 24 ) mod 30 E = ( 2 * B + 4 * C + 6 * D + 5 ) mod 7 N = ( 22 + D + E ) Donde N indica el n\u00famero del d\u00eda del mes de marzo (o abril si N es superior a 31) correpondiente al domingo de Pascua. Realizar un algoritmo que determine esta fecha para los a\u00f1os comprendidos entre 1990 y 2010 Ejercicio 1.3.25 \u00b6 Escribir un algoritmo que permita imprimir la siguiente sucesi\u00f3n. Considere que N es un n\u00famero par, que se ingresa. 2 4 6 8 ... N 4 6 8 10 ... N 6 8 10 12 ... N .... .... N Ejercicio 1.3.26 \u00b6 Escribir un algoritmo que permita imprimir la siguiente sucesi\u00f3n. Considere que N es un n\u00famero par, que se ingresa. 2 4 6 ............ N 2 4 6 ........ N-2 2 4 6 ... N-4 ........... 2 4 6 2 4 2","title":"1. Datos y Estructuras Elementales"},{"location":"practica/1/#1-datos-y-estructuras-elementales","text":"","title":"1. Datos y Estructuras Elementales"},{"location":"practica/1/#datos-elementales","text":"","title":"Datos Elementales"},{"location":"practica/1/#ejercicio-111","text":"Encuentre el valor de la variable RESULT despu\u00e9s de la ejecuci\u00f3n de las siguientes secuencias de operaciones. Realizar prueba de escritorio. RESULT := 5 + 2**3*2; X := 2; Y := 3; RESULT := X**Y - X; UNO := 10; DOS := 200; RESULT := ABSO (UNO - DOS); UNO := TRUNC ( RESULT / 3 ) - UNO ** 2; RESULT := (DOS - UNO) * 2; VBLE1 := 10; VBLE2 := 3; RESULT := TRUNC (VBLE1 / VBLE2); VBLE1 := VBLE1 + VBLE2; RESULT := ABSO (VBLE2 - VBLE1) ** 2; RESULT := RESULT * 0,1; X := 10; RESULT := 3; TRES := ABSO (RESULT - X) + 2 * RESULT; X := REDOND (TRES / 2); Z := X MOD RESULT; RESULT := (2*(-5) + X)**2; UNO := 1; DOS := 2; TRES := 4; DOS := ABSO (UNO - TRES); RESULT := DOS * TRES;","title":"Ejercicio 1.1.1"},{"location":"practica/1/#ejercicio-112","text":"Indique en cu\u00e1les de los siguientes pares es importante el orden de los enunciados. Es decir, que si se modifica el orden de ellos cambian los resultados (sup\u00f3ngase X<>Y, Y<>Z, Z<>X). Justifique su respuesta. X:=Y Y:=Z X:=Y Z:=X X:=Z X:=Y Z:=Y X:=Y","title":"Ejercicio 1.1.2"},{"location":"practica/1/#ejercicio-113","text":"Complete las siguientes frases: Una .......................... es un acontecimiento producido por un actor, que tiene lugar durante un per\u00edodo de tiempo ........................... y produce un ................................................... bien determinado. El instante de ...................... de la acci\u00f3n se denomina Ti y el instante de ...................................... se denomina Tf. El conjunto de los valores en el instante t dado del desarrollo del acontecimiento se denomina ................................ en el instante t.","title":"Ejercicio 1.1.3"},{"location":"practica/1/#ejercicio-114","text":"Relacionar las columnas Definicion Concepto 1. Conjunto de fen\u00f3menos organizados en el tiempo y concebido como activo. a. Programa 2. Descripci\u00f3n de un esquema de comportamiento. b. Proceso 3. Algoritmo destinado a gobernar una m\u00e1quina real. c. M\u00e1quina 4. Mecanismo capaz de generar acciones que tienen lugar seg\u00fan un esquema determinado. d. Algoritmo","title":"Ejercicio 1.1.4"},{"location":"practica/1/#estructuras-secuenciales","text":"","title":"Estructuras Secuenciales"},{"location":"practica/1/#ejercicio-121","text":"Escribir un programa que permita calcular el precio de un art\u00edculo para un a\u00f1o dado, considerando que la inflaci\u00f3n es del 4 por 100 anual. La f\u00f3rmula del precio es: P = C * (1 + R) ^ (N - A) C - Precio actual. N - A\u00f1o futuro. R - Tasa de Inflaci\u00f3n. A - A\u00f1o actual.","title":"Ejercicio 1.2.1"},{"location":"practica/1/#ejercicio-122","text":"Las ra\u00edces de una ecuaci\u00f3n de segundo grado $ax^2+bx+c=0$ son reales si y s\u00f3lo si el discriminante dado por $(b2-4ac)$ no es negativo. Se desea leer el valor de los coeficientes $a$, $b$, $c$ e imprimir el resultado del discriminante. Realizar prueba de escritorio.","title":"Ejercicio 1.2.2"},{"location":"practica/1/#ejercicio-123","text":"Se desea comprar una PC y una impresora. Calcular el precio total: el cual est\u00e1 dado por la suma de los precios de costos, los porcentajes de ganancia del vendedor y un 21% de IVA. Sup\u00f3ngase una ganancia del vendedor del 12% por la PC y 7% por la impresora. Se leen los costos y se imprimen el precio total de ventas.","title":"Ejercicio 1.2.3"},{"location":"practica/1/#ejercicio-124","text":"Se desea calcular la superficie de un trapecio, para la cual se ingresa la longitud de ambas bases y la altura. En base a la f\u00f3rmula: $$S = \\frac{(B_{may} + B_{men}) \\times h}{2}$$ Finalizando el proceso, emitir dicha superficie y los valores ingresados.","title":"Ejercicio 1.2.4"},{"location":"practica/1/#ejercicio-125","text":"Se desea calcular el valor de la secci\u00f3n ($S$) de un conductor, la cual se determina en funci\u00f3n de la corriente el\u00e9ctrica $I$ y de la conductividad $C$ del material ($C=I/S$). Adem\u00e1s, a la secci\u00f3n as\u00ed obtenida se le incrementa un 25% por razones de seguridad.","title":"Ejercicio 1.2.5"},{"location":"practica/1/#ejercicio-126","text":"Realizar un programa que lea dos n\u00famero complejos, $(a,b)$ y $(c,d)$, y calcule su producto: $$(a,b) * (c,d) = (ac - db, ad + bc)$$","title":"Ejercicio 1.2.6"},{"location":"practica/1/#ejercicio-127","text":"Escriba un algoritmo que halle la media geom\u00e9trica de tres valores $X$, $Y$, $Z$. Este debe emitir los tres valores por separado y luego el valor medio. La media geom\u00e9trica es igual a $(X \\times Y \\times Z)/3$","title":"Ejercicio 1.2.7"},{"location":"practica/1/#estructuras-condicionales-y-repetitivas","text":"","title":"Estructuras condicionales y repetitivas"},{"location":"practica/1/#ejercicio-131","text":"Escriba un algoritmo que acepte dos n\u00fameros, calcule la suma e imprima el mensaje de acuerdo al resultado obtenido. Suma <= 50 Suma > 50 y <= 100 Suma > 100 y <= 200 Suma > 200","title":"Ejercicio 1.3.1"},{"location":"practica/1/#ejercicio-132","text":"Escriba un algoritmo que permita conocer la edad de una persona, con solo ingresar la fecha de nacimiento y la fecha actual, ambas en el formato: DIA, MES, A\u00d1O","title":"Ejercicio 1.3.2"},{"location":"practica/1/#ejercicio-133","text":"Una persona decide realizar un viaje a Europa, para lo cual necesita una determinada cantidad de euros. La persona tiene ahorrada una cierta suma en d\u00f3lares y desea saber si es suficiente y, en caso de haber diferencia (de m\u00e1s o de menos) a cuantos pesos equivale. Realice un algoritmo que solucione el problema, para lo cual deber\u00e1 prever que se ingresen las equivalencias de monedas que considere necesarias (por ejemplo la cotizacion en pesos de d\u00f3lar y/o del euro, o a cuantos euros equivale un d\u00f3lar).","title":"Ejercicio 1.3.3"},{"location":"practica/1/#ejercicio-134","text":"Dados dos n\u00fameros enteros A y B generar un algoritmo que permita determinar si A es divisor de B o B es divisor de A.","title":"Ejercicio 1.3.4"},{"location":"practica/1/#ejercicio-135","text":"Dado un a\u00f1o ingresado por el usuario, emitir el mensaje 'ACTUAL' si corresponde al a\u00f1o en curso, 'PASADO' si es menor y 'FUTURO' si es mayor.","title":"Ejercicio 1.3.5"},{"location":"practica/1/#ejercicio-136","text":"En un experimento se obtuvieron un conjunto de pares de valores (S, V) y se requiere que desarrolle un programa que determine e imprima: Cuantos pares (S, V) tienen el mismo valor de S que el primer par (S, V) de la lista. Primer valor de S mayor que V En cuantos pares (S, V) se cumple que S es el doble de V Productoria de los valores se S no nulos, donde V es nulo","title":"Ejercicio 1.3.6"},{"location":"practica/1/#ejercicio-137","text":"Hacer un algoritmo que calcule la altura aproximada de un edificio en pies, ingresando como dato la cantidad de pisos del mismo y la altura promedio de cada piso, en metros. (1 m = 3.28 pies) Modifique el algoritmo del punto 1. para que permita calcular la altura de 50 edificios. Modifique el algoritmo del punto 1. para que permita calcular la altura de una cantidad indeterminada de edificios. Prevea una condici\u00f3n de fin.","title":"Ejercicio 1.3.7"},{"location":"practica/1/#ejercicio-138","text":"Dise\u00f1e un algoritmo que obtenga el porcentaje de alumnos de ISI, IQ e IEM, sobre el total de egresados de la UTN-FRRe de un a\u00f1o. Modifique el algoritmo del punto 1. para que permita obtener e informar los mismos porcentajes pero para varias Facultades y al final emitir el total de alumnos por carrera y total general.","title":"Ejercicio 1.3.8"},{"location":"practica/1/#ejercicio-139","text":"Elabore un algoritmo que calcule el producto de dos enteros A y B empleando s\u00f3lo la operaci\u00f3n suma.","title":"Ejercicio 1.3.9"},{"location":"practica/1/#ejercicio-1310","text":"Elabore un algoritmo que calcule el cociente de dos enteros F y G y el Resto de la operaci\u00f3n, empleando s\u00f3lo las operaciones suma y diferencia.","title":"Ejercicio 1.3.10"},{"location":"practica/1/#ejercicio-1311","text":"Escribir un algoritmo que ingrese una variable V y emita el valor de \u00e9sta, su cuadrado y su cubo.","title":"Ejercicio 1.3.11"},{"location":"practica/1/#ejercicio-1312","text":"Teniendo en cuenta el ejercicio anterior, realizar un incremento de la variable V en forma constante y creciente recalculando los dem\u00e1s valores 10 veces. Por ejemplo V=2 V V2 V3 2 4 8 3 9 27 .... .... .... 12 144 1728","title":"Ejercicio 1.3.12"},{"location":"practica/1/#ejercicio-1313","text":"Repita el ejercicio anterior con un c\u00e1lculo de n veces, con n > 1. Por final emitir la suma de los cuadrados de V.","title":"Ejercicio 1.3.13"},{"location":"practica/1/#ejercicio-1314","text":"Escriba un algoritmo que determine si un n\u00famero es primo.","title":"Ejercicio 1.3.14"},{"location":"practica/1/#ejercicio-1315","text":"Escriba un algoritmo para calcular cada rengl\u00f3n de una factura (valor unitario * cantidad vendida) y el total de la misma, suponiendo que el n\u00famero de renglones es variable. Emitir un mensaje de error si el valor unitario es <= 0. Realizar la prueba de escritorio con los siguientes valores: Cantidad de renglones: 4 Valor Unitario Cantidad Vendida 2 10 1 25 3 15 2 8.5","title":"Ejercicio 1.3.15"},{"location":"practica/1/#ejercicio-1316","text":"Escribir un algoritmo que, dado un importe dinero, permia calcular e informar cuanto corresponde pagar por un impuesto, en cuantas cuotas y el valor de las mismas. Tener en cuenta los siguientes datos: IMPUESTO = 10% del importe dado. Los importes mayores que \\$500 y menor o igual que $1000 se pagan en dos cuotas. Los mayores de $1000 en tres cuotas. El algoritmo debe permitir tratar varios importes finalizando cuando se ingresa 9999 como importe.","title":"Ejercicio 1.3.16"},{"location":"practica/1/#ejercicio-1317","text":"Elabore un algoritmo para calcular los primeros 50 n\u00fameros de FIBONACCI, sabiendo que dichos n\u00fameros cumplen con lo siguiente: $$A_0=0, A_1=1, A_2=A_0+A_1, ..., A_n=A_{(n-1)}+A_{(n-2)}$$","title":"Ejercicio 1.3.17"},{"location":"practica/1/#ejercicio-1318","text":"Generar un algoritmo para imprimir las coordenadas $(X,Y)$ de una funci\u00f3n cuadr\u00e1tica, de la forma: $Y = aX^2+bX+c$, haciendo variar $X$ en el intervalo $[20, -20]$ con un decremento de 2.","title":"Ejercicio 1.3.18"},{"location":"practica/1/#ejercicio-1319","text":"Repita el ejercicio anterior de modo que sea posible estudiar varias funciones, indicando que se desea terminar al ingresar 9999 para el t\u00e9rmino cuadr\u00e1tico.","title":"Ejercicio 1.3.19"},{"location":"practica/1/#ejercicio-1320","text":"Construya un algoritmo capaz de encontrar todas las cifras de tres d\u00edgitos que cumplan con la condici\u00f3n de que la suma de los cubos de sus d\u00edgitos sea igual al n\u00famero que la cifra representa.","title":"Ejercicio 1.3.20"},{"location":"practica/1/#ejercicio-1321","text":"Escriba un algoritmo para imprimir los n\u00fameros primos menores a un valor dado n.","title":"Ejercicio 1.3.21"},{"location":"practica/1/#ejercicio-1322","text":"Escriba un algoritmo para resolver el siguiente problema: Una empresa de transportes desea conocer el sueldo de sus 100 choferes. Estos se calculan teniendo en cuenta la categor\u00eda (1 o 2) y la asistencia (perfecta: si o no). El sueldo se obtiene sumando el sueldo b\u00e1sico, m\u00e1s el 2% de antig\u00fcedad por cada a\u00f1o trabajado y \\$200 de premio por asistencia. El sueldo b\u00e1sico es de \\$700 para choferes de categor\u00eda 1 y de \\$500.- para los de categor\u00eda 2.","title":"Ejercicio 1.3.22"},{"location":"practica/1/#ejercicio-1323","text":"Una f\u00e1brica textil produce telas de dos calidades distintas (primera y segunda) y de dos materiales distintos (seda y algod\u00f3n). Generar un algoritmo que calcule el peso de varias piezas de tela, el cual est\u00e1 dado por la suma del peso neto, m\u00e1s un porcentaje por el apresto, m\u00e1s el peso del n\u00facleo de cart\u00f3n. Para realizar el c\u00e1lculo, tener en cuenta la siguiente informaci\u00f3n, para cada pieza: El peso del m2 y la longitud de cada pieza. Al peso neto de la tela hay que sumarle un porcentaje por cada pieza, debido al apresto, el cual es del 2% para las telas de seda y del 7% para las de algod\u00f3n. Tambi\u00e9n se debe considerar el n\u00facleo de cart\u00f3n, que es de 400 gr. para los rollos de telas de primera y de 300 gr. en los de segunda. Finalizar cuando la variable FIN sea igual a 'SI'.","title":"Ejercicio 1.3.23"},{"location":"practica/1/#ejercicio-1324","text":"La fecha del domingo de Pascua corresponde al primer domingo despu\u00e9s de la primera luna llena que sigue al equinoccio de primavera. La secuencia de c\u00e1lculos que permite conocer esta fecha es: A = anio mod 19 B = anio mod 4 C = anio mod 7 D = ( 19 * A + 24 ) mod 30 E = ( 2 * B + 4 * C + 6 * D + 5 ) mod 7 N = ( 22 + D + E ) Donde N indica el n\u00famero del d\u00eda del mes de marzo (o abril si N es superior a 31) correpondiente al domingo de Pascua. Realizar un algoritmo que determine esta fecha para los a\u00f1os comprendidos entre 1990 y 2010","title":"Ejercicio 1.3.24"},{"location":"practica/1/#ejercicio-1325","text":"Escribir un algoritmo que permita imprimir la siguiente sucesi\u00f3n. Considere que N es un n\u00famero par, que se ingresa. 2 4 6 8 ... N 4 6 8 10 ... N 6 8 10 12 ... N .... .... N","title":"Ejercicio 1.3.25"},{"location":"practica/1/#ejercicio-1326","text":"Escribir un algoritmo que permita imprimir la siguiente sucesi\u00f3n. Considere que N es un n\u00famero par, que se ingresa. 2 4 6 ............ N 2 4 6 ........ N-2 2 4 6 ... N-4 ........... 2 4 6 2 4 2","title":"Ejercicio 1.3.26"},{"location":"practica/2.1/","text":"2.1. Secuencias \u00b6 Ejercicio 2.1.1 \u00b6 Dada una secuencia de letras del alfabeto que finaliza con una marca ' ', contar cuantas letras \"A\" hay en la secuencia. Ejercicio 2.1.2 \u00b6 Dada una secuencia de letras del alfabeto que finaliza con la letra \"Z\", contar cuantas consonantes hay en la secuencia. Ejercicio 2.1.3 \u00b6 Se dispone de una secuencia de caracteres y se desea obtener una secuencia de salida que resulte de copiar la secuencia de entrada, descartando el caracter \"$\". Ejercicio 2.1.4 \u00b6 Se dispone de una secuencia de n\u00fameros de socios, y se desea saber la cantidad de socios que est\u00e1n registrados. Ejercicio 2.1.5 \u00b6 La secuencia de socios del problema anterior tiene el inconveniente de que los n\u00fameros est\u00e1n ordenados pero no son correlativos. Se desea generar una secuencia que contenga los n\u00fameros de socios que no figuran en la secuencia de socios. Ejercicio 2.1.6 \u00b6 Dada una secuencia de enteros que almacena la cantidad de habitantes de las ciudades capitales de las 23 provincias de la Rep\u00fablica Argentina, discriminados 4 categor\u00edas: menores de 18 a\u00f1os (varones y mujeres) y mayores de 18 a\u00f1os (varones y mujeres). Se pide determinar la poblaci\u00f3n total y los siguientes porcentajes: masculinos, femeninos, mayores de 18 y menores de 18. Ejercicio 2.1.7 \u00b6 Se tiene una secuencia de enteros que contiene todos los CUIT de los empleados de una empresa, la misma termina con el CUIT 0. Para evitar largas esperas en los d\u00edas de pago, la empresa necesita organizarlos de acuerdo al \u00faltimo d\u00edgito de su documento, generar una secuencia con los CUIT de las personas que su n\u00famero de documento termine con 0, 1, 2 o 3. Ejercicio 2.1.8 \u00b6 Teniendo en cuenta el ejercicio anterior, se solicita que la secuencia de salida sea una secuencia de caracteres y los CUIT se separen unos de otros con el caracter \"-\". Ejercicio 2.1.9 \u00b6 Se dispone de una secuencia de caracteres. Se desea determinar la cantidad de palabras que comienzan con la letra 'I'. Ejercicio 2.1.10 \u00b6 Se dispone de una secuencia de caracteres. Se desea permita contar la cantidad de palabras que comienzan con una letra dada. Ejercicio 2.1.11 \u00b6 Dada una secuencia de caracteres, determinar la cantidad de palabras de 4 caracteres (letras) Ejercicio 2.1.12 \u00b6 Se dispone de una secuencia de caracteres. Se desea listar las palabras que comiencen con \"ALG\". Ejercicio 2.1.13 \u00b6 Se dispone de una secuencia de caracteres. Se desea listar las palabras que comiencen con \"ALG\". Ejercicio 2.1.14 \u00b6 Se dispone de una secuencia de caracteres y se desea saber la cantidad de caracteres (incluidos los espacios) que existen entre una coma y la siguiente. Se debe considerar que puede haber m\u00e1s de un par de comas, y que las subsecuencias inicial y final deben descartarse por no cumplir la condici\u00f3n enunciada. Sup\u00f3ngase que las comas son siempre contiguas al \u00faltimo caracter de la palabra. Ejercicio 2.1.15 \u00b6 Se desea saber la cantidad promedio de palabras que contienen las oraciones de una secuencia de caracteres. Sup\u00f3ngase que los puntos son siempre contiguos al \u00faltimo caracter de la palabra. La secuencia finaliza con una marca. Ejercicio 2.1.16 \u00b6 Se dispone de una secuencia de n\u00fameros de DNI asignados a un circuito electoral, generar otra secuencia de n\u00fameros que contenga los DNI m\u00faltiplos de 3. Ejercicio 2.1.17 \u00b6 Se desea calcular el costo de un telegrama, que se determina en funci\u00f3n del n\u00famero de palabras (que vale V1 cada una), salvo que el promedio de letras por palabra supere las cinco letras, caso en que cada palabra vale V2. Ejercicio 2.1.18 \u00b6 Escribir un algoritmo que produzca una secuencia de salida que contenga una oraci\u00f3n formada por por las palabras en posici\u00f3n par de cada oraci\u00f3n de una secuencia texto de entrada, que adem\u00e1s comienzan con la letra 'M'. Ejercicio 2.1.19 \u00b6 Dada una secuencia de caracteres, generar otra secuencia con todas las palabras de tres caracteres. Informar el porcentaje de las mismas, sobre el total de palabras de la secuencia de entrada. Considerar que puede haber m\u00e1s de un blanco entre palabras. Ejercicio 2.1.20 \u00b6 Se dispone de dos secuencias texto formadas por oraciones bimembres (sujeto y predicado, separados por comas \u2018,\u2019). Se desea una secuencia texto de salida formada por oraciones bimembres, de la siguiente forma: El sujeto, de la secuencia 1, y el predicado, de la secuencia 2. Al finalizar informar cuantas oraciones tiene cada secuencia. Ejercicio 2.1.21 \u00b6 Se dispone de dos secuencias texto formadas por oraciones bimembres (sujeto y predicado, separados por comas \u2018,\u2019). Se desea una secuencia texto de salida formada por oraciones bimembres, de la siguiente forma: El sujeto, de la secuencia 1, y el predicado, de la secuencia 2. Al finalizar informar cuantas oraciones tiene cada secuencia. Ejercicio 2.1.22 \u00b6 La empresa Ideas Argentinas S.A. posee datos de sus empleados en dos secuencias de caracteres; la primera secuencia (Sec1) formada por los nombres (uno por persona) de los empleados separados por blancos y la segunda secuencia (Sec2) posee los n\u00fameros de documento de cada uno de los empleados (palabras de 8 d\u00edgitos num\u00e9ricos). Ambas secuencias poseen la misma cantidad de datos, es decir al primer nombre de la primera secuencia le corresponde el primer n\u00famero de documento de la segunda secuencia y as\u00ed sucesivamente. La secuencia de n\u00fameros de documentos no posee espacios en blanco ni ning\u00fan otro tipo de caracter que separe un n\u00famero de documento de otro. A la empresa le interesa tener en una nueva secuencia (Sec3) los datos de todas aquellas personas que cumplan la condici\u00f3n de que el nombre se encuentre en una posici\u00f3n impar. La nueva secuencia debe generarse de la siguiente manera: el n\u00famero de documento seguido (sin espacios) por una coma y luego (sin espacios) por el nombre y seguido al nombre un #. Ejercicio 2.1.23 \u00b6 Realice un algoritmo para el enunciado del ejercicio 1.22, pero considerando que los datos que se deben copiar en la Sec3 son los de aquellas personas que cumplan la condici\u00f3n de que: el n\u00famero de documento comienza con un n\u00famero impar. Ejercicio 2.1.24 \u00b6 Realice un algoritmo para el enunciado del ejercicio 1.22, pero considerando que los datos que se deben copiar en la Sec3 son los de aquellas personas que cumplan la condici\u00f3n de que: el nombre no comienza con una vocal. Ejercicio 2.1.25 \u00b6 Dada una secuencia texto de entrada que contiene palabras alfanum\u00e9ricas, escribir un algoritmo que genere dos secuencias de salida. Una de ellas contendr\u00e1 solo las palabras de la secuencia original que comienzan con vocal, en las cuales se reemplazar\u00e1n todas las vocales por \u2018#\u2019, por ejemplo: entrada 'avi\u00f3n1', salida '#v##n1' y la otra ser\u00e1 una secuencia num\u00e9rica en la que se almacenar\u00e1n las cantidades de vocales que se encontraron en cada una de las palabras que cumplieron la condici\u00f3n. Por final de proceso se deber\u00e1 informar el promedio de palabras por oraci\u00f3n. Ejercicio 2.1.26 \u00b6 Se posee 2 secuencias (S1 y S2) con las cuales se desea generar una nueva secuencia (SAL) donde se intercalen las palabras de las secuencias de entrada, de la siguiente manera: copiar de S1 aquellas palabras que empiezan y terminan con la misma letra y de S2 aquellas palabras que posean al menos un digito num\u00e9rico y adem\u00e1s est\u00e9n en posici\u00f3n par. Ejercicio 2.1.27 \u00b6 Elaborar un procedimiento que dada una secuencia de caracteres como entrada genere otra del mismo tipo como salida. La secuencia de caracteres que se recibe incluye n\u00fameros de tarjetas de cr\u00e9dito, donde cada n\u00famero tiene 16 d\u00edgitos. Se desea obtener como resultado una nueva secuencia de salida con los n\u00fameros de tarjetas v\u00e1lidos. El algoritmo para la validaci\u00f3n de n\u00fameros de tarjetas de cr\u00e9dito es el siguiente: Para entender mejor el m\u00e9todo usaremos un n\u00famero correcto: 4013-7001-0977-4812, al que nos referiremos en el texto. Nos centramos en los caracteres que ocupan posiciones impares. 4 0 1 3 7 0 0 1 0 9 7 7 4 8 1 2 Por cada uno de ellos obtenemos el doble del valor que representan. Si el n\u00famero resultante es menor que 9, se deja tal cual, en caso contrario, se le resta 9. En nuestro ejemplo: 4 * 2 = 8; 1 * 2 = 2; 7 * 2 = 14, mayor que nueve, se le resta 9. 14 - 9 = 5; y as\u00ed sucesivamente. Si el n\u00famero resultante de la suma de las multiplicaciones y de los d\u00edgitos en posici\u00f3n par, es m\u00faltiplo de 10, y a la vez menor o igual a 150, es un n\u00famero de tarjeta v\u00e1lido. Para nuestro ejemplo: 8+0+2+3+5+0+0+1+0+9+5+7+8+8+2+2 = 60; por lo tanto el n\u00famero es v\u00e1lido. Ejercicio 2.1.28 \u00b6 La galer\u00eda de pintura y arte nacional, PINTA DE ARGENTINA, almacena informaci\u00f3n sobre los artistas y sus obras de arte en secuencias de caracteres. Durante todo el a\u00f1o, las obras de arte son expuestas en eventos de subasta y exposici\u00f3n, en los cuales se comercializan al p\u00fablico en general. A fin de a\u00f1o la Comisi\u00f3n Directiva de la Galer\u00eda solicita que, a partir de toda esa informaci\u00f3n, se generen algunos informes. Se debe tener en cuenta lo siguiente: En la secuencia ARTISTAS, se almacena el nombre de cada artista, lugar de nacimiento, edad, estilo de arte ('R' \u2013 Renacentista, 'M' \u2013 Arte Moderno, 'B' \u2013 Barroco, 'S' \u2013 Surrealismo) y cantidad de obras por artista. Los datos de cada artista est\u00e1n separados entre si por el s\u00edmbolo '+' y finalizan con el s\u00edmbolo '?'. En la secuencia OBRAS, se almacena el nombre de la obra, el a\u00f1o en que fue hecha, su precio, precedido siempre del signo '$' (solo 3 digitos) y su estado ('V' \u2013 Vendido, 'R' \u2013 Reservado, 'U' \u2013 Obra \u00danica). Todos los datos de las obras est\u00e1n separados por el s\u00edmbolo ',' y finalizan con el s\u00edmbolo '/'. El creador de cada obra se determina de acuerdo al dato 'cantidad de obras' de la secuencia ARTISTAS, por ej.: el autor RENE BARTOL tiene 2 obras, por lo cual las primeras 2 obras de la secuencia OBRAS le pertenecen, las siguientes 6, pertenecen a JUAN B JUSTO, etc. A continuaci\u00f3n un ejemplo de ambas secuencias: SECUENCIA ARTISTAS RENE BARTOL+ROSARIO+34+M+2?JUAN B JUSTO+NEUQUEN+61+R+5?\u2026\u2026.. SECUENCIAS OBRAS SOL Y PARANA,1997,$913,V/GRITO DE ESPERANZA,2003,$235,R/PENAS,1997,$781,V/\u2026\u2026\u2026 A partir de lo expuesto anteriormente, se pide: Generar una secuencia de salida con informaci\u00f3n de los artistas Renacentistas. La secuencia debe contener el nombre del artista, su estilo de arte, seguido de sus obras (nombre y a\u00f1o de creaci\u00f3n). Los datos correspondientes al mismo artista deben separarse entre s\u00ed con el signo '+' y finalizar con el signo '?'. Al final del proceso informar: la mayor cantidad de obras vendidas por un artista. el porcentaje de obras de artistas \"renacentistas\" sobre el total de obras. Ejercicio 2.1.29 \u00b6 Dado el ejercicio anterior, pensar: c\u00f3mo cambia el algoritmo soluci\u00f3n en caso de que el 'estilo de arte' se indique al principio de los datos de cada artista en la secuencia de artistas? Por qu\u00e9? Hacer el algoritmo. Ejercicio 2.1.30 \u00b6 El siguiente es un ejercicio del primer recuperatorio del primer parcial del a\u00f1o 2017: La AFIP dispone de dos secuencias de caracteres: PERSONAS Contiene los siguientes datos de personas f\u00edsicas o Empresas: nombre completo y fecha (de nacimiento o de creaci\u00f3n, respectivamente), agrupadas por provincias. No existe car\u00e1cter separador entre personas, el fin de cada provincia se indica con el car\u00e1cter &. Ejemplo: Mar\u00eda G\u00f3m-14021977Carlos Alberto Rodriguez-20061990....&Lionel Messi-24061987....&....{fin} nombre-ddmmaaaanombre-ddmmaa....& CUIT : contiene la Clave Unica de Identificaci\u00f3n Tributaria de las personas de la secuencia PERSONAS (existiendo una correspondencia una a una, es decir la primer persona con el primer cuit, la segunda con el segundo y asi sucesivamente) Cada n\u00famero de CUIT se almacena por medio de 11 caracteres: los 2 primeros indican el tipo, los 6 siguientes el n\u00famero de DNI (en caso de personas f\u00edsicas) o de sociedad (en caso de Empresas) y el \u00faltimo es un digito verificador. Ejemplo: **20123456786**23134567823**30712434445** Los tipos pueden ser:20, 23, 24 y 27 para Personas F\u00edsicas y 30, 33 y 34 para Empresas. Se solicita. Generar una secuencia de salida que contenga DNI, y el nombre completo de todas las personas f\u00edsicas cuyo nombre comience con vocal. Para cada Provincia calcular el total de personas f\u00edsicas y el porcentaje sobre el total de la provincia. Ejercicio 2.1.31 \u00b6 El siguiente es un ejercicio del primer parcial del a\u00f1o 2017: La empresa TICKET-TEC ha generado una secuencia de caracteres con informaci\u00f3n de sus ventas para los eventos de los \u00faltimos 3 meses, cuya estructura se describe a continuaci\u00f3n. Inicialmente existe el nombre del local de los eventos, cuya longitud se desconoce, termina con un #; a continuaci\u00f3n se tiene la informaci\u00f3n de todos los tickets vendidos para ese local, separado cada ticket del siguiente con el caracter !, y al final de todas las ventas para ese local, el caracter &. Por \u00faltimo la marca de fin de secuencia. Tambi\u00e9n en el caso de butaca se desconoce la longitud del n\u00famero, termina con un gui\u00f3n. EJEMPLO Teatro Opera#270520171A45-2030!270520173D120-2230!280520172C233-2030!&Galpon de las Luces#070720171C5-2030!301020172A233-2230!&{fin} local de eventos#Fecha del evento[ddmmaaaa] codigo del evento[1..3] butaca [sector [A,C o D], n\u00famero] - horario evento [hhmm]! Solo hay dos horarios 20:30 y 22:30. La empresa solicita un algoritmo que cumpla con las siguientes consignas: Generar una nueva secuencia de salida con el mismo formato, que contenga los tickets correspondientes a un mes ingresado por el usuario. Informar total general de tickets vendidos, total de tickets por evento y porcentaje de cada uno sobre el total general.","title":"2.1. Secuencias"},{"location":"practica/2.1/#21-secuencias","text":"","title":"2.1. Secuencias"},{"location":"practica/2.1/#ejercicio-211","text":"Dada una secuencia de letras del alfabeto que finaliza con una marca ' ', contar cuantas letras \"A\" hay en la secuencia.","title":"Ejercicio 2.1.1"},{"location":"practica/2.1/#ejercicio-212","text":"Dada una secuencia de letras del alfabeto que finaliza con la letra \"Z\", contar cuantas consonantes hay en la secuencia.","title":"Ejercicio 2.1.2"},{"location":"practica/2.1/#ejercicio-213","text":"Se dispone de una secuencia de caracteres y se desea obtener una secuencia de salida que resulte de copiar la secuencia de entrada, descartando el caracter \"$\".","title":"Ejercicio 2.1.3"},{"location":"practica/2.1/#ejercicio-214","text":"Se dispone de una secuencia de n\u00fameros de socios, y se desea saber la cantidad de socios que est\u00e1n registrados.","title":"Ejercicio 2.1.4"},{"location":"practica/2.1/#ejercicio-215","text":"La secuencia de socios del problema anterior tiene el inconveniente de que los n\u00fameros est\u00e1n ordenados pero no son correlativos. Se desea generar una secuencia que contenga los n\u00fameros de socios que no figuran en la secuencia de socios.","title":"Ejercicio 2.1.5"},{"location":"practica/2.1/#ejercicio-216","text":"Dada una secuencia de enteros que almacena la cantidad de habitantes de las ciudades capitales de las 23 provincias de la Rep\u00fablica Argentina, discriminados 4 categor\u00edas: menores de 18 a\u00f1os (varones y mujeres) y mayores de 18 a\u00f1os (varones y mujeres). Se pide determinar la poblaci\u00f3n total y los siguientes porcentajes: masculinos, femeninos, mayores de 18 y menores de 18.","title":"Ejercicio 2.1.6"},{"location":"practica/2.1/#ejercicio-217","text":"Se tiene una secuencia de enteros que contiene todos los CUIT de los empleados de una empresa, la misma termina con el CUIT 0. Para evitar largas esperas en los d\u00edas de pago, la empresa necesita organizarlos de acuerdo al \u00faltimo d\u00edgito de su documento, generar una secuencia con los CUIT de las personas que su n\u00famero de documento termine con 0, 1, 2 o 3.","title":"Ejercicio 2.1.7"},{"location":"practica/2.1/#ejercicio-218","text":"Teniendo en cuenta el ejercicio anterior, se solicita que la secuencia de salida sea una secuencia de caracteres y los CUIT se separen unos de otros con el caracter \"-\".","title":"Ejercicio 2.1.8"},{"location":"practica/2.1/#ejercicio-219","text":"Se dispone de una secuencia de caracteres. Se desea determinar la cantidad de palabras que comienzan con la letra 'I'.","title":"Ejercicio 2.1.9"},{"location":"practica/2.1/#ejercicio-2110","text":"Se dispone de una secuencia de caracteres. Se desea permita contar la cantidad de palabras que comienzan con una letra dada.","title":"Ejercicio 2.1.10"},{"location":"practica/2.1/#ejercicio-2111","text":"Dada una secuencia de caracteres, determinar la cantidad de palabras de 4 caracteres (letras)","title":"Ejercicio 2.1.11"},{"location":"practica/2.1/#ejercicio-2112","text":"Se dispone de una secuencia de caracteres. Se desea listar las palabras que comiencen con \"ALG\".","title":"Ejercicio 2.1.12"},{"location":"practica/2.1/#ejercicio-2113","text":"Se dispone de una secuencia de caracteres. Se desea listar las palabras que comiencen con \"ALG\".","title":"Ejercicio 2.1.13"},{"location":"practica/2.1/#ejercicio-2114","text":"Se dispone de una secuencia de caracteres y se desea saber la cantidad de caracteres (incluidos los espacios) que existen entre una coma y la siguiente. Se debe considerar que puede haber m\u00e1s de un par de comas, y que las subsecuencias inicial y final deben descartarse por no cumplir la condici\u00f3n enunciada. Sup\u00f3ngase que las comas son siempre contiguas al \u00faltimo caracter de la palabra.","title":"Ejercicio 2.1.14"},{"location":"practica/2.1/#ejercicio-2115","text":"Se desea saber la cantidad promedio de palabras que contienen las oraciones de una secuencia de caracteres. Sup\u00f3ngase que los puntos son siempre contiguos al \u00faltimo caracter de la palabra. La secuencia finaliza con una marca.","title":"Ejercicio 2.1.15"},{"location":"practica/2.1/#ejercicio-2116","text":"Se dispone de una secuencia de n\u00fameros de DNI asignados a un circuito electoral, generar otra secuencia de n\u00fameros que contenga los DNI m\u00faltiplos de 3.","title":"Ejercicio 2.1.16"},{"location":"practica/2.1/#ejercicio-2117","text":"Se desea calcular el costo de un telegrama, que se determina en funci\u00f3n del n\u00famero de palabras (que vale V1 cada una), salvo que el promedio de letras por palabra supere las cinco letras, caso en que cada palabra vale V2.","title":"Ejercicio 2.1.17"},{"location":"practica/2.1/#ejercicio-2118","text":"Escribir un algoritmo que produzca una secuencia de salida que contenga una oraci\u00f3n formada por por las palabras en posici\u00f3n par de cada oraci\u00f3n de una secuencia texto de entrada, que adem\u00e1s comienzan con la letra 'M'.","title":"Ejercicio 2.1.18"},{"location":"practica/2.1/#ejercicio-2119","text":"Dada una secuencia de caracteres, generar otra secuencia con todas las palabras de tres caracteres. Informar el porcentaje de las mismas, sobre el total de palabras de la secuencia de entrada. Considerar que puede haber m\u00e1s de un blanco entre palabras.","title":"Ejercicio 2.1.19"},{"location":"practica/2.1/#ejercicio-2120","text":"Se dispone de dos secuencias texto formadas por oraciones bimembres (sujeto y predicado, separados por comas \u2018,\u2019). Se desea una secuencia texto de salida formada por oraciones bimembres, de la siguiente forma: El sujeto, de la secuencia 1, y el predicado, de la secuencia 2. Al finalizar informar cuantas oraciones tiene cada secuencia.","title":"Ejercicio 2.1.20"},{"location":"practica/2.1/#ejercicio-2121","text":"Se dispone de dos secuencias texto formadas por oraciones bimembres (sujeto y predicado, separados por comas \u2018,\u2019). Se desea una secuencia texto de salida formada por oraciones bimembres, de la siguiente forma: El sujeto, de la secuencia 1, y el predicado, de la secuencia 2. Al finalizar informar cuantas oraciones tiene cada secuencia.","title":"Ejercicio 2.1.21"},{"location":"practica/2.1/#ejercicio-2122","text":"La empresa Ideas Argentinas S.A. posee datos de sus empleados en dos secuencias de caracteres; la primera secuencia (Sec1) formada por los nombres (uno por persona) de los empleados separados por blancos y la segunda secuencia (Sec2) posee los n\u00fameros de documento de cada uno de los empleados (palabras de 8 d\u00edgitos num\u00e9ricos). Ambas secuencias poseen la misma cantidad de datos, es decir al primer nombre de la primera secuencia le corresponde el primer n\u00famero de documento de la segunda secuencia y as\u00ed sucesivamente. La secuencia de n\u00fameros de documentos no posee espacios en blanco ni ning\u00fan otro tipo de caracter que separe un n\u00famero de documento de otro. A la empresa le interesa tener en una nueva secuencia (Sec3) los datos de todas aquellas personas que cumplan la condici\u00f3n de que el nombre se encuentre en una posici\u00f3n impar. La nueva secuencia debe generarse de la siguiente manera: el n\u00famero de documento seguido (sin espacios) por una coma y luego (sin espacios) por el nombre y seguido al nombre un #.","title":"Ejercicio 2.1.22"},{"location":"practica/2.1/#ejercicio-2123","text":"Realice un algoritmo para el enunciado del ejercicio 1.22, pero considerando que los datos que se deben copiar en la Sec3 son los de aquellas personas que cumplan la condici\u00f3n de que: el n\u00famero de documento comienza con un n\u00famero impar.","title":"Ejercicio 2.1.23"},{"location":"practica/2.1/#ejercicio-2124","text":"Realice un algoritmo para el enunciado del ejercicio 1.22, pero considerando que los datos que se deben copiar en la Sec3 son los de aquellas personas que cumplan la condici\u00f3n de que: el nombre no comienza con una vocal.","title":"Ejercicio 2.1.24"},{"location":"practica/2.1/#ejercicio-2125","text":"Dada una secuencia texto de entrada que contiene palabras alfanum\u00e9ricas, escribir un algoritmo que genere dos secuencias de salida. Una de ellas contendr\u00e1 solo las palabras de la secuencia original que comienzan con vocal, en las cuales se reemplazar\u00e1n todas las vocales por \u2018#\u2019, por ejemplo: entrada 'avi\u00f3n1', salida '#v##n1' y la otra ser\u00e1 una secuencia num\u00e9rica en la que se almacenar\u00e1n las cantidades de vocales que se encontraron en cada una de las palabras que cumplieron la condici\u00f3n. Por final de proceso se deber\u00e1 informar el promedio de palabras por oraci\u00f3n.","title":"Ejercicio 2.1.25"},{"location":"practica/2.1/#ejercicio-2126","text":"Se posee 2 secuencias (S1 y S2) con las cuales se desea generar una nueva secuencia (SAL) donde se intercalen las palabras de las secuencias de entrada, de la siguiente manera: copiar de S1 aquellas palabras que empiezan y terminan con la misma letra y de S2 aquellas palabras que posean al menos un digito num\u00e9rico y adem\u00e1s est\u00e9n en posici\u00f3n par.","title":"Ejercicio 2.1.26"},{"location":"practica/2.1/#ejercicio-2127","text":"Elaborar un procedimiento que dada una secuencia de caracteres como entrada genere otra del mismo tipo como salida. La secuencia de caracteres que se recibe incluye n\u00fameros de tarjetas de cr\u00e9dito, donde cada n\u00famero tiene 16 d\u00edgitos. Se desea obtener como resultado una nueva secuencia de salida con los n\u00fameros de tarjetas v\u00e1lidos. El algoritmo para la validaci\u00f3n de n\u00fameros de tarjetas de cr\u00e9dito es el siguiente: Para entender mejor el m\u00e9todo usaremos un n\u00famero correcto: 4013-7001-0977-4812, al que nos referiremos en el texto. Nos centramos en los caracteres que ocupan posiciones impares. 4 0 1 3 7 0 0 1 0 9 7 7 4 8 1 2 Por cada uno de ellos obtenemos el doble del valor que representan. Si el n\u00famero resultante es menor que 9, se deja tal cual, en caso contrario, se le resta 9. En nuestro ejemplo: 4 * 2 = 8; 1 * 2 = 2; 7 * 2 = 14, mayor que nueve, se le resta 9. 14 - 9 = 5; y as\u00ed sucesivamente. Si el n\u00famero resultante de la suma de las multiplicaciones y de los d\u00edgitos en posici\u00f3n par, es m\u00faltiplo de 10, y a la vez menor o igual a 150, es un n\u00famero de tarjeta v\u00e1lido. Para nuestro ejemplo: 8+0+2+3+5+0+0+1+0+9+5+7+8+8+2+2 = 60; por lo tanto el n\u00famero es v\u00e1lido.","title":"Ejercicio 2.1.27"},{"location":"practica/2.1/#ejercicio-2128","text":"La galer\u00eda de pintura y arte nacional, PINTA DE ARGENTINA, almacena informaci\u00f3n sobre los artistas y sus obras de arte en secuencias de caracteres. Durante todo el a\u00f1o, las obras de arte son expuestas en eventos de subasta y exposici\u00f3n, en los cuales se comercializan al p\u00fablico en general. A fin de a\u00f1o la Comisi\u00f3n Directiva de la Galer\u00eda solicita que, a partir de toda esa informaci\u00f3n, se generen algunos informes. Se debe tener en cuenta lo siguiente: En la secuencia ARTISTAS, se almacena el nombre de cada artista, lugar de nacimiento, edad, estilo de arte ('R' \u2013 Renacentista, 'M' \u2013 Arte Moderno, 'B' \u2013 Barroco, 'S' \u2013 Surrealismo) y cantidad de obras por artista. Los datos de cada artista est\u00e1n separados entre si por el s\u00edmbolo '+' y finalizan con el s\u00edmbolo '?'. En la secuencia OBRAS, se almacena el nombre de la obra, el a\u00f1o en que fue hecha, su precio, precedido siempre del signo '$' (solo 3 digitos) y su estado ('V' \u2013 Vendido, 'R' \u2013 Reservado, 'U' \u2013 Obra \u00danica). Todos los datos de las obras est\u00e1n separados por el s\u00edmbolo ',' y finalizan con el s\u00edmbolo '/'. El creador de cada obra se determina de acuerdo al dato 'cantidad de obras' de la secuencia ARTISTAS, por ej.: el autor RENE BARTOL tiene 2 obras, por lo cual las primeras 2 obras de la secuencia OBRAS le pertenecen, las siguientes 6, pertenecen a JUAN B JUSTO, etc. A continuaci\u00f3n un ejemplo de ambas secuencias: SECUENCIA ARTISTAS RENE BARTOL+ROSARIO+34+M+2?JUAN B JUSTO+NEUQUEN+61+R+5?\u2026\u2026.. SECUENCIAS OBRAS SOL Y PARANA,1997,$913,V/GRITO DE ESPERANZA,2003,$235,R/PENAS,1997,$781,V/\u2026\u2026\u2026 A partir de lo expuesto anteriormente, se pide: Generar una secuencia de salida con informaci\u00f3n de los artistas Renacentistas. La secuencia debe contener el nombre del artista, su estilo de arte, seguido de sus obras (nombre y a\u00f1o de creaci\u00f3n). Los datos correspondientes al mismo artista deben separarse entre s\u00ed con el signo '+' y finalizar con el signo '?'. Al final del proceso informar: la mayor cantidad de obras vendidas por un artista. el porcentaje de obras de artistas \"renacentistas\" sobre el total de obras.","title":"Ejercicio 2.1.28"},{"location":"practica/2.1/#ejercicio-2129","text":"Dado el ejercicio anterior, pensar: c\u00f3mo cambia el algoritmo soluci\u00f3n en caso de que el 'estilo de arte' se indique al principio de los datos de cada artista en la secuencia de artistas? Por qu\u00e9? Hacer el algoritmo.","title":"Ejercicio 2.1.29"},{"location":"practica/2.1/#ejercicio-2130","text":"El siguiente es un ejercicio del primer recuperatorio del primer parcial del a\u00f1o 2017: La AFIP dispone de dos secuencias de caracteres: PERSONAS Contiene los siguientes datos de personas f\u00edsicas o Empresas: nombre completo y fecha (de nacimiento o de creaci\u00f3n, respectivamente), agrupadas por provincias. No existe car\u00e1cter separador entre personas, el fin de cada provincia se indica con el car\u00e1cter &. Ejemplo: Mar\u00eda G\u00f3m-14021977Carlos Alberto Rodriguez-20061990....&Lionel Messi-24061987....&....{fin} nombre-ddmmaaaanombre-ddmmaa....& CUIT : contiene la Clave Unica de Identificaci\u00f3n Tributaria de las personas de la secuencia PERSONAS (existiendo una correspondencia una a una, es decir la primer persona con el primer cuit, la segunda con el segundo y asi sucesivamente) Cada n\u00famero de CUIT se almacena por medio de 11 caracteres: los 2 primeros indican el tipo, los 6 siguientes el n\u00famero de DNI (en caso de personas f\u00edsicas) o de sociedad (en caso de Empresas) y el \u00faltimo es un digito verificador. Ejemplo: **20123456786**23134567823**30712434445** Los tipos pueden ser:20, 23, 24 y 27 para Personas F\u00edsicas y 30, 33 y 34 para Empresas. Se solicita. Generar una secuencia de salida que contenga DNI, y el nombre completo de todas las personas f\u00edsicas cuyo nombre comience con vocal. Para cada Provincia calcular el total de personas f\u00edsicas y el porcentaje sobre el total de la provincia.","title":"Ejercicio 2.1.30"},{"location":"practica/2.1/#ejercicio-2131","text":"El siguiente es un ejercicio del primer parcial del a\u00f1o 2017: La empresa TICKET-TEC ha generado una secuencia de caracteres con informaci\u00f3n de sus ventas para los eventos de los \u00faltimos 3 meses, cuya estructura se describe a continuaci\u00f3n. Inicialmente existe el nombre del local de los eventos, cuya longitud se desconoce, termina con un #; a continuaci\u00f3n se tiene la informaci\u00f3n de todos los tickets vendidos para ese local, separado cada ticket del siguiente con el caracter !, y al final de todas las ventas para ese local, el caracter &. Por \u00faltimo la marca de fin de secuencia. Tambi\u00e9n en el caso de butaca se desconoce la longitud del n\u00famero, termina con un gui\u00f3n. EJEMPLO Teatro Opera#270520171A45-2030!270520173D120-2230!280520172C233-2030!&Galpon de las Luces#070720171C5-2030!301020172A233-2230!&{fin} local de eventos#Fecha del evento[ddmmaaaa] codigo del evento[1..3] butaca [sector [A,C o D], n\u00famero] - horario evento [hhmm]! Solo hay dos horarios 20:30 y 22:30. La empresa solicita un algoritmo que cumpla con las siguientes consignas: Generar una nueva secuencia de salida con el mismo formato, que contenga los tickets correspondientes a un mes ingresado por el usuario. Informar total general de tickets vendidos, total de tickets por evento y porcentaje de cada uno sobre el total general.","title":"Ejercicio 2.1.31"},{"location":"practica/2.2/","text":"2.2. Archivos Secuenciales \u00b6 Ejercicio 2.2.1 \u00b6 Se dispone de una secuencia con los datos de los alumnos de la facultad: Apellido y Nombre Carrera (ISI - IEM - IQ) N\u00ba de Legajo Fecha de Nacimiento Fecha de Ingreso D.N.I. Sexo (M o F) Fecha de \u00faltimo examen aprobado Nota Se desea un listado de los mismos, con el siguiente formato: Nro_Legajo Apellido_Nombre Documento Carrera Ejercicio 2.2.2 \u00b6 Se dispone de una secuencia de facturas con los siguientes datos: N\u00ba de Factura Fecha Total Se desea un listado de las facturas cuyas fechas sean posteriores a una fecha dada, y cuyos importes totales no alcancen los $1000, con el siguiente formato: NroLegajo Fecha Importe_Total Ejercicio 2.2.3 \u00b6 Dada la siguiente secuencia de datos con el siguiente formato: N\u00ba de socio N\u00ba de tel\u00e9fono Apellido y Nombre Carrera (ISI - IEM - IQ - LAR) Domicilio Cantidad de unidades prestadas Correspondiente a los alumnos socios de la Biblioteca, generar la secuencia de los alumnos de \u201cISI\u201d que tengan prestadas m\u00e1s de 4 unidades bibliogr\u00e1ficas. Ejercicio 2.2.4 \u00b6 A partir de la secuencia del ejercicio 2.01 se desea generar otra secuencia con los alumnos de una carrera dada que aprobaron alguna materia este a\u00f1o, con nota mayor a 7 (siete). Ejercicio 2.2.5 \u00b6 A partir de la secuencia del ejercicio 2.01 se desea generar un listado con los alumnos que aprobaron la \u00faltima materia rendida con nota superior a 7, e ingresaron el a\u00f1o pasado, con el siguiente formato: Nro_Legajo Apellido_Nombre Carrera Ejercicio 2.2.6 \u00b6 Se cuenta con una secuencia que contiene el Apellido y Nombre y Promedio General de los Graduados de una Facultad, y se solicita generar un listado con diversas recomendaciones para cubrir vacantes en una importante Empresa. Las mencionadas recomendaciones ser\u00e1n establecidas del siguiente modo: si el promedio es menor que 7, la recomendaci\u00f3n ser\u00e1 negativa (\"NO\"); por el contrario, si el promedio es menor que 8, la recomendaci\u00f3n ser\u00e1 positiva (\"SI\"); de lo contrario, si el promedio es menor que 9, la recomendaci\u00f3n ser\u00e1 favorable (\"F\"); por \u00faltimo, si el promedio supera los 9 puntos, la recomendaci\u00f3n ser\u00e1 muy favorable(\"MF\"). El listado deber respetar el siguiente formato: Apellido_Nombre Promedio Recomendaci\u00f3n Adem\u00e1s, se solicita la impresi\u00f3n del total de graduados que recibieron cada una de las recomendaciones, y el promedio global de los mismos. Ejercicio 2.2.7 \u00b6 Se dispone de un archivo con los datos de un padr\u00f3n electoral con la siguiente informaci\u00f3n: Nombre y apellido Clase DNI Direcci\u00f3n N\u00ba de Mesa Observaciones N\u00ba de Circuito Partido (0= independiente, 1=\u2018A\u2019, 2=\u2018B\u2019, 3=\u2018C\u2019) Generar: a) Una secuencia de salida con nombre y apellido, DNI, y direcci\u00f3n de todas las personas afiliadas al partido \u201cC\u201d. b) Una secuencia de salida con nombre y apellido, DNI, y direcci\u00f3n de todas las personas no afiliadas a ning\u00fan partido y de clase posterior a 1940. Ejercicio 2.2.8 \u00b6 De los datos del siguiente ejercicio: COMPRAS Ordenado por Nro_Cliente Nro_Cliente Fecha_Ultima_Compra Monto CLIENTES Ordenado por Nro_Cliente Nro_Cliente Apellido_Nombre Domicilio Tel\u00e9fono DNI Ambos archivos est\u00e1n ordenados por Nro. de Cliente en forma ascendente. Listar los nombres fecha y monto de \u00faltima compra, de todos aquellos clientes cuya \u00faltima compra sea posterior a una fecha dada y el monto supere un monto dado. Ejercicio 2.2.9 \u00b6 Una casa deportiva dispone de un archivo de productos, ordenado por c\u00f3digo de producto, que contiene los siguientes datos: PRODUCTOS Ordenado por Cod_Producto Cod_Producto Tipo (1,2,3) Marca Modelo Descripci\u00f3n Cantidad_Existente Precio_Unitario Se ha registrado en el mercado un aumento de precios, el cual no es uniforme para todos los art\u00edculos, sino que var\u00eda seg\u00fan el tipo de los mismos de la siguiente manera: tipo 1- Calzados: 10%, tipo 2 \u2013 Indumentaria: 25%, tipo 3 - Accesorios (pelotas, raquetas, etc.): 50%. Por este motivo el gerente de la empresa solicit\u00f3 al Departamento de Inform\u00e1tica que modifique los precios de acuerdo a los porcentajes antes mencionados. Generar un nuevo fichero de productos para cumplir con la solicitud del gerente. Al terminar el proceso informar cantidad total de art\u00edculos de cada tipo hay y total general. Control de Control \u00b6 Ejercicio 2.2.10 \u00b6 Del archivo general de alumnos de la U.T.N. - Facultad Regional Resistencia, ordenado por carrera, se desea emitir la cantidad de alumnos correspondientes a cada carrera y el total general. Ejercicio 2.2.11 \u00b6 Se dispone de un archivo con datos de los alumnos de la U.T.N. con la siguiente informaci\u00f3n para cada alumno: PRODUCTOS Ordenado por Sexo, Carrera, Nro_Legajo Sexo Carrera Nro_Legajo Fecha_Ingreso Total_Materias_Aprobadas Se desea un listado con el siguiente detalle por sexo, carrera y total general Total de alumnos que ingresaron en el a\u00f1o 2009 con m\u00e1s de 20 materias aprobadas. Total de alumnos que ingresaron en el a\u00f1o 2009 con menos de 20 materias aprobadas Ejercicio 2.2.12 \u00b6 Dada una secuencia con informaci\u00f3n de poblaci\u00f3n de un PAIS: POBLACION Ordenado por Provincia, Departamento, Ciudad, Barrio, ID_Casa Provincia Departamento Ciudad Barrio ID_Casa Cantidad_Habitantes Generar una secuencia con informaci\u00f3n de los departamentos de esa provincia, cuyo registro tenga el siguiente formato: POBLACION_SALIDA Provincia Departamento Cantidad_Habitantes Ejercicio 2.2.13 \u00b6 Un Casino de la regi\u00f3n ha notado un incremento en los costos de las reparaciones de tragamonedas en sus sucursales. Por ello solicit\u00f3 un informe con la cantidad de reparaciones y sus costos, discriminados seg\u00fan tragamonedas, modelo, marca, sucursal y total general. Se dispone de un archivo REPARACIONES, con el siguiente formato. Cada registro representa la reparaci\u00f3n de un tragamonedas, tener en cuenta que puede existir m\u00e1s de una reparaci\u00f3n por tragamonedas. REPARACIONES Ordenado por Cod_Sucursal, Marca, Modelo, Cod_Tragamonedas Cod_Sucursal Marca Modelo Cod_Tragamonedas Fecha_Reparacion Costo_Reparacion Realice el algoritmo para emitir el informe con los totales solicitados Ejercicio 2.2.14 \u00b6 Dados el siguiente fichero con datos de un censo de la ciudad de Resistencia: CENSO Ordenado por Radio, Manzana, Nro_Vivienda Radio Manzana Nro_Vivienda Condicion_Vivienda Cantidad_Habitantes Condici\u00f3n puede ser : Muy Buena, Buena o Mala. Obtener los siguientes totales de personas que habitan en viviendas cuya condici\u00f3n es muy buena: total en la ciudad y totales por Radio y Manzana). Ejercicio 2.2.15 \u00b6 El organismo del cual dependen las escuelas de un distrito lleva un archivo con los registros para todos los alumnos de nivel secundario de ese distrito: ALUMNOS Ordenado por Escuela, A\u00f1o, Divisi\u00f3n Escuela A\u00f1o Divisi\u00f3n Nombre Cant_Inasistencias Se introduce como dato el n\u00famero de distrito y la cantidad de d\u00edas de clase dictados en el a\u00f1o. El archivo est\u00e1 ordenado por n\u00famero de escuela, a\u00f1o y divisi\u00f3n. Los alumnos que superan el 20% de las inasistencias est\u00e1n en situaci\u00f3n de LIBRES, de lo contrario son REGULARES. Se desea conocer: Para cada divisi\u00f3n: - Cantidad de alumnos Para cada a\u00f1o: - Cantidad total de alumnos libres - Cantidad de alumnos regulares - Cantidad total de alumnos Todas las escuelas: - Cantidad total de alumnos - Porcentaje de alumnos libres. - Promedio de inasistencias por alumnos. Mezcla \u00b6 Ejercicio 2.2.16 \u00b6 Construir un algoritmo que a partir de un fichero de pel\u00edculas nuevas conteniendo: PELICULAS_NUEVAS Ordenado por Nro_Pelicula Nro_Pelicula Titulo Genero Cant_Copias Fecha_Estreno y otro fichero de peliculas existentes, ambos ordenados por pel\u00edcula, PELICULAS Ordenado por Nro_Pelicula Nro_Pelicula Titulo Genero Cant_Copias Fecha_Estreno Genere un \u00fanico archivo (con el mismo formato de los ficheros de entrada) que contenga todas las peliculas. Considerar que hay un solo registro por pel\u00edcula y no se repiten entre ficheros. Ejercicio 2.2.17 \u00b6 La Secretaria Academica de la Facultad lanza un proyecto para incentivar a aquellos alumnos que realizaron el Cursillo de Ingreso a la Universidad y no lograron aprobarlo en los turnos de Agosto y Febrero, de manera de brindarles apoyo Academico con el fin de que, en el Cursillo del a\u00f1o siguiente puedan aprobar los examenes necesarios e ingresar a la Universidad. Para esto, dicha Secretaria\u00adnecesita crear un archivo donde se encuentren todos los aspirantes que realizaron el Cursillo de Ingreso en ambos turnos, y no lograron aprobarlo. Los datos correspondientes a cada uno de los turnos del Cursillo dictado est\u00e1n almacenados en dos archivos (uno para cada turno), los cuales presentan el siguiente formato: ASPIRANTES Ordenado por DNI DNI ApeyNom Carrera F_Nac Email ColegioSec FechaInscripcion Aprobado (Si/No) UD debe realizar un algoritmo que permita mezclar los archivos Aspirantes (de Agosto y Febrero) y generar un archivo SEGUIMIENTO con el siguiente formato: SEGUIMIENTO Ordenado por DNI DNI ApeyNom Email ColegioSec Ejercicio 2.2.18 \u00b6 Un supermercado desea conocer la totalidad de unidades existentes de cada art\u00edculo a fin de hacer un control de stock y decidir si se deben comprar nuevas unidades o redistribuir la mercader\u00eda existente. El supermercado posee dos sucursales, cada una de las cuales envi\u00f3 su informaci\u00f3n en un fichero con el siguiente formato: ARTICULOS Cod_Prod Tipo Marca Descripci\u00f3n Cant_Unidades Escribir un algortimo que permita obtener un \u00fanico fichero de salida, con el mismo formato, que contenga la informaci\u00f3n solicitada y adem\u00e1s, emita un listado con los siguientes datos: Cod_Prod Tipo Marca Descripci\u00f3n Cant_Suc_1 Cant_Suc_2 Total_Unidades Actualizacion \u00b6 Ejercicio 2.2.19 \u00b6 En una Empresa Farmac\u00e9utica se posee un archivo MAE_REMEDIOS (ordenado por Clave: Farmacia + Medicamento), el que se actualiza semanalmente, a traves de la informaci\u00f3n que se encuentra cargada en un archivo de MOVIMIENTOS (ordenado por Clavem: Farmacia + Medicamento, y Cod_Mov), de la siguiente forma: Si Clave ( MAE_REMEDIOS ) es menor que Clavem ( MOVIMIENTOS ), simplemente se transfieren los datos del Maestro a la salida y se graban. Si Clave ( MAE_REMEDIOS ) es igual a Clavem ( MOVIMIENTOS ) y el Codmov es 1, se considera error y se lista un mensaje indicando el tipo de error; pero si el Codmov es 2, entonces es un remedio que deja de fabricarse y se transfiere el registro al archivo de Remedios vencidos ( REM_VENC ) ; pero si el Cod_Mov es 3, se modifica la cantidad actual con la cantidad recibida. Si Clave ( MAE_REMEDIOS ) es mayor que Clavem ( MOVIMIENTOS ) y el Codmov es 1, se incorpora el remedio a nuestro Vademecum, considerando que la cantidad recibida configura la cantidad actual y la Fecha_Vencimiento es 30 d\u00edas posterior a la fecha actual; pero si el Codmov es 2 o 3 se considera error y se deben producir los correspondientes mensajes de error. MAE_REMEDIOS Ordenado por Farmacia y Medicamento Farmacia Medicamento Cant_Actual Fecha_Vencimiento MOVIMIENTOS Ordenado por Farmacia, Medicamento y Cod_Mov Farmacia Medicamento Cod_Mov Cant_Recibida REM_VENC Ordenado por Medicamento Medicamento Cant_Vencida Ejercicio 2.2.20 \u00b6 Se desea generar una secuencia, a partir de la secuencia del problema 2.01, donde se actualice la fecha de aprobaci\u00f3n del \u00faltimo ex\u00e1men, para ello se cuenta con informaci\u00f3n del \u00faltimo turno de ex\u00e1men, seg\u00fan el siguiente detalle: EXAMENES Ordenado por Nro_Legajo Nro_Legajo Carrera Cod_Materia Fecha_Examen Nota Se debe considerar que no necesariamente todos los alumnos se presentan en cada turno de ex\u00e1men, y que un alumno puede presentarse a rendir m\u00e1s de una materia en un mismo turno. Sup\u00f3nganse ambas secuencias ordenadas por N\u00famero de Legajo. Ejercicio 2.2.21 \u00b6 En un pr\u00e1ctico para la Facultad un grupo de alumnos debe implementar una Red Social llamada UTNBook. Para lo cual debe utilizar los siguientes archivos: AMIGOS Ordenado por Cod_Usuario y Cod_Amigo Cod_Usuario Cod_Amigo Fecha_Amistad Mensaje_Muro Cada registro indica la fecha desde que los usuarios son amigos y el \u00faltimo mensaje que un amigo ha escrito en el muro del usuario. NOTIFICACIONES Ordenado por Cod_Usuario y Cod_Amigo Cod_Usuario Cod_Amigo Cod_Movimiento Fecha_Amistad Mensaje_Muro Peri\u00f3dicamente se debe actualizar el archivo Amigos, con el fin de que refleje las amistades que posee cada usuario. En el archivo notificaciones pueden existir tres tipos de acciones: la solicitud de una amistad (Cod_mov = 'A'); la eliminaci\u00f3n de una amistad (Cod_mov = 'B'); o la informaci\u00f3n de un mensaje que un amigo ha escrito en el muro del usuario (Cod_mov = 'M'). Considerar que la eliminaci\u00f3n de una amistad implica la baja f\u00edsica de un registro y que hay un solo registro de Notificaciones por cada registro de Amigo. Ejercicio 2.2.22 \u00b6 IDEM ejercicio 2.21 pero agregando al enunciado: \u201cAl finalizar el proceso se desea conocer: el usuario que posee m\u00e1s amigos.\u201d Ejercicio 2.2.23 \u00b6 IDEM ejercicio 2.21 pero agregando al enunciado: \u201cAl finalizar el proceso se desea conocer: el usuario que posee m\u00e1s amigos.\u201d Ejercicio 2.2.24 \u00b6 Una obra social lleva el control de los costos que le insume cada afiliado. Considerando como costos, los pagos que la misma debe realizar (en conceptos de honorarios, pagos a farmacias, etc) por los distintos servicios que el afiliado utiliza. Para esto la empresa cuenta con un archivo COSTOS_POR_AFILIADO , en el cual se registran la cantidad de atenciones y/o servicios que solicita el empleado y el costo total (en pesos) que la empresa debe pagar por estos. Este archivo est\u00e1 conformado por registros con el siguiente formato, y est\u00e1 ordenado Cod_Afiliado COSTOS_POR_AFILIADO Ordenado por Cod_Afiliado Cod_Afiliado Fecha_Alta Fecha_Baja Cant_Servicios Costo Cada viernes en la organizaci\u00f3n, se lleva a cabo un proceso de actualizaci\u00f3n del archivo COSTOS_POR_AFILIADO . Para poder realizarlo se cuenta con un archivo SERVICIOS_SEMANALES , ordenado por cod_afiliado y fecha_at, en el cual se registran los servicios que solicitaron los afiliados durante cada semana. Cada registro de este archivo presenta el siguiente formato, SERVICIOS_SEMANALES Ordenado por Cod_Afiliado Cod_Afiliado Fecha_At Cod_Servicio Costo En el archivo SERVICIOS_SEMANALES puede existir m\u00e1s de un registro por cada afiliado. Para realizar el proceso de actualizaci\u00f3n se deben tener en cuenta las siguientes consideraciones. Si alg\u00fan Cod_Afiliado de serviciosSemanales, no se encuentra en ning\u00fan registro del archivo COSTOS_POR_AFILIADO, y el primer Cod_Servicio asociado al mismo es igual a 001 entonces se trata de un nuevo afiliado que fue dado de alta. Si Cod_Afiliado de serviciosSemanales es igual al de COSTOS_POR_AFILIADO y el Cod_Servicio es igual a 000 se trata de un afiliado que fue dado de baja y se considera como fecha de baja el valor que reside en Fecha_At. Si en cambio, el Cod_Servicio tiene alg\u00fan otro valor este representa un servicio o atenci\u00f3n que solicit\u00f3 el afiliado; por lo tanto deben contabilizarse la cantidad de servicios que solicit\u00f3; como as\u00ed tambi\u00e9n los costos que estos insumen. Si alg\u00fan Cod_Afiliado de COSTOS_POR_AFILIADO no se encuentra en el archivo SERVICIOS_SEMANALES, se trata de un afiliado que no utiliz\u00f3 los servicios en la semana que se realiza la actualizaci\u00f3n. Cualquier otro caso distinto a los considerados anteriormente se toma como un error, y deben ser informados por pantalla; indicando claramente el motivo del error. Ejercicio 2.2.25 \u00b6 IDEM 2.21 pero suponiendo que hay mas de un registro de notificaciones por cada registro de amigos.","title":"2.2. Archivos Secuenciales"},{"location":"practica/2.2/#22-archivos-secuenciales","text":"","title":"2.2. Archivos Secuenciales"},{"location":"practica/2.2/#ejercicio-221","text":"Se dispone de una secuencia con los datos de los alumnos de la facultad: Apellido y Nombre Carrera (ISI - IEM - IQ) N\u00ba de Legajo Fecha de Nacimiento Fecha de Ingreso D.N.I. Sexo (M o F) Fecha de \u00faltimo examen aprobado Nota Se desea un listado de los mismos, con el siguiente formato: Nro_Legajo Apellido_Nombre Documento Carrera","title":"Ejercicio 2.2.1"},{"location":"practica/2.2/#ejercicio-222","text":"Se dispone de una secuencia de facturas con los siguientes datos: N\u00ba de Factura Fecha Total Se desea un listado de las facturas cuyas fechas sean posteriores a una fecha dada, y cuyos importes totales no alcancen los $1000, con el siguiente formato: NroLegajo Fecha Importe_Total","title":"Ejercicio 2.2.2"},{"location":"practica/2.2/#ejercicio-223","text":"Dada la siguiente secuencia de datos con el siguiente formato: N\u00ba de socio N\u00ba de tel\u00e9fono Apellido y Nombre Carrera (ISI - IEM - IQ - LAR) Domicilio Cantidad de unidades prestadas Correspondiente a los alumnos socios de la Biblioteca, generar la secuencia de los alumnos de \u201cISI\u201d que tengan prestadas m\u00e1s de 4 unidades bibliogr\u00e1ficas.","title":"Ejercicio 2.2.3"},{"location":"practica/2.2/#ejercicio-224","text":"A partir de la secuencia del ejercicio 2.01 se desea generar otra secuencia con los alumnos de una carrera dada que aprobaron alguna materia este a\u00f1o, con nota mayor a 7 (siete).","title":"Ejercicio 2.2.4"},{"location":"practica/2.2/#ejercicio-225","text":"A partir de la secuencia del ejercicio 2.01 se desea generar un listado con los alumnos que aprobaron la \u00faltima materia rendida con nota superior a 7, e ingresaron el a\u00f1o pasado, con el siguiente formato: Nro_Legajo Apellido_Nombre Carrera","title":"Ejercicio 2.2.5"},{"location":"practica/2.2/#ejercicio-226","text":"Se cuenta con una secuencia que contiene el Apellido y Nombre y Promedio General de los Graduados de una Facultad, y se solicita generar un listado con diversas recomendaciones para cubrir vacantes en una importante Empresa. Las mencionadas recomendaciones ser\u00e1n establecidas del siguiente modo: si el promedio es menor que 7, la recomendaci\u00f3n ser\u00e1 negativa (\"NO\"); por el contrario, si el promedio es menor que 8, la recomendaci\u00f3n ser\u00e1 positiva (\"SI\"); de lo contrario, si el promedio es menor que 9, la recomendaci\u00f3n ser\u00e1 favorable (\"F\"); por \u00faltimo, si el promedio supera los 9 puntos, la recomendaci\u00f3n ser\u00e1 muy favorable(\"MF\"). El listado deber respetar el siguiente formato: Apellido_Nombre Promedio Recomendaci\u00f3n Adem\u00e1s, se solicita la impresi\u00f3n del total de graduados que recibieron cada una de las recomendaciones, y el promedio global de los mismos.","title":"Ejercicio 2.2.6"},{"location":"practica/2.2/#ejercicio-227","text":"Se dispone de un archivo con los datos de un padr\u00f3n electoral con la siguiente informaci\u00f3n: Nombre y apellido Clase DNI Direcci\u00f3n N\u00ba de Mesa Observaciones N\u00ba de Circuito Partido (0= independiente, 1=\u2018A\u2019, 2=\u2018B\u2019, 3=\u2018C\u2019) Generar: a) Una secuencia de salida con nombre y apellido, DNI, y direcci\u00f3n de todas las personas afiliadas al partido \u201cC\u201d. b) Una secuencia de salida con nombre y apellido, DNI, y direcci\u00f3n de todas las personas no afiliadas a ning\u00fan partido y de clase posterior a 1940.","title":"Ejercicio 2.2.7"},{"location":"practica/2.2/#ejercicio-228","text":"De los datos del siguiente ejercicio: COMPRAS Ordenado por Nro_Cliente Nro_Cliente Fecha_Ultima_Compra Monto CLIENTES Ordenado por Nro_Cliente Nro_Cliente Apellido_Nombre Domicilio Tel\u00e9fono DNI Ambos archivos est\u00e1n ordenados por Nro. de Cliente en forma ascendente. Listar los nombres fecha y monto de \u00faltima compra, de todos aquellos clientes cuya \u00faltima compra sea posterior a una fecha dada y el monto supere un monto dado.","title":"Ejercicio 2.2.8"},{"location":"practica/2.2/#ejercicio-229","text":"Una casa deportiva dispone de un archivo de productos, ordenado por c\u00f3digo de producto, que contiene los siguientes datos: PRODUCTOS Ordenado por Cod_Producto Cod_Producto Tipo (1,2,3) Marca Modelo Descripci\u00f3n Cantidad_Existente Precio_Unitario Se ha registrado en el mercado un aumento de precios, el cual no es uniforme para todos los art\u00edculos, sino que var\u00eda seg\u00fan el tipo de los mismos de la siguiente manera: tipo 1- Calzados: 10%, tipo 2 \u2013 Indumentaria: 25%, tipo 3 - Accesorios (pelotas, raquetas, etc.): 50%. Por este motivo el gerente de la empresa solicit\u00f3 al Departamento de Inform\u00e1tica que modifique los precios de acuerdo a los porcentajes antes mencionados. Generar un nuevo fichero de productos para cumplir con la solicitud del gerente. Al terminar el proceso informar cantidad total de art\u00edculos de cada tipo hay y total general.","title":"Ejercicio 2.2.9"},{"location":"practica/2.2/#control-de-control","text":"","title":"Control de Control"},{"location":"practica/2.2/#ejercicio-2210","text":"Del archivo general de alumnos de la U.T.N. - Facultad Regional Resistencia, ordenado por carrera, se desea emitir la cantidad de alumnos correspondientes a cada carrera y el total general.","title":"Ejercicio 2.2.10"},{"location":"practica/2.2/#ejercicio-2211","text":"Se dispone de un archivo con datos de los alumnos de la U.T.N. con la siguiente informaci\u00f3n para cada alumno: PRODUCTOS Ordenado por Sexo, Carrera, Nro_Legajo Sexo Carrera Nro_Legajo Fecha_Ingreso Total_Materias_Aprobadas Se desea un listado con el siguiente detalle por sexo, carrera y total general Total de alumnos que ingresaron en el a\u00f1o 2009 con m\u00e1s de 20 materias aprobadas. Total de alumnos que ingresaron en el a\u00f1o 2009 con menos de 20 materias aprobadas","title":"Ejercicio 2.2.11"},{"location":"practica/2.2/#ejercicio-2212","text":"Dada una secuencia con informaci\u00f3n de poblaci\u00f3n de un PAIS: POBLACION Ordenado por Provincia, Departamento, Ciudad, Barrio, ID_Casa Provincia Departamento Ciudad Barrio ID_Casa Cantidad_Habitantes Generar una secuencia con informaci\u00f3n de los departamentos de esa provincia, cuyo registro tenga el siguiente formato: POBLACION_SALIDA Provincia Departamento Cantidad_Habitantes","title":"Ejercicio 2.2.12"},{"location":"practica/2.2/#ejercicio-2213","text":"Un Casino de la regi\u00f3n ha notado un incremento en los costos de las reparaciones de tragamonedas en sus sucursales. Por ello solicit\u00f3 un informe con la cantidad de reparaciones y sus costos, discriminados seg\u00fan tragamonedas, modelo, marca, sucursal y total general. Se dispone de un archivo REPARACIONES, con el siguiente formato. Cada registro representa la reparaci\u00f3n de un tragamonedas, tener en cuenta que puede existir m\u00e1s de una reparaci\u00f3n por tragamonedas. REPARACIONES Ordenado por Cod_Sucursal, Marca, Modelo, Cod_Tragamonedas Cod_Sucursal Marca Modelo Cod_Tragamonedas Fecha_Reparacion Costo_Reparacion Realice el algoritmo para emitir el informe con los totales solicitados","title":"Ejercicio 2.2.13"},{"location":"practica/2.2/#ejercicio-2214","text":"Dados el siguiente fichero con datos de un censo de la ciudad de Resistencia: CENSO Ordenado por Radio, Manzana, Nro_Vivienda Radio Manzana Nro_Vivienda Condicion_Vivienda Cantidad_Habitantes Condici\u00f3n puede ser : Muy Buena, Buena o Mala. Obtener los siguientes totales de personas que habitan en viviendas cuya condici\u00f3n es muy buena: total en la ciudad y totales por Radio y Manzana).","title":"Ejercicio 2.2.14"},{"location":"practica/2.2/#ejercicio-2215","text":"El organismo del cual dependen las escuelas de un distrito lleva un archivo con los registros para todos los alumnos de nivel secundario de ese distrito: ALUMNOS Ordenado por Escuela, A\u00f1o, Divisi\u00f3n Escuela A\u00f1o Divisi\u00f3n Nombre Cant_Inasistencias Se introduce como dato el n\u00famero de distrito y la cantidad de d\u00edas de clase dictados en el a\u00f1o. El archivo est\u00e1 ordenado por n\u00famero de escuela, a\u00f1o y divisi\u00f3n. Los alumnos que superan el 20% de las inasistencias est\u00e1n en situaci\u00f3n de LIBRES, de lo contrario son REGULARES. Se desea conocer: Para cada divisi\u00f3n: - Cantidad de alumnos Para cada a\u00f1o: - Cantidad total de alumnos libres - Cantidad de alumnos regulares - Cantidad total de alumnos Todas las escuelas: - Cantidad total de alumnos - Porcentaje de alumnos libres. - Promedio de inasistencias por alumnos.","title":"Ejercicio 2.2.15"},{"location":"practica/2.2/#mezcla","text":"","title":"Mezcla"},{"location":"practica/2.2/#ejercicio-2216","text":"Construir un algoritmo que a partir de un fichero de pel\u00edculas nuevas conteniendo: PELICULAS_NUEVAS Ordenado por Nro_Pelicula Nro_Pelicula Titulo Genero Cant_Copias Fecha_Estreno y otro fichero de peliculas existentes, ambos ordenados por pel\u00edcula, PELICULAS Ordenado por Nro_Pelicula Nro_Pelicula Titulo Genero Cant_Copias Fecha_Estreno Genere un \u00fanico archivo (con el mismo formato de los ficheros de entrada) que contenga todas las peliculas. Considerar que hay un solo registro por pel\u00edcula y no se repiten entre ficheros.","title":"Ejercicio 2.2.16"},{"location":"practica/2.2/#ejercicio-2217","text":"La Secretaria Academica de la Facultad lanza un proyecto para incentivar a aquellos alumnos que realizaron el Cursillo de Ingreso a la Universidad y no lograron aprobarlo en los turnos de Agosto y Febrero, de manera de brindarles apoyo Academico con el fin de que, en el Cursillo del a\u00f1o siguiente puedan aprobar los examenes necesarios e ingresar a la Universidad. Para esto, dicha Secretaria\u00adnecesita crear un archivo donde se encuentren todos los aspirantes que realizaron el Cursillo de Ingreso en ambos turnos, y no lograron aprobarlo. Los datos correspondientes a cada uno de los turnos del Cursillo dictado est\u00e1n almacenados en dos archivos (uno para cada turno), los cuales presentan el siguiente formato: ASPIRANTES Ordenado por DNI DNI ApeyNom Carrera F_Nac Email ColegioSec FechaInscripcion Aprobado (Si/No) UD debe realizar un algoritmo que permita mezclar los archivos Aspirantes (de Agosto y Febrero) y generar un archivo SEGUIMIENTO con el siguiente formato: SEGUIMIENTO Ordenado por DNI DNI ApeyNom Email ColegioSec","title":"Ejercicio 2.2.17"},{"location":"practica/2.2/#ejercicio-2218","text":"Un supermercado desea conocer la totalidad de unidades existentes de cada art\u00edculo a fin de hacer un control de stock y decidir si se deben comprar nuevas unidades o redistribuir la mercader\u00eda existente. El supermercado posee dos sucursales, cada una de las cuales envi\u00f3 su informaci\u00f3n en un fichero con el siguiente formato: ARTICULOS Cod_Prod Tipo Marca Descripci\u00f3n Cant_Unidades Escribir un algortimo que permita obtener un \u00fanico fichero de salida, con el mismo formato, que contenga la informaci\u00f3n solicitada y adem\u00e1s, emita un listado con los siguientes datos: Cod_Prod Tipo Marca Descripci\u00f3n Cant_Suc_1 Cant_Suc_2 Total_Unidades","title":"Ejercicio 2.2.18"},{"location":"practica/2.2/#actualizacion","text":"","title":"Actualizacion"},{"location":"practica/2.2/#ejercicio-2219","text":"En una Empresa Farmac\u00e9utica se posee un archivo MAE_REMEDIOS (ordenado por Clave: Farmacia + Medicamento), el que se actualiza semanalmente, a traves de la informaci\u00f3n que se encuentra cargada en un archivo de MOVIMIENTOS (ordenado por Clavem: Farmacia + Medicamento, y Cod_Mov), de la siguiente forma: Si Clave ( MAE_REMEDIOS ) es menor que Clavem ( MOVIMIENTOS ), simplemente se transfieren los datos del Maestro a la salida y se graban. Si Clave ( MAE_REMEDIOS ) es igual a Clavem ( MOVIMIENTOS ) y el Codmov es 1, se considera error y se lista un mensaje indicando el tipo de error; pero si el Codmov es 2, entonces es un remedio que deja de fabricarse y se transfiere el registro al archivo de Remedios vencidos ( REM_VENC ) ; pero si el Cod_Mov es 3, se modifica la cantidad actual con la cantidad recibida. Si Clave ( MAE_REMEDIOS ) es mayor que Clavem ( MOVIMIENTOS ) y el Codmov es 1, se incorpora el remedio a nuestro Vademecum, considerando que la cantidad recibida configura la cantidad actual y la Fecha_Vencimiento es 30 d\u00edas posterior a la fecha actual; pero si el Codmov es 2 o 3 se considera error y se deben producir los correspondientes mensajes de error. MAE_REMEDIOS Ordenado por Farmacia y Medicamento Farmacia Medicamento Cant_Actual Fecha_Vencimiento MOVIMIENTOS Ordenado por Farmacia, Medicamento y Cod_Mov Farmacia Medicamento Cod_Mov Cant_Recibida REM_VENC Ordenado por Medicamento Medicamento Cant_Vencida","title":"Ejercicio 2.2.19"},{"location":"practica/2.2/#ejercicio-2220","text":"Se desea generar una secuencia, a partir de la secuencia del problema 2.01, donde se actualice la fecha de aprobaci\u00f3n del \u00faltimo ex\u00e1men, para ello se cuenta con informaci\u00f3n del \u00faltimo turno de ex\u00e1men, seg\u00fan el siguiente detalle: EXAMENES Ordenado por Nro_Legajo Nro_Legajo Carrera Cod_Materia Fecha_Examen Nota Se debe considerar que no necesariamente todos los alumnos se presentan en cada turno de ex\u00e1men, y que un alumno puede presentarse a rendir m\u00e1s de una materia en un mismo turno. Sup\u00f3nganse ambas secuencias ordenadas por N\u00famero de Legajo.","title":"Ejercicio 2.2.20"},{"location":"practica/2.2/#ejercicio-2221","text":"En un pr\u00e1ctico para la Facultad un grupo de alumnos debe implementar una Red Social llamada UTNBook. Para lo cual debe utilizar los siguientes archivos: AMIGOS Ordenado por Cod_Usuario y Cod_Amigo Cod_Usuario Cod_Amigo Fecha_Amistad Mensaje_Muro Cada registro indica la fecha desde que los usuarios son amigos y el \u00faltimo mensaje que un amigo ha escrito en el muro del usuario. NOTIFICACIONES Ordenado por Cod_Usuario y Cod_Amigo Cod_Usuario Cod_Amigo Cod_Movimiento Fecha_Amistad Mensaje_Muro Peri\u00f3dicamente se debe actualizar el archivo Amigos, con el fin de que refleje las amistades que posee cada usuario. En el archivo notificaciones pueden existir tres tipos de acciones: la solicitud de una amistad (Cod_mov = 'A'); la eliminaci\u00f3n de una amistad (Cod_mov = 'B'); o la informaci\u00f3n de un mensaje que un amigo ha escrito en el muro del usuario (Cod_mov = 'M'). Considerar que la eliminaci\u00f3n de una amistad implica la baja f\u00edsica de un registro y que hay un solo registro de Notificaciones por cada registro de Amigo.","title":"Ejercicio 2.2.21"},{"location":"practica/2.2/#ejercicio-2222","text":"IDEM ejercicio 2.21 pero agregando al enunciado: \u201cAl finalizar el proceso se desea conocer: el usuario que posee m\u00e1s amigos.\u201d","title":"Ejercicio 2.2.22"},{"location":"practica/2.2/#ejercicio-2223","text":"IDEM ejercicio 2.21 pero agregando al enunciado: \u201cAl finalizar el proceso se desea conocer: el usuario que posee m\u00e1s amigos.\u201d","title":"Ejercicio 2.2.23"},{"location":"practica/2.2/#ejercicio-2224","text":"Una obra social lleva el control de los costos que le insume cada afiliado. Considerando como costos, los pagos que la misma debe realizar (en conceptos de honorarios, pagos a farmacias, etc) por los distintos servicios que el afiliado utiliza. Para esto la empresa cuenta con un archivo COSTOS_POR_AFILIADO , en el cual se registran la cantidad de atenciones y/o servicios que solicita el empleado y el costo total (en pesos) que la empresa debe pagar por estos. Este archivo est\u00e1 conformado por registros con el siguiente formato, y est\u00e1 ordenado Cod_Afiliado COSTOS_POR_AFILIADO Ordenado por Cod_Afiliado Cod_Afiliado Fecha_Alta Fecha_Baja Cant_Servicios Costo Cada viernes en la organizaci\u00f3n, se lleva a cabo un proceso de actualizaci\u00f3n del archivo COSTOS_POR_AFILIADO . Para poder realizarlo se cuenta con un archivo SERVICIOS_SEMANALES , ordenado por cod_afiliado y fecha_at, en el cual se registran los servicios que solicitaron los afiliados durante cada semana. Cada registro de este archivo presenta el siguiente formato, SERVICIOS_SEMANALES Ordenado por Cod_Afiliado Cod_Afiliado Fecha_At Cod_Servicio Costo En el archivo SERVICIOS_SEMANALES puede existir m\u00e1s de un registro por cada afiliado. Para realizar el proceso de actualizaci\u00f3n se deben tener en cuenta las siguientes consideraciones. Si alg\u00fan Cod_Afiliado de serviciosSemanales, no se encuentra en ning\u00fan registro del archivo COSTOS_POR_AFILIADO, y el primer Cod_Servicio asociado al mismo es igual a 001 entonces se trata de un nuevo afiliado que fue dado de alta. Si Cod_Afiliado de serviciosSemanales es igual al de COSTOS_POR_AFILIADO y el Cod_Servicio es igual a 000 se trata de un afiliado que fue dado de baja y se considera como fecha de baja el valor que reside en Fecha_At. Si en cambio, el Cod_Servicio tiene alg\u00fan otro valor este representa un servicio o atenci\u00f3n que solicit\u00f3 el afiliado; por lo tanto deben contabilizarse la cantidad de servicios que solicit\u00f3; como as\u00ed tambi\u00e9n los costos que estos insumen. Si alg\u00fan Cod_Afiliado de COSTOS_POR_AFILIADO no se encuentra en el archivo SERVICIOS_SEMANALES, se trata de un afiliado que no utiliz\u00f3 los servicios en la semana que se realiza la actualizaci\u00f3n. Cualquier otro caso distinto a los considerados anteriormente se toma como un error, y deben ser informados por pantalla; indicando claramente el motivo del error.","title":"Ejercicio 2.2.24"},{"location":"practica/2.2/#ejercicio-2225","text":"IDEM 2.21 pero suponiendo que hay mas de un registro de notificaciones por cada registro de amigos.","title":"Ejercicio 2.2.25"},{"location":"practica/2.3/","text":"2.3. Archivos Indexados \u00b6 Ejercicio 2.3.1.a \u00b6 Dado un fichero secuencial de Facturas, ordenado por Nro. de Cliente y Nro. de Factura, con la siguiente estructura: FACTURAS Ordenado por Nro_Cliente, Nro_Factura Nro_Cliente Nro_Factura Fecha Importe Se desea un listado con el siguiente detalle: Nro. Cliente Nombre Cliente Numero Factura Los datos del cliente se encuentran en un fichero indexado por Nro. de Cliente, que tiene la siguiente estructura: CLIENTES Ordenado por Nro_Cliente Nro_Cliente Nombre DNI CUIT Domicilio Ejercicio 2.3.1.b \u00b6 Dado un fichero secuencial de Facturas, ordenado por Nro. de Cliente y Nro. de Factura, con la siguiente estructura: FACTURAS Ordenado por Nro_Cliente, Nro_Factura Nro_Cliente Nro_Factura Fecha Importe Se desea un listado con el siguiente detalle: Nro. Cliente Nombre Cliente Total Facturado Cantidad de Facturas Los datos del cliente se encuentran en un fichero indexado por Nro. de Cliente, que tiene la siguiente estructura: CLIENTES Indexado por Nro_Cliente Nro_Cliente Nombre DNI CUIT Domicilio Ejercicio 2.3.2 \u00b6 Una empresa dispone de un fichero secuencial con datos de sus empleados, ordenado por n\u00famero de sucursal, y categor\u00eda, con los siguientes datos: EMPLEADOS Ordenado por Nro_Sucursal, Categoria Nro_Sucursal Categoria (A,B,C) Nombre_Empleado Cod_Curso Tecnico (si,no) Y un fichero con datos de cursos, indexado por c\u00f3digo de curso: CURSO Indexado por Cod_Curso Cod_Curso Nombre Fecha Cant_Horas Emitir un listado informando: Para cada empleado: sucursal, categor\u00eda, nombre del empleado y nombre del curso que debe realizar. Por sucursal, categor\u00eda y toda la empresa: Total empleados t\u00e9cnicos Total empleados no t\u00e9cnicos Total empleados Ejercicio 2.3.3 \u00b6 Los automovilistas pasan por el peaje del Puente Gral. Belgrano y deben pagar seg\u00fan su categor\u00eda, pero adem\u00e1s, si ya han pasado previamente dentro del d\u00eda tienen pase libre. Teniendo en cuenta el archivo siguiente, construya el algoritmo que realice lo que corresponda: genere el comprobante, indicando el importe a pagar o emita un mensaje indicando que ya pas\u00f3 anteriormente. Adem\u00e1s indique cuales deber\u00edan ser los datos de entrada. PEAJE Indexado por Patente, Fecha Patente XXX-NNN Fecha N(8) Ult_Hora N(4) Costo XXX,XX Costo por categoria Categoria Costo 1 1,20 2 2,50 3 4,00 4 5,00 Ejercicio 2.3.4 \u00b6 Crear un algoritmo que simule el trabajo de una caja de supermercado. El algoritmo debe permitir imprimir el ticket de compra y realizar el descuento de stock del producto. Al generar el comprobante del ticket debe guardar los datos en los archivos TICKET y DETALLE_TICKET (el cliente es: \"consumidor final\" y el NroTicket se genera autom\u00e1ticamente, mediante la funci\u00f3n OBTENER_TICKET). Archivos: PRODUCTOS Indexado por Cod_Prod Cod_Prod Nombre Stock Precio TICKET Indexado por Nro_Ticket Nro_Ticket Fecha Cliente DETALLE_TICKET Indexado por Nro_Ticket Nro_Ticket Nro_Linea Cod_Prod Cantidad Comprobante: Empresa: ...................................... CUIT: .... - ............ - ... Fecha: ... / ... / ... Cliente ................................................................................................................................. Producto Cantidad Subtotal .............................. .............................. .............................. .............................. .............................. .............................. .............................. .............................. .............................. Total .............................. Ejercicio 2.3.5 \u00b6 Para poder comprar d\u00f3lares en una entidad bancaria al precio oficial (\\$9,40), el beneficiario, debe tener un ingreso promedio en los \u00faltimos 12 meses equivalente a dos veces el sueldo m\u00ednimo vital y m\u00f3vil (el cual en la actualidad es de \\$5000 por mes). Luego, con el sueldo del mes actual, solo se permite comprar por un importe no superior al 30% del mismo. Por ej.: si una persona tiene un sueldo de \\$10.000, desde septiembre del a\u00f1o pasado, al dia de hoy esa persona cumple la condici\u00f3n para comprar y puede comprar d\u00f3lares por un monto m\u00e1ximo de \\$3.000 (equivalente a U$S 319). Para ello se cuenta con dos archivos indexados: CABECERA_SUELDO Indexado por DNI, Periodo, Nro_Recibo DNI N(8) Periodo N(6) Nro_Recibo N(15) ApyNom AN(50) Empresa AN(50) El periodo est\u00e1 representado por 6 caracteres num\u00e9ricos dispuestos de forma de a\u00f1o/mes (aaaamm). El n\u00famero de recibo (Nro_Recibo) es \u00fanico. Una persona puede tener varios recibos de sueldo. La clave de este archivo es DNI, Periodo y Nro_Recibo. RECIBO Indexado por Nro_Recibo Nro_Recibo N(15) Concepto N(8) Tipo (0..2) Monto N(15,2) El campo tipo puede contener los siguientes valores: 0 - Sueldo b\u00e1sico, 1 \u2013 Otros Ingresos, 2 \u2013 Descuentos. Para calcular el sueldo m\u00ednimo se suman el sueldo (tipo 0), y los otros ingresos (tipo 1), NO se restan los descuentos. La clave es Nro_Recibo. Dado el escenario descripto, se pide escribir dos algoritmos: Que el empleado del Banco ingrese un n\u00famero de documento de alg\u00fan interesado en comprar d\u00f3lares, y le devuelva si est\u00e1 habilitado o no para comprar y, en caso positivo, cu\u00e1l es el monto m\u00e1ximo en pesos que se le autoriza. Si el interesado desea comprar, solicite el monto en pesos que destinar\u00e1 a la compra, el cual deber\u00e1 ser descontado de su cuenta. Los datos de la cuenta est\u00e1n en un archivo indexado con la siguiente estructura (indexado por DNI): DNI N(8) Nro_Cuenta N(25) Saldo N(15,2) Los puntos a) y b) se repiten hasta que el operador (empleado del Banco) indique que desea finalizar. Procesar peticiones de compra, de acuerdo a un archivo de entrada de peticiones, evaluando si es posible realizar la operaci\u00f3n o no. Si no es posible, indicar cual es el motivo: 1 \u2013 No tiene el ingreso promedio suficiente, o 2 \u2013 Pide m\u00e1s del 30 % de su sueldo actual. PETICIONES DNI N(8) Cant_Soli N(15,2) El resultado de la evaluaci\u00f3n se debe grabar en un nuevo archivo de salida con el siguiente formato: SALIDA DNI N(8) Cant_Soli N(15,2) Pudo (si,no) Error 1..2 Ejercicio 2.3.6 \u00b6 Una Municipalidad debe liquidar las patentes de su parque automotor para el cuarto trimestre del a\u00f1o e imprimir un padr\u00f3n de cobros y deudas, con cortes de importe por grupo, categor\u00eda y a\u00f1o de fabricaci\u00f3n. Los archivos son: AUTOS Ordenado por CLAVE Grupo N(2) Categoria 1..50 Anio_Fab N(4) Nro_Patente N(8) DNI AN(8) ApyNom AN(25) Domicilio AN(30) DEUDAS Indexado por CLAVED Nro_Patente N(8) Anio_Deuda N(4) Trimestre N(1) Importe N(5,2) Para el trimestre actual, la cuota a abonar viene en el siguiente archivo: CUOTAS Indexado por CLAVEC Grupo N(2) Categoria 1..50 Anio_Fab N(4) Importe N(5,2) Antes de imprimir el rengl\u00f3n correspondiente a cada nro de patente se debe verificar si existen deudas pendientes, en cuyo caso se sumaran todos los importes adeudados y se consignar\u00e1n en la columna de deudas. PADRON CLAVE DNI APYNOM DOMIC DEUDA 4to TRIMESTRE ..... ... ...... ..... $ XXX,XX $ XXX,XX TOTAL $ XXX,XX $ XXX,XX Ejercicio 2.3.7 \u00b6 Crear un algoritmo que imprima un reporte como el que se indica, incluyendo totales por Obra Social y Cl\u00ednica de liquidaciones a m\u00e9dicos. Los archivos que intervienen son: LIQUIDACIONES Ordenado por O.S. y Clinica O.S. Clinica Nro_Leg Mes Anio Bruto Descuento_AFIP Descuento_DGR Neto = Bruto \u2013 (Desc_AFIP + Desc_DGR) OBRAS_SOCIALES Indexado por Cod_Os Cod_OS Nombre CL\u00cdNICAS Indexado por Cod_Cli Cod_Cli Nombre M\u00c9DICOS Indexado por Nro_Leg Nro_Leg ApyNom Especialidad DNI Reporte: Obra Social: Clinica: M\u00e9dicos Nro Legajo Nombre Neto ............................ ................... ................... ............................ ................... ................... Total Cl\u00ednica ................... Total Obra Social ................... Ejercicio 2.3.8 \u00b6 Los alumnos que desarrollaban el proyecto UTNBook (ejercicio 2.23) han decidido modificar parte de la aplicaci\u00f3n para que esta tenga mayor interacci\u00f3n con el usuario. Es as\u00ed que decidieron eliminar el archivo de Notificaciones, provocando as\u00ed que la inserci\u00f3n nuevos amigos, la eliminaci\u00f3n de amistades y la escritura en los muros de otras personas est\u00e9 a cargo del usuario. Con estas consideraciones trabajaron con el siguiente archivo: AMIGOS Indexado por Cod_Usuario y Cod_Amigo Cod_Usuario Cod_Amigo Fecha_Amistad Mensaje_Muro El proceso para agregar o eliminar amigos y escribir en los muros de estos es ahora el siguiente: El usuario, al iniciar la sesi\u00f3n, ingresa su C\u00f3digo de Usuario y el C\u00f3digo del amigo. Luego, puede seleccionar tres opciones distintas: Agregar Amigo; Eliminar Amigo y Escribir en el Muro. Si selecciona Agregar Amigo se realizan las acciones necesarias para incorporar esta nueva amistad al usuario, y en caso de no poder realizarse, se muestra un mensaje por pantalla explicando el motivo que imposibilita la amistad. (por ej. Cod_Usuario inexistente, Amistad entre Usuario y Amigo ya existente, etc.). En cambio, si selecciona Eliminar Amigo el algoritmo deber\u00e1 eliminar la amistad en caso de existir, en caso contrario informar el error por pantalla. Por \u00faltimo, al seleccionar Escribir en el Muro el usuario debe ingresar el mensaje que desea escribir a su amigo y luego el algoritmo deber\u00e1 registrar este mensaje. De ser necesario informar alg\u00fan error que pueda ocurrir (por ej. Amistad entre el Usuario y Amigo inexistente, etc). Ejercicio 2.3.9 \u00b6 Pepsico S.A.I.C. desea que Ud. realice el algoritmo para poner al corriente los saldos de sus clientes y el stock de la empresa. Para ello cuentan con: CLIENTES Indexado por ClienteID ClienteID Cliente_Nombre Cliente_CUIT Cliente_Saldo DETALLE_CLIENTES Indexado por Nro_Operacion Nro_Operacion Fecha_Operacion ClienteID Importe Factura_Numero VENTAS Ordenado por Venta_Numero Venta_Numero Venta_Fecha Factura_Numero ProductoID Cantidad_Vendida ClienteID PRODUCTOS Indexado por ProductoID ProductoID Stock Producto_Detalle Costo_Unitario Se debe actualizar el saldo del cliente y adem\u00e1s agregar el detalle de la compra que figura en el archivo de Ventas al archivo Detalle_Clientes, por cada venta realizada se deber\u00e1 descontar la cantidad vendida del stock. Por final del proceso se desea saber el total de productos vendidos, y un listado de los clientes con su saldo actualizado.","title":"2.3. Archivos Indexados"},{"location":"practica/2.3/#23-archivos-indexados","text":"","title":"2.3. Archivos Indexados"},{"location":"practica/2.3/#ejercicio-231a","text":"Dado un fichero secuencial de Facturas, ordenado por Nro. de Cliente y Nro. de Factura, con la siguiente estructura: FACTURAS Ordenado por Nro_Cliente, Nro_Factura Nro_Cliente Nro_Factura Fecha Importe Se desea un listado con el siguiente detalle: Nro. Cliente Nombre Cliente Numero Factura Los datos del cliente se encuentran en un fichero indexado por Nro. de Cliente, que tiene la siguiente estructura: CLIENTES Ordenado por Nro_Cliente Nro_Cliente Nombre DNI CUIT Domicilio","title":"Ejercicio 2.3.1.a"},{"location":"practica/2.3/#ejercicio-231b","text":"Dado un fichero secuencial de Facturas, ordenado por Nro. de Cliente y Nro. de Factura, con la siguiente estructura: FACTURAS Ordenado por Nro_Cliente, Nro_Factura Nro_Cliente Nro_Factura Fecha Importe Se desea un listado con el siguiente detalle: Nro. Cliente Nombre Cliente Total Facturado Cantidad de Facturas Los datos del cliente se encuentran en un fichero indexado por Nro. de Cliente, que tiene la siguiente estructura: CLIENTES Indexado por Nro_Cliente Nro_Cliente Nombre DNI CUIT Domicilio","title":"Ejercicio 2.3.1.b"},{"location":"practica/2.3/#ejercicio-232","text":"Una empresa dispone de un fichero secuencial con datos de sus empleados, ordenado por n\u00famero de sucursal, y categor\u00eda, con los siguientes datos: EMPLEADOS Ordenado por Nro_Sucursal, Categoria Nro_Sucursal Categoria (A,B,C) Nombre_Empleado Cod_Curso Tecnico (si,no) Y un fichero con datos de cursos, indexado por c\u00f3digo de curso: CURSO Indexado por Cod_Curso Cod_Curso Nombre Fecha Cant_Horas Emitir un listado informando: Para cada empleado: sucursal, categor\u00eda, nombre del empleado y nombre del curso que debe realizar. Por sucursal, categor\u00eda y toda la empresa: Total empleados t\u00e9cnicos Total empleados no t\u00e9cnicos Total empleados","title":"Ejercicio 2.3.2"},{"location":"practica/2.3/#ejercicio-233","text":"Los automovilistas pasan por el peaje del Puente Gral. Belgrano y deben pagar seg\u00fan su categor\u00eda, pero adem\u00e1s, si ya han pasado previamente dentro del d\u00eda tienen pase libre. Teniendo en cuenta el archivo siguiente, construya el algoritmo que realice lo que corresponda: genere el comprobante, indicando el importe a pagar o emita un mensaje indicando que ya pas\u00f3 anteriormente. Adem\u00e1s indique cuales deber\u00edan ser los datos de entrada. PEAJE Indexado por Patente, Fecha Patente XXX-NNN Fecha N(8) Ult_Hora N(4) Costo XXX,XX Costo por categoria Categoria Costo 1 1,20 2 2,50 3 4,00 4 5,00","title":"Ejercicio 2.3.3"},{"location":"practica/2.3/#ejercicio-234","text":"Crear un algoritmo que simule el trabajo de una caja de supermercado. El algoritmo debe permitir imprimir el ticket de compra y realizar el descuento de stock del producto. Al generar el comprobante del ticket debe guardar los datos en los archivos TICKET y DETALLE_TICKET (el cliente es: \"consumidor final\" y el NroTicket se genera autom\u00e1ticamente, mediante la funci\u00f3n OBTENER_TICKET). Archivos: PRODUCTOS Indexado por Cod_Prod Cod_Prod Nombre Stock Precio TICKET Indexado por Nro_Ticket Nro_Ticket Fecha Cliente DETALLE_TICKET Indexado por Nro_Ticket Nro_Ticket Nro_Linea Cod_Prod Cantidad Comprobante: Empresa: ...................................... CUIT: .... - ............ - ... Fecha: ... / ... / ... Cliente ................................................................................................................................. Producto Cantidad Subtotal .............................. .............................. .............................. .............................. .............................. .............................. .............................. .............................. .............................. Total ..............................","title":"Ejercicio 2.3.4"},{"location":"practica/2.3/#ejercicio-235","text":"Para poder comprar d\u00f3lares en una entidad bancaria al precio oficial (\\$9,40), el beneficiario, debe tener un ingreso promedio en los \u00faltimos 12 meses equivalente a dos veces el sueldo m\u00ednimo vital y m\u00f3vil (el cual en la actualidad es de \\$5000 por mes). Luego, con el sueldo del mes actual, solo se permite comprar por un importe no superior al 30% del mismo. Por ej.: si una persona tiene un sueldo de \\$10.000, desde septiembre del a\u00f1o pasado, al dia de hoy esa persona cumple la condici\u00f3n para comprar y puede comprar d\u00f3lares por un monto m\u00e1ximo de \\$3.000 (equivalente a U$S 319). Para ello se cuenta con dos archivos indexados: CABECERA_SUELDO Indexado por DNI, Periodo, Nro_Recibo DNI N(8) Periodo N(6) Nro_Recibo N(15) ApyNom AN(50) Empresa AN(50) El periodo est\u00e1 representado por 6 caracteres num\u00e9ricos dispuestos de forma de a\u00f1o/mes (aaaamm). El n\u00famero de recibo (Nro_Recibo) es \u00fanico. Una persona puede tener varios recibos de sueldo. La clave de este archivo es DNI, Periodo y Nro_Recibo. RECIBO Indexado por Nro_Recibo Nro_Recibo N(15) Concepto N(8) Tipo (0..2) Monto N(15,2) El campo tipo puede contener los siguientes valores: 0 - Sueldo b\u00e1sico, 1 \u2013 Otros Ingresos, 2 \u2013 Descuentos. Para calcular el sueldo m\u00ednimo se suman el sueldo (tipo 0), y los otros ingresos (tipo 1), NO se restan los descuentos. La clave es Nro_Recibo. Dado el escenario descripto, se pide escribir dos algoritmos: Que el empleado del Banco ingrese un n\u00famero de documento de alg\u00fan interesado en comprar d\u00f3lares, y le devuelva si est\u00e1 habilitado o no para comprar y, en caso positivo, cu\u00e1l es el monto m\u00e1ximo en pesos que se le autoriza. Si el interesado desea comprar, solicite el monto en pesos que destinar\u00e1 a la compra, el cual deber\u00e1 ser descontado de su cuenta. Los datos de la cuenta est\u00e1n en un archivo indexado con la siguiente estructura (indexado por DNI): DNI N(8) Nro_Cuenta N(25) Saldo N(15,2) Los puntos a) y b) se repiten hasta que el operador (empleado del Banco) indique que desea finalizar. Procesar peticiones de compra, de acuerdo a un archivo de entrada de peticiones, evaluando si es posible realizar la operaci\u00f3n o no. Si no es posible, indicar cual es el motivo: 1 \u2013 No tiene el ingreso promedio suficiente, o 2 \u2013 Pide m\u00e1s del 30 % de su sueldo actual. PETICIONES DNI N(8) Cant_Soli N(15,2) El resultado de la evaluaci\u00f3n se debe grabar en un nuevo archivo de salida con el siguiente formato: SALIDA DNI N(8) Cant_Soli N(15,2) Pudo (si,no) Error 1..2","title":"Ejercicio 2.3.5"},{"location":"practica/2.3/#ejercicio-236","text":"Una Municipalidad debe liquidar las patentes de su parque automotor para el cuarto trimestre del a\u00f1o e imprimir un padr\u00f3n de cobros y deudas, con cortes de importe por grupo, categor\u00eda y a\u00f1o de fabricaci\u00f3n. Los archivos son: AUTOS Ordenado por CLAVE Grupo N(2) Categoria 1..50 Anio_Fab N(4) Nro_Patente N(8) DNI AN(8) ApyNom AN(25) Domicilio AN(30) DEUDAS Indexado por CLAVED Nro_Patente N(8) Anio_Deuda N(4) Trimestre N(1) Importe N(5,2) Para el trimestre actual, la cuota a abonar viene en el siguiente archivo: CUOTAS Indexado por CLAVEC Grupo N(2) Categoria 1..50 Anio_Fab N(4) Importe N(5,2) Antes de imprimir el rengl\u00f3n correspondiente a cada nro de patente se debe verificar si existen deudas pendientes, en cuyo caso se sumaran todos los importes adeudados y se consignar\u00e1n en la columna de deudas. PADRON CLAVE DNI APYNOM DOMIC DEUDA 4to TRIMESTRE ..... ... ...... ..... $ XXX,XX $ XXX,XX TOTAL $ XXX,XX $ XXX,XX","title":"Ejercicio 2.3.6"},{"location":"practica/2.3/#ejercicio-237","text":"Crear un algoritmo que imprima un reporte como el que se indica, incluyendo totales por Obra Social y Cl\u00ednica de liquidaciones a m\u00e9dicos. Los archivos que intervienen son: LIQUIDACIONES Ordenado por O.S. y Clinica O.S. Clinica Nro_Leg Mes Anio Bruto Descuento_AFIP Descuento_DGR Neto = Bruto \u2013 (Desc_AFIP + Desc_DGR) OBRAS_SOCIALES Indexado por Cod_Os Cod_OS Nombre CL\u00cdNICAS Indexado por Cod_Cli Cod_Cli Nombre M\u00c9DICOS Indexado por Nro_Leg Nro_Leg ApyNom Especialidad DNI Reporte: Obra Social: Clinica: M\u00e9dicos Nro Legajo Nombre Neto ............................ ................... ................... ............................ ................... ................... Total Cl\u00ednica ................... Total Obra Social ...................","title":"Ejercicio 2.3.7"},{"location":"practica/2.3/#ejercicio-238","text":"Los alumnos que desarrollaban el proyecto UTNBook (ejercicio 2.23) han decidido modificar parte de la aplicaci\u00f3n para que esta tenga mayor interacci\u00f3n con el usuario. Es as\u00ed que decidieron eliminar el archivo de Notificaciones, provocando as\u00ed que la inserci\u00f3n nuevos amigos, la eliminaci\u00f3n de amistades y la escritura en los muros de otras personas est\u00e9 a cargo del usuario. Con estas consideraciones trabajaron con el siguiente archivo: AMIGOS Indexado por Cod_Usuario y Cod_Amigo Cod_Usuario Cod_Amigo Fecha_Amistad Mensaje_Muro El proceso para agregar o eliminar amigos y escribir en los muros de estos es ahora el siguiente: El usuario, al iniciar la sesi\u00f3n, ingresa su C\u00f3digo de Usuario y el C\u00f3digo del amigo. Luego, puede seleccionar tres opciones distintas: Agregar Amigo; Eliminar Amigo y Escribir en el Muro. Si selecciona Agregar Amigo se realizan las acciones necesarias para incorporar esta nueva amistad al usuario, y en caso de no poder realizarse, se muestra un mensaje por pantalla explicando el motivo que imposibilita la amistad. (por ej. Cod_Usuario inexistente, Amistad entre Usuario y Amigo ya existente, etc.). En cambio, si selecciona Eliminar Amigo el algoritmo deber\u00e1 eliminar la amistad en caso de existir, en caso contrario informar el error por pantalla. Por \u00faltimo, al seleccionar Escribir en el Muro el usuario debe ingresar el mensaje que desea escribir a su amigo y luego el algoritmo deber\u00e1 registrar este mensaje. De ser necesario informar alg\u00fan error que pueda ocurrir (por ej. Amistad entre el Usuario y Amigo inexistente, etc).","title":"Ejercicio 2.3.8"},{"location":"practica/2.3/#ejercicio-239","text":"Pepsico S.A.I.C. desea que Ud. realice el algoritmo para poner al corriente los saldos de sus clientes y el stock de la empresa. Para ello cuentan con: CLIENTES Indexado por ClienteID ClienteID Cliente_Nombre Cliente_CUIT Cliente_Saldo DETALLE_CLIENTES Indexado por Nro_Operacion Nro_Operacion Fecha_Operacion ClienteID Importe Factura_Numero VENTAS Ordenado por Venta_Numero Venta_Numero Venta_Fecha Factura_Numero ProductoID Cantidad_Vendida ClienteID PRODUCTOS Indexado por ProductoID ProductoID Stock Producto_Detalle Costo_Unitario Se debe actualizar el saldo del cliente y adem\u00e1s agregar el detalle de la compra que figura en el archivo de Ventas al archivo Detalle_Clientes, por cada venta realizada se deber\u00e1 descontar la cantidad vendida del stock. Por final del proceso se desea saber el total de productos vendidos, y un listado de los clientes con su saldo actualizado.","title":"Ejercicio 2.3.9"},{"location":"practica/3.1/","text":"3.1. Arreglos \u00b6 Ejercicio 3.1.1 \u00b6 Para cada una de las consignas siguientes, genere un algoritmo que permita solucionarla (3 algoritmos) usando un arreglo de 100 n\u00fameros enteros: Almacenar 100 n\u00fameros. Localizar el n\u00famero de mayor valor y el de menor valor, informar sus valores y sus posiciones. Contar y sumar todos los n\u00fameros pares. Ejercicio 3.1.2 \u00b6 Genere un \u00fanico algoritmo que resuelva las 3 consignas del ejercicio anterior. Ejercicio 3.1.3 \u00b6 Dados un vector de reales a de n elementos, con n \u2208 N 0 , y un n\u00famero real x >= 0, calcular el valor y tal que: $$y = \\sum_{i=1}^n (a_i \\times x^i)$$ Ejercicio 3.1.4 \u00b6 Considerando un arreglo de 50 n\u00fameros enteros, confeccione un algoritmo para resolver las siguientes consignas: Modificar el arreglo dado, de modo que todos sus elementos sean m\u00faltiplos de 3. Crear otro arreglo que contenga los n\u00fameros que no cumplieron la condici\u00f3n. Informar cu\u00e1ntos n\u00fameros cumplieron la condici\u00f3n. Ejercicio 3.1.5 \u00b6 Dados 2 vectores: A: arreglo [1 .. 30] de reales B: arreglo [1 .. 30] de reales Ambos ordenados de forma creciente, escribir un algoritmo que realice la mezcla de ambos para obtener otro vector tambien ordenado de forma creciente C: arreglo [1 .. 60] de reales Ejercicio 3.1.6 \u00b6 Escribir un algoritmo que permita cargar un arreglo de N nombres, considerando que cada nombre debe tener entre 1 y 10 caracteres. Ejercicio 3.1.7 \u00b6 Escribir un algoritmo que permita localizar un nombre en un arreglo de N nombres, ordenados alfab\u00e9ticamente. Cada nombre puede tener, como m\u00e1ximo, 10 caracteres. Escriba por lo menos dos algoritmos que permitan solucionar el problema; especifique cu\u00e1l de las formas considera m\u00e1s eficiente y por qu\u00e9. Ejercicio 3.1.8 \u00b6 Repita el ejercicio anterior, pero suponiendo que se precisa localizar todos los nombres que comienzan con una letra dada. Ejercicio 3.1.9 \u00b6 Se posee un arreglo de 200 libros con el siguiente formato: NRO_LIBRO TITULO AUTOR CANT_HOJAS ordenado por AUTOR y se presentan las siguientes premisas: Se necesita saber que libros se poseen de \u201cNicklaus Wirth\u201d. Se necesita saber en qu\u00e9 posici\u00f3n se encuentra \u201cAlgoritmos + Estructuras de Datos=Programa\u201d. Se necesita saber cual es el libro de \u201cNicklaus Wirth\u201d de mayor volumen. Ejercicio 3.1.10 \u00b6 Dado un arreglo de 50 elementos, cada uno de los cuales tiene los siguientes datos: C\u00f3digo de localidad y Lluvia ca\u00edda en un a\u00f1o. Escribir un algoritmo que permita saber dada una localidad, cuanto llovi\u00f3 en el a\u00f1o. Aplicar el m\u00e9todo m\u00e1s adecuado considerando que el arreglo esta ordenado por C\u00f3digo de localidad. Ejercicio 3.1.11 \u00b6 Dado un arreglo de 100 elementos, que contiene la siguiente informaci\u00f3n sobre videos: T\u00edtulo de la pel\u00edcula, Nombre del Director, Categor\u00eda de pel\u00edcula, Cantidad de personas que la vieron, Alquilado (si/no); y est\u00e1 ordenado por el T\u00edtulo de la pel\u00edcula, dise\u00f1e un algoritmo que, ingresando una categor\u00eda, liste todas las pel\u00edculas que pertenecen a dicha categor\u00eda. Ejercicio 3.1.12 \u00b6 A partir del arreglo de videos descrito en el ejercicio anterior, dise\u00f1e un algoritmo que permita atender un pedido de alquiler, para lo cual debe verificar si es posible o no y, cuando corresponda, actualizar la cantidad de personas que vieron dicha pel\u00edcula. Ejercicio 3.1.13 \u00b6 Se precisa ordenar un arreglo de N alumnos de mayor a menor, de acuerdo a la cantidad de materias aprobadas. Cada elemento del arreglo contiene Nro. de Legajo y Cantidad de materias aprobadas. Escriba por lo menos dos algoritmos que permitan solucionar el problema; especifique cu\u00e1l de las formas considera m\u00e1s eficiente y por qu\u00e9. Ejercicio 3.1.14 \u00b6 El mes que viene se realizar\u00e1 en Buenos Aires el desfile \u201cAlta Moda 2018\u201d, el cual re\u00fane a los dise\u00f1adores m\u00e1s reconocidos del pa\u00eds. Para organizar las pasadas, se dispone de un arreglo por dise\u00f1ador, con la siguiente informaci\u00f3n: nombre de el/la modelo y altura. La directora del evento necesita que se imprima cada lista ordenada de acuerdo a la altura de el/la modelo. Escribir un algoritmo que permita ingresar los datos de cada dise\u00f1ador e imprimirlos de acuerdo a lo solicitado. Ejercicio 3.1.15 \u00b6 Se precisa ordenar un arreglo de enteros de menor a mayor, eliminando los n\u00fameros repetidos Ejercicio 3.1.16 \u00b6 Una empresa que comercializa una cierta cantidad de art\u00edculos diferentes desea confeccionar un ranking de ventas de los mismos, a partir de una secuencia ordenada por articulo que contiene: NRO_ARTICULO TIPO CANT_VENDIDA Escribir un algoritmo que emita el ranking deseado en orden decreciente por cantidad. Ejercicio 3.1.17 \u00b6 Se precisa generar una secuencia con los datos de los 10 videos m\u00e1s vistos de una categor\u00eda, a partir de una secuencia de entrada de 200 registros que contiene el T\u00edtulo de la pel\u00edcula, Nombre del Director, Categor\u00eda de pel\u00edcula, Cantidad de personas que la vieron y que est\u00e1 ordenada por el T\u00edtulo de la pel\u00edcula. Ejercicio 3.1.18 \u00b6 Se precisa dise\u00f1ar una agenda electr\u00f3nica, donde se archivar\u00e1 el nombre, la direcci\u00f3n y el tel\u00e9fono de hasta 50 personas. Dise\u00f1e un algoritmo que permita efectuar consultas, modificaciones, eliminaciones de los datos de una persona y agregados de nuevas personas (s\u00f3lo ser\u00e1 posible incorporar una persona si hay menos de 50 archivadas en la agenda). Los datos se hallan almacenados en una secuencia. Considere que la agenda siempre debe mantenerse ordenada alfab\u00e9ticamente. Ejercicio 3.1.19 \u00b6 Escribir un algoritmo que emita cu\u00e1l es y d\u00f3nde est\u00e1 ubicado el mayor elemento de cada fila de una matriz, e imprima un mensaje si todos los mayores se encuentran en la misma columna. Ejercicio 3.1.20 \u00b6 Dadas dos matrices A y B, cuadradas, de 5 x 5, con n\u00fameros enteros, cargar una matriz C, de 5 x 5 teniendo en cuenta las siguientes condiciones: la diagonal principal completar con ceros, en las posiciones que est\u00e1n por encima de la diagonal principal, copiar los correspondientes elementos de la matriz A y en las posiciones que est\u00e1n por debajo de la diagonal principal, copiar los elementos correspondientes de la matriz B. Ejercicio 3.1.21 \u00b6 Dada una matriz de 6 x 6 de enteros, cuya \u00faltima fila y columna contienen ceros, calcular la suma de cada fila y guardar en la \u00faltima celda de la misma; y la suma de cada columna y guardar en la \u00faltima celda de la misma. Calcular tambi\u00e9n el total general y guardar en la posici\u00f3n (6,6). Ejercicio 3.1.22 \u00b6 Dada una matriz cuadrada de 5 x 5 de n\u00fameros, sumar filas y columnas y guardar en una matriz de 2 x 5, de modo que la fila 1 contenga la suma de cada fila y la fila 2, la suma de cada columna) Ejercicio 3.1.23 \u00b6 En un sector de un hospital, donde se encuentran internados 50 pacientes, se toma la temperatura de cada paciente 4 veces al d\u00eda durante una semana. Lectura Dom Lun Mar Mie Jue Vie Sab 1 XX XX XX XX XX XX XX 2 XX XX XX XX XX XX XX 3 XX XX XX XX XX XX XX 4 XX XX XX XX XX XX XX Se dispone de un arreglo con la informaci\u00f3n recopilada de todos los pacientes. Construir un algoritmo que: Liste por pantalla las temperaturas m\u00e1xima y m\u00ednima de cada paciente, indicando el d\u00eda y lectura en la que ocurrieron. Genere un nuevo arreglo que contenga la temperatura promedio por d\u00eda de cada paciente. Ejercicio 3.1.24 \u00b6 Se cuenta con informaci\u00f3n acerca de los cajeros de un Supermercado, el cual se halla estructurado en 10 cajas registradoras. Dicha informaci\u00f3n est\u00e1 registrada en una secuencia que contiene Apellido y Nombre del empleado, n\u00famero de caja que tiene asignada, importe facturado y horario de facturaci\u00f3n; la secuencia est\u00e1 ordenada alfab\u00e9ticamente por Apellido y Nombre. Se solicita una estad\u00edstica de los importes facturados, discriminado por n\u00famero de caja y franja de horas y adem\u00e1s los montos totales, seg\u00fan el siguiente formato: Cajas 8-10 10-12 12-16 16-18 18-20 Total x Cajas 1 ... ... ... ... ... ... .. ... ... ... ... ... ... 10 ... ... ... ... ... ... Total x horas ... ... ... ... ... ... Ejercicio 3.1.25 \u00b6 Una F\u00e1brica que posee 4 plantas de producci\u00f3n en nuestro pa\u00eds y compra materia prima a 3 proveedores distintos, desea realizar un control de los montos totales correspondientes a compras realizadas en cada planta durante el \u00faltimo a\u00f1o, discriminados por proveedor y por mes. Para ello dispone de un archivo con los datos de las facturas correspondientes. (Aclaraci\u00f3n: el archivo no est\u00e1 ordenado por ning\u00fan criterio) COMPRAS Nro_Factura Proveedor (A,B,C) Fecha dd/mm/aaaa Nro_Planta 1..4 Importe Ejercicio 3.1.26 \u00b6 Se dispone de un archivo secuencial de facturas de una empresa de energ\u00eda el\u00e9ctrica, correspondientes a un a\u00f1o, con el siguiente formato: Nro_Factura Nro_Usuario Zona Fecha Consumo Se desea obtener un cuadro estad\u00edstico que informe los consumos y los importes totales facturados por mes discriminados por zona, con el siguiente formato: Zona A Zona B Zona C Zona D Total por mes Enero ... ... ... ... ... Febrero ... ... ... ... ... ... ... ... ... ... ... Diciembre ... ... ... ... ... Total por zona ... ... ... ... Total General La ciudad est\u00e1 dividida en 4 Zonas (A,B,C,D), la tarifa por Kw. que cobra la empresa en cada una de ellas es: Zona A: $ 0,05, Zona B: $ 0,07, Zona C: $ 0,09 y Zona D: $ 0,13. Ejercicio 3.1.27 \u00b6 Se desea efectuar una estad\u00edstica de ventas. Se cuenta para ello con una secuencia de las facturas emitidas, las cuales son identificadas por un N\u00famero; dicha secuencia contiene informaci\u00f3n relativa al cliente: su N\u00famero y Zona a la cual pertenece, como as\u00ed tambi\u00e9n el Tipo de mercader\u00eda entregada, la Cantidad de unidades, el total gravado, el total exento de IVA y el valor del IVA. Construya un algoritmo que emita por zona, y dentro de la zona por tipo de mercader\u00eda el total de unidades vendidas, el total gravado, el total exento y el total de IVA, y adem\u00e1s un total general con la misma informaci\u00f3n. Hay 9 zonas y 4 tipos de mercader\u00eda. Ejercicio 3.1.28 \u00b6 La Municipalidad de Resistencia desea obtener una estad\u00edstica de los valores (en $) de los terrenos de la ciudad, discriminados por zona y ubicaci\u00f3n dentro de la manzana (en esquina, interna, etc.), y los totales por zona y ubicaci\u00f3n. El valor de cada final de cada terreno es igual a: Valor del Terreno = Superficie terreno (en M 2 ) * valor del M 2 * coeficiente de incremento Para ello cuenta con la siguiente informaci\u00f3n: Un archivo de los terrenos con los siguientes datos: Nro_Terreno Zona Ubicacion Superficie Zona: codificadas de A a F Ubicaci\u00f3n: codificada de 1 a 10 Un arreglo V que contiene los valores del M 2 por zona. Ejercicio 3.1.29 \u00b6 Dada una secuencia de texto que contiene informaci\u00f3n sobre mascotas, se desea generar un archivo de mascotas, teniendo en cuenta lo siguiente: En el texto vienen los siguientes datos: nombre de la mascota, encerrado ente asteriscos (*), inmediatamente a continuaci\u00f3n una palabra de tres letras que identifica el tipo de documento y separado por un blanco, 8 posiciones num\u00e9ricas que corresponden al n\u00famero de documento del due\u00f1o, seguidas por un s\u00edmbolo numeral (#) y, a continuaci\u00f3n, la direcci\u00f3n de la persona, finalizando con un signo de fin de interrogaci\u00f3n (?). El final del texto est\u00e1 indicado por un s\u00edmbolo de admiraci\u00f3n (!). Se desconoce la longitud de la direcci\u00f3n, as\u00ed como la del nombre de la mascota. El formato del registro de salida es Tipo_Documento N(1) Numero AN(8) Nombre_Mascota AN(30) Direccion AN(40) Si la sigla es DNI, el tipo es 0, si dice LCE el tipo es 1, si dice LEN el tipo es 2, para PAS es 3, para cualquier otra cadena de letras el tipo es 4. Al final del proceso informar cuantos registros se grabaron en el archivo de salida. Ejercicio 3.1.30 \u00b6 Teniendo en cuenta el ejercicio 1.20 del TP2: Se posee 2 secuencias (S1 y S2) con las cuales se desea generar una nueva secuencia (SAL) donde se intercalen las palabras de las secuencias de entrada, de la siguiente manera: copiar de S1 aquellas palabras que empiezan y terminan con la misma letra y de S2 aquellas palabras que posean al menos un digito num\u00e9rico y adem\u00e1s est\u00e9n en posici\u00f3n par. Escribir un algoritmo que lo resuelva, considerando que las palabras tienen como m\u00e1ximo 10 caracteres.","title":"3.1. Arreglos"},{"location":"practica/3.1/#31-arreglos","text":"","title":"3.1. Arreglos"},{"location":"practica/3.1/#ejercicio-311","text":"Para cada una de las consignas siguientes, genere un algoritmo que permita solucionarla (3 algoritmos) usando un arreglo de 100 n\u00fameros enteros: Almacenar 100 n\u00fameros. Localizar el n\u00famero de mayor valor y el de menor valor, informar sus valores y sus posiciones. Contar y sumar todos los n\u00fameros pares.","title":"Ejercicio 3.1.1"},{"location":"practica/3.1/#ejercicio-312","text":"Genere un \u00fanico algoritmo que resuelva las 3 consignas del ejercicio anterior.","title":"Ejercicio 3.1.2"},{"location":"practica/3.1/#ejercicio-313","text":"Dados un vector de reales a de n elementos, con n \u2208 N 0 , y un n\u00famero real x >= 0, calcular el valor y tal que: $$y = \\sum_{i=1}^n (a_i \\times x^i)$$","title":"Ejercicio 3.1.3"},{"location":"practica/3.1/#ejercicio-314","text":"Considerando un arreglo de 50 n\u00fameros enteros, confeccione un algoritmo para resolver las siguientes consignas: Modificar el arreglo dado, de modo que todos sus elementos sean m\u00faltiplos de 3. Crear otro arreglo que contenga los n\u00fameros que no cumplieron la condici\u00f3n. Informar cu\u00e1ntos n\u00fameros cumplieron la condici\u00f3n.","title":"Ejercicio 3.1.4"},{"location":"practica/3.1/#ejercicio-315","text":"Dados 2 vectores: A: arreglo [1 .. 30] de reales B: arreglo [1 .. 30] de reales Ambos ordenados de forma creciente, escribir un algoritmo que realice la mezcla de ambos para obtener otro vector tambien ordenado de forma creciente C: arreglo [1 .. 60] de reales","title":"Ejercicio 3.1.5"},{"location":"practica/3.1/#ejercicio-316","text":"Escribir un algoritmo que permita cargar un arreglo de N nombres, considerando que cada nombre debe tener entre 1 y 10 caracteres.","title":"Ejercicio 3.1.6"},{"location":"practica/3.1/#ejercicio-317","text":"Escribir un algoritmo que permita localizar un nombre en un arreglo de N nombres, ordenados alfab\u00e9ticamente. Cada nombre puede tener, como m\u00e1ximo, 10 caracteres. Escriba por lo menos dos algoritmos que permitan solucionar el problema; especifique cu\u00e1l de las formas considera m\u00e1s eficiente y por qu\u00e9.","title":"Ejercicio 3.1.7"},{"location":"practica/3.1/#ejercicio-318","text":"Repita el ejercicio anterior, pero suponiendo que se precisa localizar todos los nombres que comienzan con una letra dada.","title":"Ejercicio 3.1.8"},{"location":"practica/3.1/#ejercicio-319","text":"Se posee un arreglo de 200 libros con el siguiente formato: NRO_LIBRO TITULO AUTOR CANT_HOJAS ordenado por AUTOR y se presentan las siguientes premisas: Se necesita saber que libros se poseen de \u201cNicklaus Wirth\u201d. Se necesita saber en qu\u00e9 posici\u00f3n se encuentra \u201cAlgoritmos + Estructuras de Datos=Programa\u201d. Se necesita saber cual es el libro de \u201cNicklaus Wirth\u201d de mayor volumen.","title":"Ejercicio 3.1.9"},{"location":"practica/3.1/#ejercicio-3110","text":"Dado un arreglo de 50 elementos, cada uno de los cuales tiene los siguientes datos: C\u00f3digo de localidad y Lluvia ca\u00edda en un a\u00f1o. Escribir un algoritmo que permita saber dada una localidad, cuanto llovi\u00f3 en el a\u00f1o. Aplicar el m\u00e9todo m\u00e1s adecuado considerando que el arreglo esta ordenado por C\u00f3digo de localidad.","title":"Ejercicio 3.1.10"},{"location":"practica/3.1/#ejercicio-3111","text":"Dado un arreglo de 100 elementos, que contiene la siguiente informaci\u00f3n sobre videos: T\u00edtulo de la pel\u00edcula, Nombre del Director, Categor\u00eda de pel\u00edcula, Cantidad de personas que la vieron, Alquilado (si/no); y est\u00e1 ordenado por el T\u00edtulo de la pel\u00edcula, dise\u00f1e un algoritmo que, ingresando una categor\u00eda, liste todas las pel\u00edculas que pertenecen a dicha categor\u00eda.","title":"Ejercicio 3.1.11"},{"location":"practica/3.1/#ejercicio-3112","text":"A partir del arreglo de videos descrito en el ejercicio anterior, dise\u00f1e un algoritmo que permita atender un pedido de alquiler, para lo cual debe verificar si es posible o no y, cuando corresponda, actualizar la cantidad de personas que vieron dicha pel\u00edcula.","title":"Ejercicio 3.1.12"},{"location":"practica/3.1/#ejercicio-3113","text":"Se precisa ordenar un arreglo de N alumnos de mayor a menor, de acuerdo a la cantidad de materias aprobadas. Cada elemento del arreglo contiene Nro. de Legajo y Cantidad de materias aprobadas. Escriba por lo menos dos algoritmos que permitan solucionar el problema; especifique cu\u00e1l de las formas considera m\u00e1s eficiente y por qu\u00e9.","title":"Ejercicio 3.1.13"},{"location":"practica/3.1/#ejercicio-3114","text":"El mes que viene se realizar\u00e1 en Buenos Aires el desfile \u201cAlta Moda 2018\u201d, el cual re\u00fane a los dise\u00f1adores m\u00e1s reconocidos del pa\u00eds. Para organizar las pasadas, se dispone de un arreglo por dise\u00f1ador, con la siguiente informaci\u00f3n: nombre de el/la modelo y altura. La directora del evento necesita que se imprima cada lista ordenada de acuerdo a la altura de el/la modelo. Escribir un algoritmo que permita ingresar los datos de cada dise\u00f1ador e imprimirlos de acuerdo a lo solicitado.","title":"Ejercicio 3.1.14"},{"location":"practica/3.1/#ejercicio-3115","text":"Se precisa ordenar un arreglo de enteros de menor a mayor, eliminando los n\u00fameros repetidos","title":"Ejercicio 3.1.15"},{"location":"practica/3.1/#ejercicio-3116","text":"Una empresa que comercializa una cierta cantidad de art\u00edculos diferentes desea confeccionar un ranking de ventas de los mismos, a partir de una secuencia ordenada por articulo que contiene: NRO_ARTICULO TIPO CANT_VENDIDA Escribir un algoritmo que emita el ranking deseado en orden decreciente por cantidad.","title":"Ejercicio 3.1.16"},{"location":"practica/3.1/#ejercicio-3117","text":"Se precisa generar una secuencia con los datos de los 10 videos m\u00e1s vistos de una categor\u00eda, a partir de una secuencia de entrada de 200 registros que contiene el T\u00edtulo de la pel\u00edcula, Nombre del Director, Categor\u00eda de pel\u00edcula, Cantidad de personas que la vieron y que est\u00e1 ordenada por el T\u00edtulo de la pel\u00edcula.","title":"Ejercicio 3.1.17"},{"location":"practica/3.1/#ejercicio-3118","text":"Se precisa dise\u00f1ar una agenda electr\u00f3nica, donde se archivar\u00e1 el nombre, la direcci\u00f3n y el tel\u00e9fono de hasta 50 personas. Dise\u00f1e un algoritmo que permita efectuar consultas, modificaciones, eliminaciones de los datos de una persona y agregados de nuevas personas (s\u00f3lo ser\u00e1 posible incorporar una persona si hay menos de 50 archivadas en la agenda). Los datos se hallan almacenados en una secuencia. Considere que la agenda siempre debe mantenerse ordenada alfab\u00e9ticamente.","title":"Ejercicio 3.1.18"},{"location":"practica/3.1/#ejercicio-3119","text":"Escribir un algoritmo que emita cu\u00e1l es y d\u00f3nde est\u00e1 ubicado el mayor elemento de cada fila de una matriz, e imprima un mensaje si todos los mayores se encuentran en la misma columna.","title":"Ejercicio 3.1.19"},{"location":"practica/3.1/#ejercicio-3120","text":"Dadas dos matrices A y B, cuadradas, de 5 x 5, con n\u00fameros enteros, cargar una matriz C, de 5 x 5 teniendo en cuenta las siguientes condiciones: la diagonal principal completar con ceros, en las posiciones que est\u00e1n por encima de la diagonal principal, copiar los correspondientes elementos de la matriz A y en las posiciones que est\u00e1n por debajo de la diagonal principal, copiar los elementos correspondientes de la matriz B.","title":"Ejercicio 3.1.20"},{"location":"practica/3.1/#ejercicio-3121","text":"Dada una matriz de 6 x 6 de enteros, cuya \u00faltima fila y columna contienen ceros, calcular la suma de cada fila y guardar en la \u00faltima celda de la misma; y la suma de cada columna y guardar en la \u00faltima celda de la misma. Calcular tambi\u00e9n el total general y guardar en la posici\u00f3n (6,6).","title":"Ejercicio 3.1.21"},{"location":"practica/3.1/#ejercicio-3122","text":"Dada una matriz cuadrada de 5 x 5 de n\u00fameros, sumar filas y columnas y guardar en una matriz de 2 x 5, de modo que la fila 1 contenga la suma de cada fila y la fila 2, la suma de cada columna)","title":"Ejercicio 3.1.22"},{"location":"practica/3.1/#ejercicio-3123","text":"En un sector de un hospital, donde se encuentran internados 50 pacientes, se toma la temperatura de cada paciente 4 veces al d\u00eda durante una semana. Lectura Dom Lun Mar Mie Jue Vie Sab 1 XX XX XX XX XX XX XX 2 XX XX XX XX XX XX XX 3 XX XX XX XX XX XX XX 4 XX XX XX XX XX XX XX Se dispone de un arreglo con la informaci\u00f3n recopilada de todos los pacientes. Construir un algoritmo que: Liste por pantalla las temperaturas m\u00e1xima y m\u00ednima de cada paciente, indicando el d\u00eda y lectura en la que ocurrieron. Genere un nuevo arreglo que contenga la temperatura promedio por d\u00eda de cada paciente.","title":"Ejercicio 3.1.23"},{"location":"practica/3.1/#ejercicio-3124","text":"Se cuenta con informaci\u00f3n acerca de los cajeros de un Supermercado, el cual se halla estructurado en 10 cajas registradoras. Dicha informaci\u00f3n est\u00e1 registrada en una secuencia que contiene Apellido y Nombre del empleado, n\u00famero de caja que tiene asignada, importe facturado y horario de facturaci\u00f3n; la secuencia est\u00e1 ordenada alfab\u00e9ticamente por Apellido y Nombre. Se solicita una estad\u00edstica de los importes facturados, discriminado por n\u00famero de caja y franja de horas y adem\u00e1s los montos totales, seg\u00fan el siguiente formato: Cajas 8-10 10-12 12-16 16-18 18-20 Total x Cajas 1 ... ... ... ... ... ... .. ... ... ... ... ... ... 10 ... ... ... ... ... ... Total x horas ... ... ... ... ... ...","title":"Ejercicio 3.1.24"},{"location":"practica/3.1/#ejercicio-3125","text":"Una F\u00e1brica que posee 4 plantas de producci\u00f3n en nuestro pa\u00eds y compra materia prima a 3 proveedores distintos, desea realizar un control de los montos totales correspondientes a compras realizadas en cada planta durante el \u00faltimo a\u00f1o, discriminados por proveedor y por mes. Para ello dispone de un archivo con los datos de las facturas correspondientes. (Aclaraci\u00f3n: el archivo no est\u00e1 ordenado por ning\u00fan criterio) COMPRAS Nro_Factura Proveedor (A,B,C) Fecha dd/mm/aaaa Nro_Planta 1..4 Importe","title":"Ejercicio 3.1.25"},{"location":"practica/3.1/#ejercicio-3126","text":"Se dispone de un archivo secuencial de facturas de una empresa de energ\u00eda el\u00e9ctrica, correspondientes a un a\u00f1o, con el siguiente formato: Nro_Factura Nro_Usuario Zona Fecha Consumo Se desea obtener un cuadro estad\u00edstico que informe los consumos y los importes totales facturados por mes discriminados por zona, con el siguiente formato: Zona A Zona B Zona C Zona D Total por mes Enero ... ... ... ... ... Febrero ... ... ... ... ... ... ... ... ... ... ... Diciembre ... ... ... ... ... Total por zona ... ... ... ... Total General La ciudad est\u00e1 dividida en 4 Zonas (A,B,C,D), la tarifa por Kw. que cobra la empresa en cada una de ellas es: Zona A: $ 0,05, Zona B: $ 0,07, Zona C: $ 0,09 y Zona D: $ 0,13.","title":"Ejercicio 3.1.26"},{"location":"practica/3.1/#ejercicio-3127","text":"Se desea efectuar una estad\u00edstica de ventas. Se cuenta para ello con una secuencia de las facturas emitidas, las cuales son identificadas por un N\u00famero; dicha secuencia contiene informaci\u00f3n relativa al cliente: su N\u00famero y Zona a la cual pertenece, como as\u00ed tambi\u00e9n el Tipo de mercader\u00eda entregada, la Cantidad de unidades, el total gravado, el total exento de IVA y el valor del IVA. Construya un algoritmo que emita por zona, y dentro de la zona por tipo de mercader\u00eda el total de unidades vendidas, el total gravado, el total exento y el total de IVA, y adem\u00e1s un total general con la misma informaci\u00f3n. Hay 9 zonas y 4 tipos de mercader\u00eda.","title":"Ejercicio 3.1.27"},{"location":"practica/3.1/#ejercicio-3128","text":"La Municipalidad de Resistencia desea obtener una estad\u00edstica de los valores (en $) de los terrenos de la ciudad, discriminados por zona y ubicaci\u00f3n dentro de la manzana (en esquina, interna, etc.), y los totales por zona y ubicaci\u00f3n. El valor de cada final de cada terreno es igual a: Valor del Terreno = Superficie terreno (en M 2 ) * valor del M 2 * coeficiente de incremento Para ello cuenta con la siguiente informaci\u00f3n: Un archivo de los terrenos con los siguientes datos: Nro_Terreno Zona Ubicacion Superficie Zona: codificadas de A a F Ubicaci\u00f3n: codificada de 1 a 10 Un arreglo V que contiene los valores del M 2 por zona.","title":"Ejercicio 3.1.28"},{"location":"practica/3.1/#ejercicio-3129","text":"Dada una secuencia de texto que contiene informaci\u00f3n sobre mascotas, se desea generar un archivo de mascotas, teniendo en cuenta lo siguiente: En el texto vienen los siguientes datos: nombre de la mascota, encerrado ente asteriscos (*), inmediatamente a continuaci\u00f3n una palabra de tres letras que identifica el tipo de documento y separado por un blanco, 8 posiciones num\u00e9ricas que corresponden al n\u00famero de documento del due\u00f1o, seguidas por un s\u00edmbolo numeral (#) y, a continuaci\u00f3n, la direcci\u00f3n de la persona, finalizando con un signo de fin de interrogaci\u00f3n (?). El final del texto est\u00e1 indicado por un s\u00edmbolo de admiraci\u00f3n (!). Se desconoce la longitud de la direcci\u00f3n, as\u00ed como la del nombre de la mascota. El formato del registro de salida es Tipo_Documento N(1) Numero AN(8) Nombre_Mascota AN(30) Direccion AN(40) Si la sigla es DNI, el tipo es 0, si dice LCE el tipo es 1, si dice LEN el tipo es 2, para PAS es 3, para cualquier otra cadena de letras el tipo es 4. Al final del proceso informar cuantos registros se grabaron en el archivo de salida.","title":"Ejercicio 3.1.29"},{"location":"practica/3.1/#ejercicio-3130","text":"Teniendo en cuenta el ejercicio 1.20 del TP2: Se posee 2 secuencias (S1 y S2) con las cuales se desea generar una nueva secuencia (SAL) donde se intercalen las palabras de las secuencias de entrada, de la siguiente manera: copiar de S1 aquellas palabras que empiezan y terminan con la misma letra y de S2 aquellas palabras que posean al menos un digito num\u00e9rico y adem\u00e1s est\u00e9n en posici\u00f3n par. Escribir un algoritmo que lo resuelva, considerando que las palabras tienen como m\u00e1ximo 10 caracteres.","title":"Ejercicio 3.1.30"},{"location":"practica/4.1/","text":"4.1. Subacciones \u00b6 Funciones \u00b6 Ejercicio 4.1.1 \u00b6 Realice una funci\u00f3n que dado un n\u00famero devuelva su cuadrado. Ejercicio 4.1.2 \u00b6 Dise\u00f1e una funci\u00f3n que devuelva la suma de los d\u00edgitos del n\u00famero natural suministrado como par\u00e1metro. Ejercicio 4.1.3 \u00b6 Dise\u00f1e una funci\u00f3n que permita ingresar 3 n\u00fameros y devuelva el m\u00ednimo valor. El programa principal debe permitir que este proceso se repita la cantidad de veces que el usuario desee. Ejercicio 4.1.4 \u00b6 Elaborar una funci\u00f3n que reciba un n\u00famero entero y retorne -1 si el n\u00famero es negativo. Si el n\u00famero es positivo debe devolver una clave calculada de la siguiente manera: Se suma cada d\u00edgito que compone el n\u00famero y a esa suma se le calcula el modulo 7. Por ejemplo: para la cifra 513, la clave ser\u00e1 5+1+3 =9; 9 mod 7 = 2. Utilice la funci\u00f3n para dise\u00f1ar un algoritmo que permita leer varios valores y determine, para cada uno, si el n\u00famero le\u00eddo fue negativo o, si fue positivo, que clave le corresponde. Ejercicio 4.1.5 \u00b6 Escribir una funci\u00f3n que verifique si un caracter introducido es un d\u00edgito o no. Ejercicio 4.1.6 \u00b6 Escribir una funci\u00f3n que lea desde el teclado las unidades y el precio de un producto que se quiere comprar, y en funci\u00f3n de las unidades introducidas calcule un descuento o no, seg\u00fan corresponda: cuando las unidades excedan media docena se aplicar\u00e1 4% y el 10% cuando excedan la docena. La funci\u00f3n debe devolver como resultado el valor del descuento o cero, en caso de que no corresponda. Procedimientos \u00b6 Ejercicio 4.1.7 \u00b6 Repita el ejercicio del punto 5 pero utilice procedimiento en lugar de funci\u00f3n. Ejercicio 4.1.8 \u00b6 Crear un procedimiento que intercambie los valores de dos variables num\u00e9ricas. Ejercicio 4.1.9 \u00b6 Desarrollar los procedimientos mostrar_0 , mostrar_1 , mostrar_9 que visualicen por pantalla, respectivamente, los n\u00fameros 0,1,...,9 en tama\u00f1o grande, tal y como se muestra a continuaci\u00f3n: ***** * ***** ***** * * ***** ***** ***** ***** ***** * * * * * * * * * * * * * * * * * ***** ***** ***** ***** ***** * ***** ***** * * * * * * * * * * * * * ***** * ***** ***** * ***** ***** * ***** ***** Ejercicio 4.1.10 \u00b6 Escribir un \u00fanico procedimiento mostrar_nro que reciba como par\u00e1metro un d\u00edgito y lo muestre por pantalla de la misma forma que se indica en el ejercicio 9.","title":"4.1. Subacciones"},{"location":"practica/4.1/#41-subacciones","text":"","title":"4.1. Subacciones"},{"location":"practica/4.1/#funciones","text":"","title":"Funciones"},{"location":"practica/4.1/#ejercicio-411","text":"Realice una funci\u00f3n que dado un n\u00famero devuelva su cuadrado.","title":"Ejercicio 4.1.1"},{"location":"practica/4.1/#ejercicio-412","text":"Dise\u00f1e una funci\u00f3n que devuelva la suma de los d\u00edgitos del n\u00famero natural suministrado como par\u00e1metro.","title":"Ejercicio 4.1.2"},{"location":"practica/4.1/#ejercicio-413","text":"Dise\u00f1e una funci\u00f3n que permita ingresar 3 n\u00fameros y devuelva el m\u00ednimo valor. El programa principal debe permitir que este proceso se repita la cantidad de veces que el usuario desee.","title":"Ejercicio 4.1.3"},{"location":"practica/4.1/#ejercicio-414","text":"Elaborar una funci\u00f3n que reciba un n\u00famero entero y retorne -1 si el n\u00famero es negativo. Si el n\u00famero es positivo debe devolver una clave calculada de la siguiente manera: Se suma cada d\u00edgito que compone el n\u00famero y a esa suma se le calcula el modulo 7. Por ejemplo: para la cifra 513, la clave ser\u00e1 5+1+3 =9; 9 mod 7 = 2. Utilice la funci\u00f3n para dise\u00f1ar un algoritmo que permita leer varios valores y determine, para cada uno, si el n\u00famero le\u00eddo fue negativo o, si fue positivo, que clave le corresponde.","title":"Ejercicio 4.1.4"},{"location":"practica/4.1/#ejercicio-415","text":"Escribir una funci\u00f3n que verifique si un caracter introducido es un d\u00edgito o no.","title":"Ejercicio 4.1.5"},{"location":"practica/4.1/#ejercicio-416","text":"Escribir una funci\u00f3n que lea desde el teclado las unidades y el precio de un producto que se quiere comprar, y en funci\u00f3n de las unidades introducidas calcule un descuento o no, seg\u00fan corresponda: cuando las unidades excedan media docena se aplicar\u00e1 4% y el 10% cuando excedan la docena. La funci\u00f3n debe devolver como resultado el valor del descuento o cero, en caso de que no corresponda.","title":"Ejercicio 4.1.6"},{"location":"practica/4.1/#procedimientos","text":"","title":"Procedimientos"},{"location":"practica/4.1/#ejercicio-417","text":"Repita el ejercicio del punto 5 pero utilice procedimiento en lugar de funci\u00f3n.","title":"Ejercicio 4.1.7"},{"location":"practica/4.1/#ejercicio-418","text":"Crear un procedimiento que intercambie los valores de dos variables num\u00e9ricas.","title":"Ejercicio 4.1.8"},{"location":"practica/4.1/#ejercicio-419","text":"Desarrollar los procedimientos mostrar_0 , mostrar_1 , mostrar_9 que visualicen por pantalla, respectivamente, los n\u00fameros 0,1,...,9 en tama\u00f1o grande, tal y como se muestra a continuaci\u00f3n: ***** * ***** ***** * * ***** ***** ***** ***** ***** * * * * * * * * * * * * * * * * * ***** ***** ***** ***** ***** * ***** ***** * * * * * * * * * * * * * ***** * ***** ***** * ***** ***** * ***** *****","title":"Ejercicio 4.1.9"},{"location":"practica/4.1/#ejercicio-4110","text":"Escribir un \u00fanico procedimiento mostrar_nro que reciba como par\u00e1metro un d\u00edgito y lo muestre por pantalla de la misma forma que se indica en el ejercicio 9.","title":"Ejercicio 4.1.10"},{"location":"practica/4.2/","text":"4.2. Listas \u00b6 Ejercicio 4.2.1 \u00b6 Dise\u00f1ar un algoritmo para acceder, eliminar o insertar el k-\u00e9simo elemento de una lista (siendo k una posici\u00f3n dada). Si la lista est\u00e1 vac\u00eda o si el valor de k esta fuera del rango del \u00edndice de la lista, invocar al procedimiento de ERROR. En cualquier otro caso, efectuar el procedimiento solicitado. Ejercicio 4.2.2 \u00b6 Se dispone de una lista simplemente encadenada de n\u00fameros enteros, dise\u00f1ar un algoritmo que a partir de ella genere otra lista conteniendo los nodos cuyos datos terminan en cero; dichos elementos, deber\u00e1n ser eliminados de la lista original. Se asume que la lista est\u00e1 cargada, y que el algoritmo recibe como par\u00e1metro de entrada la direcci\u00f3n del primer elemento. Ejercicio 4.2.3 \u00b6 Dada una lista simplemente encadenada de n\u00fameros dise\u00f1ar un algoritmo que calcule en forma independiente: La suma de los n\u00fameros impares, y la suma de los n\u00fameros pares. Ejercicio 4.2.4 \u00b6 Se dispone de una lista simplemente encadenada cuyos registros est\u00e1n ordenados en forma ascendente por una clave de tipo entero; dise\u00f1ar un algoritmo que invierta el orden de la lista. Ejercicio 4.2.5 \u00b6 Dada una lista simplemente encadenada que contiene datos de todas las provincias de la Rep\u00fablica Argentina: nombre, capital, cantidad total de habitantes y cantidad de analfabetos, y est\u00e1 ordenada en forma decreciente por n\u00famero de habitantes analfabetos, generar otras tres listas que contengan el nombre, la capital y el porcentaje de analfabetos de las Provincias que respondan a las siguientes restricciones. L1: <= 10 % analfabetos L2: 16 a 25 % analfabetos L3: => 26 % analfabetos Ejercicio 4.2.6 \u00b6 En el restaurante \u00d1OQUIS se est\u00e1 pensando en una soluci\u00f3n inform\u00e1tica para el soporte de datos del nuevo sistema de atenci\u00f3n a clientes. Se han decidido por LISTAS por su dinamismo en cuanto a la cantidad de elementos. Dise\u00f1e un algoritmo que realice las siguientes funciones: A\u00f1adir cliente al ser atendido (lista simple ordenada por Nombre del Cliente). Registrar su consumo (Acumular el Total Consumido en valores de montos). Realizar el cobro (emitir ticket con Nombre, Fecha, N\u00famero de Mesa y Total). Eliminar del listado de atenci\u00f3n. La informaci\u00f3n almacenada debe mantenerse ordenada por Nombre del cliente. Ejercicio 4.2.7 \u00b6 Genere un algoritmo que recorra una secuencia texto y genere una lista simplemente encadenada con la frecuencia de utilizaci\u00f3n de cada letra. La lista debe mantenerse ordenada alfab\u00e9ticamente y al final informar cual fue la frecuencia de cada letra y cu\u00e1les fueron la de mayor y menor frecuencia. Ejercicio 4.2.8 \u00b6 Escribir un algoritmo que permita buscar, insertar o borrar un elemento identificado con una clave determinada en una lista circular simplemente encadenada. Ejercicio 4.2.9 \u00b6 Dada una lista circular de 8 elementos que contienen, cada uno, un valor num\u00e9rico entero para encriptaci\u00f3n, encriptar un texto ingresado por teclado (arreglo de caracteres de 255 elementos como m\u00e1ximo). El texto encriptado debe almacenarse en una lista de salida simplemente encadenada y, por \u00faltimo mostrar por pantalla. ENCRIPTAR Multiplicador N(5) Prox Puntero La encriptaci\u00f3n se realiza seg\u00fan las siguientes pautas: Dada la posici\u00f3n del car\u00e1cter dentro del texto, buscar en la lista circular de encriptaci\u00f3n el multiplicador correspondiente, de acuerdo a su posici\u00f3n l\u00f3gica en la lista. Por ejemplo: como solo hay 8 multiplicadores, si se ingresa un arreglo de 10 caracteres, para encriptar los ultimos dos se utilizar\u00edan los multiplicadores 1 y 2. Se usa la funci\u00f3n ASCII(Car\u00e1cter) para convertir cada car\u00e1cter del arreglo en un entero. Luego se lo multiplican los valores obtenidos en los 2 pasos anteriores. Por \u00faltimo se descompone el resultado obtenido en 3 en cada uno de sus d\u00edgitos, se los suma y se guarda en la lista de salida. Ej: si en el paso 3 me dio 123, 1+2+3=6. Ejercicio 4.2.10 \u00b6 Se dispone de una lista circular con un conjunto de n\u00fameros naturales. Este conjunto est\u00e1 dividido en 6 grupos. En cada grupo el primer elemento indica la cantidad de n\u00fameros subsiguientes a \u00e9l que integran dicho grupo. Se desea generar una nueva lista doblemente encadenada en la cual cada nodo contendr\u00e1 el promedio de cada grupo. Dicha lista debe quedar ordenada en forma ascendente y, al final se debe informar cu\u00e1l fue el m\u00e1ximo y el m\u00ednimo promedio de todo el conjunto de n\u00fameros. Ejercicio 4.2.11 \u00b6 En una empresa de servicios motorizados que NO posee una cantidad fija de integrantes, pero siempre es mayor que 1 (uno). Los datos de las personas est\u00e1 almacenados en un archivo (DNI, Nombre, Antig\u00fcedad) ordenado por DNI. Realizar un algoritmo que permita generar una lista de asignaci\u00f3n (usando una estructura de lista doblemente encadenada), ordenada al principio por antig\u00fcedad, y un proceso que realice dicha asignaci\u00f3n, en cada solicitud, por turno seg\u00fan orden en la lista. Una vez asignado dicha persona se va al final de la lista para esperar su nueva asignaci\u00f3n. Al final del d\u00eda informar cuantas asignaciones tuvo cada integrante. PERSONAL Nro_Personal N(5) Nombre AN(50) Asignaciones N(5) Antig\u00fcedad N(2) Ejercicio 4.2.12 \u00b6 En el nuevo DELIVERY VAMOS-RAPIDO se est\u00e1 dise\u00f1ando una soluci\u00f3n inform\u00e1tica para la atenci\u00f3n de clientes. Se ha pensado en una LISTA por su dinamismo en cuanto a la cantidad de elementos. Dise\u00f1e un algoritmo que realice las siguientes funciones: Registrar su pedido en una lista Doble (se agrega en Estado P (Pendiente), y se mantiene ordenado por Nombre del Cliente). Realizar el env\u00edo (cambia estado del pedido de P (pendiente) a E (Enviado)). Eliminar del listado de atenci\u00f3n una vez recibido el cobro (al atender el cobro del cadete que hizo el trabajo). Datos a almacenar por pedido: Nombre, Direcci\u00f3n, Tel\u00e9fono y Total. La informaci\u00f3n almacenada debe mantenerse ordenada por Nombre del cliente. Ejercicio 4.2.13 \u00b6 Dada una lista doblemente encadenada de enteros, ordenada en forma creciente, escriba un algoritmo que elimine las entradas repetidas. El algoritmo debe verificar al inicio que la lista que se pasa como argumento est\u00e1 ordenada; en caso afirmativo realizar la depuraci\u00f3n y emitir un mensaje de '\u00c9XITO'; en caso contrario, emitir un mensaje de 'ERROR'. Ejercicio 4.2.14 \u00b6 Se desea ingresar una serie de n\u00fameros, e imprimirlos en el orden contrario al de ingreso. Dise\u00f1ar un algoritmo que satisfaga tal requerimiento, utilizando la estructura de datos m\u00e1s apropiada. Ejercicio 4.2.15 \u00b6 Sup\u00f3ngase que, utilizando una lista encadenada, se implementa una cola Q (estructura 'FIFO', es decir, 'primero en entrar, primero en salir'). Dise\u00f1ar un algoritmo que permita insertar o extraer un elemento, comprobando siempre si la cola est\u00e1 vac\u00eda o no. Ejercicio 4.2.16 \u00b6 Sup\u00f3ngase que, utilizando una lista encadenada, se implementa una pila P (estructura 'LIFO', es decir, '\u00faltimo en entrar, primero en salir'). Dise\u00f1ar un algoritmo que permita insertar o extraer un elemento, comprobando siempre si la pila est\u00e1 vac\u00eda o no. Ejercicio 4.2.17 \u00b6 Teniendo en cuenta el ejercicio 1.20 del TP2: Se posee 2 secuencias (S1 y S2) con las cuales se desea generar una nueva secuencia (SAL) donde se intercalen las palabras de las secuencias de entrada, de la siguiente manera: copiar de S1 aquellas palabras que empiezan y terminan con la misma letra y de S2 aquellas palabras que posean al menos un digito num\u00e9rico y adem\u00e1s est\u00e9n en posici\u00f3n par. Escribir un algoritmo que lo resuelva, teniendo en cuenta que conoce la estructura de listas.","title":"4.2. Listas"},{"location":"practica/4.2/#42-listas","text":"","title":"4.2. Listas"},{"location":"practica/4.2/#ejercicio-421","text":"Dise\u00f1ar un algoritmo para acceder, eliminar o insertar el k-\u00e9simo elemento de una lista (siendo k una posici\u00f3n dada). Si la lista est\u00e1 vac\u00eda o si el valor de k esta fuera del rango del \u00edndice de la lista, invocar al procedimiento de ERROR. En cualquier otro caso, efectuar el procedimiento solicitado.","title":"Ejercicio 4.2.1"},{"location":"practica/4.2/#ejercicio-422","text":"Se dispone de una lista simplemente encadenada de n\u00fameros enteros, dise\u00f1ar un algoritmo que a partir de ella genere otra lista conteniendo los nodos cuyos datos terminan en cero; dichos elementos, deber\u00e1n ser eliminados de la lista original. Se asume que la lista est\u00e1 cargada, y que el algoritmo recibe como par\u00e1metro de entrada la direcci\u00f3n del primer elemento.","title":"Ejercicio 4.2.2"},{"location":"practica/4.2/#ejercicio-423","text":"Dada una lista simplemente encadenada de n\u00fameros dise\u00f1ar un algoritmo que calcule en forma independiente: La suma de los n\u00fameros impares, y la suma de los n\u00fameros pares.","title":"Ejercicio 4.2.3"},{"location":"practica/4.2/#ejercicio-424","text":"Se dispone de una lista simplemente encadenada cuyos registros est\u00e1n ordenados en forma ascendente por una clave de tipo entero; dise\u00f1ar un algoritmo que invierta el orden de la lista.","title":"Ejercicio 4.2.4"},{"location":"practica/4.2/#ejercicio-425","text":"Dada una lista simplemente encadenada que contiene datos de todas las provincias de la Rep\u00fablica Argentina: nombre, capital, cantidad total de habitantes y cantidad de analfabetos, y est\u00e1 ordenada en forma decreciente por n\u00famero de habitantes analfabetos, generar otras tres listas que contengan el nombre, la capital y el porcentaje de analfabetos de las Provincias que respondan a las siguientes restricciones. L1: <= 10 % analfabetos L2: 16 a 25 % analfabetos L3: => 26 % analfabetos","title":"Ejercicio 4.2.5"},{"location":"practica/4.2/#ejercicio-426","text":"En el restaurante \u00d1OQUIS se est\u00e1 pensando en una soluci\u00f3n inform\u00e1tica para el soporte de datos del nuevo sistema de atenci\u00f3n a clientes. Se han decidido por LISTAS por su dinamismo en cuanto a la cantidad de elementos. Dise\u00f1e un algoritmo que realice las siguientes funciones: A\u00f1adir cliente al ser atendido (lista simple ordenada por Nombre del Cliente). Registrar su consumo (Acumular el Total Consumido en valores de montos). Realizar el cobro (emitir ticket con Nombre, Fecha, N\u00famero de Mesa y Total). Eliminar del listado de atenci\u00f3n. La informaci\u00f3n almacenada debe mantenerse ordenada por Nombre del cliente.","title":"Ejercicio 4.2.6"},{"location":"practica/4.2/#ejercicio-427","text":"Genere un algoritmo que recorra una secuencia texto y genere una lista simplemente encadenada con la frecuencia de utilizaci\u00f3n de cada letra. La lista debe mantenerse ordenada alfab\u00e9ticamente y al final informar cual fue la frecuencia de cada letra y cu\u00e1les fueron la de mayor y menor frecuencia.","title":"Ejercicio 4.2.7"},{"location":"practica/4.2/#ejercicio-428","text":"Escribir un algoritmo que permita buscar, insertar o borrar un elemento identificado con una clave determinada en una lista circular simplemente encadenada.","title":"Ejercicio 4.2.8"},{"location":"practica/4.2/#ejercicio-429","text":"Dada una lista circular de 8 elementos que contienen, cada uno, un valor num\u00e9rico entero para encriptaci\u00f3n, encriptar un texto ingresado por teclado (arreglo de caracteres de 255 elementos como m\u00e1ximo). El texto encriptado debe almacenarse en una lista de salida simplemente encadenada y, por \u00faltimo mostrar por pantalla. ENCRIPTAR Multiplicador N(5) Prox Puntero La encriptaci\u00f3n se realiza seg\u00fan las siguientes pautas: Dada la posici\u00f3n del car\u00e1cter dentro del texto, buscar en la lista circular de encriptaci\u00f3n el multiplicador correspondiente, de acuerdo a su posici\u00f3n l\u00f3gica en la lista. Por ejemplo: como solo hay 8 multiplicadores, si se ingresa un arreglo de 10 caracteres, para encriptar los ultimos dos se utilizar\u00edan los multiplicadores 1 y 2. Se usa la funci\u00f3n ASCII(Car\u00e1cter) para convertir cada car\u00e1cter del arreglo en un entero. Luego se lo multiplican los valores obtenidos en los 2 pasos anteriores. Por \u00faltimo se descompone el resultado obtenido en 3 en cada uno de sus d\u00edgitos, se los suma y se guarda en la lista de salida. Ej: si en el paso 3 me dio 123, 1+2+3=6.","title":"Ejercicio 4.2.9"},{"location":"practica/4.2/#ejercicio-4210","text":"Se dispone de una lista circular con un conjunto de n\u00fameros naturales. Este conjunto est\u00e1 dividido en 6 grupos. En cada grupo el primer elemento indica la cantidad de n\u00fameros subsiguientes a \u00e9l que integran dicho grupo. Se desea generar una nueva lista doblemente encadenada en la cual cada nodo contendr\u00e1 el promedio de cada grupo. Dicha lista debe quedar ordenada en forma ascendente y, al final se debe informar cu\u00e1l fue el m\u00e1ximo y el m\u00ednimo promedio de todo el conjunto de n\u00fameros.","title":"Ejercicio 4.2.10"},{"location":"practica/4.2/#ejercicio-4211","text":"En una empresa de servicios motorizados que NO posee una cantidad fija de integrantes, pero siempre es mayor que 1 (uno). Los datos de las personas est\u00e1 almacenados en un archivo (DNI, Nombre, Antig\u00fcedad) ordenado por DNI. Realizar un algoritmo que permita generar una lista de asignaci\u00f3n (usando una estructura de lista doblemente encadenada), ordenada al principio por antig\u00fcedad, y un proceso que realice dicha asignaci\u00f3n, en cada solicitud, por turno seg\u00fan orden en la lista. Una vez asignado dicha persona se va al final de la lista para esperar su nueva asignaci\u00f3n. Al final del d\u00eda informar cuantas asignaciones tuvo cada integrante. PERSONAL Nro_Personal N(5) Nombre AN(50) Asignaciones N(5) Antig\u00fcedad N(2)","title":"Ejercicio 4.2.11"},{"location":"practica/4.2/#ejercicio-4212","text":"En el nuevo DELIVERY VAMOS-RAPIDO se est\u00e1 dise\u00f1ando una soluci\u00f3n inform\u00e1tica para la atenci\u00f3n de clientes. Se ha pensado en una LISTA por su dinamismo en cuanto a la cantidad de elementos. Dise\u00f1e un algoritmo que realice las siguientes funciones: Registrar su pedido en una lista Doble (se agrega en Estado P (Pendiente), y se mantiene ordenado por Nombre del Cliente). Realizar el env\u00edo (cambia estado del pedido de P (pendiente) a E (Enviado)). Eliminar del listado de atenci\u00f3n una vez recibido el cobro (al atender el cobro del cadete que hizo el trabajo). Datos a almacenar por pedido: Nombre, Direcci\u00f3n, Tel\u00e9fono y Total. La informaci\u00f3n almacenada debe mantenerse ordenada por Nombre del cliente.","title":"Ejercicio 4.2.12"},{"location":"practica/4.2/#ejercicio-4213","text":"Dada una lista doblemente encadenada de enteros, ordenada en forma creciente, escriba un algoritmo que elimine las entradas repetidas. El algoritmo debe verificar al inicio que la lista que se pasa como argumento est\u00e1 ordenada; en caso afirmativo realizar la depuraci\u00f3n y emitir un mensaje de '\u00c9XITO'; en caso contrario, emitir un mensaje de 'ERROR'.","title":"Ejercicio 4.2.13"},{"location":"practica/4.2/#ejercicio-4214","text":"Se desea ingresar una serie de n\u00fameros, e imprimirlos en el orden contrario al de ingreso. Dise\u00f1ar un algoritmo que satisfaga tal requerimiento, utilizando la estructura de datos m\u00e1s apropiada.","title":"Ejercicio 4.2.14"},{"location":"practica/4.2/#ejercicio-4215","text":"Sup\u00f3ngase que, utilizando una lista encadenada, se implementa una cola Q (estructura 'FIFO', es decir, 'primero en entrar, primero en salir'). Dise\u00f1ar un algoritmo que permita insertar o extraer un elemento, comprobando siempre si la cola est\u00e1 vac\u00eda o no.","title":"Ejercicio 4.2.15"},{"location":"practica/4.2/#ejercicio-4216","text":"Sup\u00f3ngase que, utilizando una lista encadenada, se implementa una pila P (estructura 'LIFO', es decir, '\u00faltimo en entrar, primero en salir'). Dise\u00f1ar un algoritmo que permita insertar o extraer un elemento, comprobando siempre si la pila est\u00e1 vac\u00eda o no.","title":"Ejercicio 4.2.16"},{"location":"practica/4.2/#ejercicio-4217","text":"Teniendo en cuenta el ejercicio 1.20 del TP2: Se posee 2 secuencias (S1 y S2) con las cuales se desea generar una nueva secuencia (SAL) donde se intercalen las palabras de las secuencias de entrada, de la siguiente manera: copiar de S1 aquellas palabras que empiezan y terminan con la misma letra y de S2 aquellas palabras que posean al menos un digito num\u00e9rico y adem\u00e1s est\u00e9n en posici\u00f3n par. Escribir un algoritmo que lo resuelva, teniendo en cuenta que conoce la estructura de listas.","title":"Ejercicio 4.2.17"},{"location":"practica/5/","text":"5. Recursividad \u00b6 5.1 Funciones Recursivas \u00b6 Ejercicio 5.1.1 \u00b6 Calcular el factorial de un n\u00famero positivo $n$. Tener en cuenta la definici\u00f3n matem\u00e1tica de $n!$: $$ n! = \\begin{cases} 1, & \\text{si $n$ = 0} \\\\ n \\times (n-1)!, & \\text{si $n$ > 0} \\end{cases} $$ Ejercicio 5.1.2 \u00b6 Dado un n\u00famero $n$ como par\u00e1metro de entrada, calcular el $n$-\u00e9simo n\u00famero de la serie de Fibonacci. Tener en cuenta la siguiente definici\u00f3n: $$ Fib(n) = \\begin{cases} 1, & \\text{si $n$ = 1, $n$ = 2} \\\\ Fib(n-1) + Fib(n-2), & \\text{si $n$ > 2} \\end{cases} $$ Ejercicio 5.1.3 \u00b6 Dados dos n\u00fameros: $a$ y $b$. Calcule la potencia $a^b$, usando s\u00f3lo multiplicaciones sucesivas. Ejercicio 5.1.4 \u00b6 Construir un algoritmo recursivo que permita determinar si los d\u00edgitos de un n\u00famero $n$ dado son todos pares. Ejercicio 5.1.5 \u00b6 Dados dos n\u00fameros enteros, div\u00eddalos (divisi\u00f3n entera) y muestre el resultado, usando s\u00f3lo la operaci\u00f3n resta. Ejercicio 5.1.6 \u00b6 Determine recursivamente si un n\u00famero dado es par o impar, usando s\u00f3lo la operaci\u00f3n resta. Ejercicio 5.1.7 \u00b6 El algoritmo de Euclides para encontrar el MCD (m\u00e1ximo com\u00fan divisor) de dos n\u00fameros enteros positivos ( m y n ) se puede definir recursivamente. Algoritmo de Euclides: el MCD de dos enteros es el entero mayor que divide a ambos. Dividendo Divisor Cociente Resto m n q1 r1 n r1 q2 r2 r1 r2 q3 r3 Cuando el \u00faltimo resto es cero (por ej. r3 = 0), el MCD es el \u00faltimo divisor (en ese caso, r2). El algoritmo recursivo se puede definir con los siguientes pasos: MCD (m,n) = n, si n <= m, n divide a m MCD (m,n) = MCD (n, m), si m < n MCD (m,n) = MCD (n, resto de m dividio por n) Para simplificar el algoritmo considerar que siempre m > n Ejercicio 5.1.8 \u00b6 Dado un vector de 10 n\u00fameros enteros, calcular la suma de sus elementos 5.2 Procedimientos Recursivas \u00b6 Ejercicio 5.2.1 \u00b6 Imprimir las cifras de un n\u00famero $n$ (siendo $n \\ge 0$) en orden inverso al original. Por ej.: el inverso de 254 es 452. Ejercicio 5.2.2 \u00b6 Leer una palabra (una cadena de caracteres) y la cantidad de caracteres y generar su pal\u00edndromo. El pal\u00edndromo de \u201cVenezuela\u201d es \u201caleuzeneV\u201d. Ejercicio 5.2.3 \u00b6 Dada una lista de nombres ordenada en forma ascendente, construir un procedimiento recursivo que imprima como salida la misma lista, pero en orden descendente, sin modificar la lista original. Ejercicio 5.2.4 \u00b6 Para convertir un n\u00famero decimal a binario, simplemente debe dividirse sucesivas veces por dos (2) hasta quedarnos con el cociente cero (0). Todos los restos de las divisiones, tomados en orden inverso, forman el n\u00famero binario objetivo. Escribir un procedimiento recursivo que, recibiendo como par\u00e1metro un n\u00famero entero positivo, muestre en pantalla el mismo n\u00famero codificado en binario. 5.3 Arboles \u00b6 Ejercicio 5.3.1 \u00b6 Responda las siguientes preguntas para el \u00e1rbol de la figura: \u00bfQu\u00e9 nodos son hojas? \u00bfQu\u00e9 nodo es ra\u00edz? \u00bfCu\u00e1l es el padre del nodo C? \u00bfQu\u00e9 nodos son los hijos de C? \u00bfQu\u00e9 nodos son los antecesores de C? \u00bfQu\u00e9 nodos son los descendientes de E? \u00bfCu\u00e1les son los hermanos derechos de D y E? \u00bfQu\u00e9 nodos est\u00e1n a izquierda y qu\u00e9 nodos a derecha de G? \u00bfCu\u00e1l es la profundidad del \u00e1rbol? \u00bfCu\u00e1l es la altura del nodo C? Ejercicio 5.3.2 \u00b6 \u00bfCu\u00e1ntos caminos de longitud 3 hay en el \u00e1rbol representado en la figura anterior? Ejercicio 5.3.3 \u00b6 Dada la expresi\u00f3n de la siguiente l\u00ednea, dibujar el \u00e1rbol equivalente [ ( x - y ) * z ] / ( m + n ** p) Ejercicio 5.3.4 \u00b6 Dado el siguiente \u00e1rbol: Indique el resultado del recorrido post-orden Indique el resultado del recorrido en-orden Elabore un algoritmo para el recorrido en-orden Ejercicio 5.3.5 \u00b6 Para las siguientes expresiones: ( 5 + 7 ) / 8 \u2013 ( 6 * 7 ) ** 2 3 \u2013 6 + 6 * ( 8 / 3 ) 4 / ( 8 \u2013 6 * ( 8 + 3 ) ) Grafique el \u00e1rbol equivalente Indique las expresiones resultantes de los recorridos EN-ORDEN, PRE-ORDEN y POST-ORDEN Calcule los resultados num\u00e9ricos que arroja la ejecuci\u00f3n de cada uno de los recorridos. Ejercicio 5.3.6 \u00b6 Escriba un algoritmo que permita recorrer el siguiente \u00e1rbol en los tres procedimientos, realice la prueba de escritorio Ejercicio 5.3.7 \u00b6 Escribir una funci\u00f3n recursiva que encuentre el n\u00famero de nodos de un \u00e1rbol binario. Ejercicio 5.3.8 \u00b6 Escribir una funci\u00f3n recursiva que encuentre la altura de un \u00e1rbol binario. Ejercicio 5.3.9 \u00b6 Se dispone de un \u00e1rbol binario de enteros. Escribir funciones que calculen: La suma de sus elementos. La suma de sus elementos que son m\u00faltiplos de 3. Ejercicio 5.3.10 \u00b6 Suponiendo que un \u00e1rbol est\u00e1 definido como la estructura recursiva de datos: arbol = registro x: entero izq, der: puntero a arbol fin registro Escribir un algoritmo que encuentre un elemento con una clave dada C, y realice una operaci\u00f3n P con \u00e9l. Ejercicio 5.3.11 \u00b6 Convi\u00e9rtase la expresi\u00f3n ((a + b) + c * (d + e) + f) * (g + h) en expresi\u00f3n prefija expresi\u00f3n postfija Ejercicio 5.3.12 \u00b6 El recorrido en pre-orden de un determinado \u00e1rbol binario es: GEAIBMCLDFKJH y en-orden IABEGLDCFMKHJ . Dibujar el \u00e1rbol binario. Dar el recorrido en post-orden. Dise\u00f1ar un algoritmo para recorrer el \u00e1rbol en post-orden. Ejercicio 5.3.13 \u00b6 Supongamos que tenemos una funci\u00f3n valor tal que dado un valor de tipo char (una letra del alfabeto) devuelve un valor entero asociado a dicho identificador. Supongamos tambi\u00e9n la existencia de un \u00e1rbol de expresi\u00f3n T cuyos nodos hoja son letras del alfabeto y cuyos nodos interiores son los caracteres *, +, -, /. Dise\u00f1ar una funci\u00f3n que tome como par\u00e1metros un nodo y un \u00e1rbol binario y devuelva el resultado entero de la evaluaci\u00f3n de la expresi\u00f3n representada. Ejercicio 5.3.14 \u00b6 \u00bfPuede reconstruirse de forma \u00fanica un ABB dado su inorden? \u00bfY dados el preorden y el postorden? Ejercicio 5.3.15 \u00b6 Construir un ABB con las claves 50, 25, 75, 10, 40, 60, 90, 35, 45, 70, 42. Ejercicio 5.3.16 \u00b6 \u00bfBajo qu\u00e9 condiciones puede un \u00e1rbol ser parcialmente ordenado y binario de b\u00fasqueda simult\u00e1neamente?. Razonar la respuesta. Ejercicio 5.3.17 \u00b6 Dados los siguientes \u00e1rboles indicar cu\u00e1l es AVL y cu\u00e1l no.","title":"5. Recursividad"},{"location":"practica/5/#5-recursividad","text":"","title":"5. Recursividad"},{"location":"practica/5/#51-funciones-recursivas","text":"","title":"5.1 Funciones Recursivas"},{"location":"practica/5/#ejercicio-511","text":"Calcular el factorial de un n\u00famero positivo $n$. Tener en cuenta la definici\u00f3n matem\u00e1tica de $n!$: $$ n! = \\begin{cases} 1, & \\text{si $n$ = 0} \\\\ n \\times (n-1)!, & \\text{si $n$ > 0} \\end{cases} $$","title":"Ejercicio 5.1.1"},{"location":"practica/5/#ejercicio-512","text":"Dado un n\u00famero $n$ como par\u00e1metro de entrada, calcular el $n$-\u00e9simo n\u00famero de la serie de Fibonacci. Tener en cuenta la siguiente definici\u00f3n: $$ Fib(n) = \\begin{cases} 1, & \\text{si $n$ = 1, $n$ = 2} \\\\ Fib(n-1) + Fib(n-2), & \\text{si $n$ > 2} \\end{cases} $$","title":"Ejercicio 5.1.2"},{"location":"practica/5/#ejercicio-513","text":"Dados dos n\u00fameros: $a$ y $b$. Calcule la potencia $a^b$, usando s\u00f3lo multiplicaciones sucesivas.","title":"Ejercicio 5.1.3"},{"location":"practica/5/#ejercicio-514","text":"Construir un algoritmo recursivo que permita determinar si los d\u00edgitos de un n\u00famero $n$ dado son todos pares.","title":"Ejercicio 5.1.4"},{"location":"practica/5/#ejercicio-515","text":"Dados dos n\u00fameros enteros, div\u00eddalos (divisi\u00f3n entera) y muestre el resultado, usando s\u00f3lo la operaci\u00f3n resta.","title":"Ejercicio 5.1.5"},{"location":"practica/5/#ejercicio-516","text":"Determine recursivamente si un n\u00famero dado es par o impar, usando s\u00f3lo la operaci\u00f3n resta.","title":"Ejercicio 5.1.6"},{"location":"practica/5/#ejercicio-517","text":"El algoritmo de Euclides para encontrar el MCD (m\u00e1ximo com\u00fan divisor) de dos n\u00fameros enteros positivos ( m y n ) se puede definir recursivamente. Algoritmo de Euclides: el MCD de dos enteros es el entero mayor que divide a ambos. Dividendo Divisor Cociente Resto m n q1 r1 n r1 q2 r2 r1 r2 q3 r3 Cuando el \u00faltimo resto es cero (por ej. r3 = 0), el MCD es el \u00faltimo divisor (en ese caso, r2). El algoritmo recursivo se puede definir con los siguientes pasos: MCD (m,n) = n, si n <= m, n divide a m MCD (m,n) = MCD (n, m), si m < n MCD (m,n) = MCD (n, resto de m dividio por n) Para simplificar el algoritmo considerar que siempre m > n","title":"Ejercicio 5.1.7"},{"location":"practica/5/#ejercicio-518","text":"Dado un vector de 10 n\u00fameros enteros, calcular la suma de sus elementos","title":"Ejercicio 5.1.8"},{"location":"practica/5/#52-procedimientos-recursivas","text":"","title":"5.2 Procedimientos Recursivas"},{"location":"practica/5/#ejercicio-521","text":"Imprimir las cifras de un n\u00famero $n$ (siendo $n \\ge 0$) en orden inverso al original. Por ej.: el inverso de 254 es 452.","title":"Ejercicio 5.2.1"},{"location":"practica/5/#ejercicio-522","text":"Leer una palabra (una cadena de caracteres) y la cantidad de caracteres y generar su pal\u00edndromo. El pal\u00edndromo de \u201cVenezuela\u201d es \u201caleuzeneV\u201d.","title":"Ejercicio 5.2.2"},{"location":"practica/5/#ejercicio-523","text":"Dada una lista de nombres ordenada en forma ascendente, construir un procedimiento recursivo que imprima como salida la misma lista, pero en orden descendente, sin modificar la lista original.","title":"Ejercicio 5.2.3"},{"location":"practica/5/#ejercicio-524","text":"Para convertir un n\u00famero decimal a binario, simplemente debe dividirse sucesivas veces por dos (2) hasta quedarnos con el cociente cero (0). Todos los restos de las divisiones, tomados en orden inverso, forman el n\u00famero binario objetivo. Escribir un procedimiento recursivo que, recibiendo como par\u00e1metro un n\u00famero entero positivo, muestre en pantalla el mismo n\u00famero codificado en binario.","title":"Ejercicio 5.2.4"},{"location":"practica/5/#53-arboles","text":"","title":"5.3 Arboles"},{"location":"practica/5/#ejercicio-531","text":"Responda las siguientes preguntas para el \u00e1rbol de la figura: \u00bfQu\u00e9 nodos son hojas? \u00bfQu\u00e9 nodo es ra\u00edz? \u00bfCu\u00e1l es el padre del nodo C? \u00bfQu\u00e9 nodos son los hijos de C? \u00bfQu\u00e9 nodos son los antecesores de C? \u00bfQu\u00e9 nodos son los descendientes de E? \u00bfCu\u00e1les son los hermanos derechos de D y E? \u00bfQu\u00e9 nodos est\u00e1n a izquierda y qu\u00e9 nodos a derecha de G? \u00bfCu\u00e1l es la profundidad del \u00e1rbol? \u00bfCu\u00e1l es la altura del nodo C?","title":"Ejercicio 5.3.1"},{"location":"practica/5/#ejercicio-532","text":"\u00bfCu\u00e1ntos caminos de longitud 3 hay en el \u00e1rbol representado en la figura anterior?","title":"Ejercicio 5.3.2"},{"location":"practica/5/#ejercicio-533","text":"Dada la expresi\u00f3n de la siguiente l\u00ednea, dibujar el \u00e1rbol equivalente [ ( x - y ) * z ] / ( m + n ** p)","title":"Ejercicio 5.3.3"},{"location":"practica/5/#ejercicio-534","text":"Dado el siguiente \u00e1rbol: Indique el resultado del recorrido post-orden Indique el resultado del recorrido en-orden Elabore un algoritmo para el recorrido en-orden","title":"Ejercicio 5.3.4"},{"location":"practica/5/#ejercicio-535","text":"Para las siguientes expresiones: ( 5 + 7 ) / 8 \u2013 ( 6 * 7 ) ** 2 3 \u2013 6 + 6 * ( 8 / 3 ) 4 / ( 8 \u2013 6 * ( 8 + 3 ) ) Grafique el \u00e1rbol equivalente Indique las expresiones resultantes de los recorridos EN-ORDEN, PRE-ORDEN y POST-ORDEN Calcule los resultados num\u00e9ricos que arroja la ejecuci\u00f3n de cada uno de los recorridos.","title":"Ejercicio 5.3.5"},{"location":"practica/5/#ejercicio-536","text":"Escriba un algoritmo que permita recorrer el siguiente \u00e1rbol en los tres procedimientos, realice la prueba de escritorio","title":"Ejercicio 5.3.6"},{"location":"practica/5/#ejercicio-537","text":"Escribir una funci\u00f3n recursiva que encuentre el n\u00famero de nodos de un \u00e1rbol binario.","title":"Ejercicio 5.3.7"},{"location":"practica/5/#ejercicio-538","text":"Escribir una funci\u00f3n recursiva que encuentre la altura de un \u00e1rbol binario.","title":"Ejercicio 5.3.8"},{"location":"practica/5/#ejercicio-539","text":"Se dispone de un \u00e1rbol binario de enteros. Escribir funciones que calculen: La suma de sus elementos. La suma de sus elementos que son m\u00faltiplos de 3.","title":"Ejercicio 5.3.9"},{"location":"practica/5/#ejercicio-5310","text":"Suponiendo que un \u00e1rbol est\u00e1 definido como la estructura recursiva de datos: arbol = registro x: entero izq, der: puntero a arbol fin registro Escribir un algoritmo que encuentre un elemento con una clave dada C, y realice una operaci\u00f3n P con \u00e9l.","title":"Ejercicio 5.3.10"},{"location":"practica/5/#ejercicio-5311","text":"Convi\u00e9rtase la expresi\u00f3n ((a + b) + c * (d + e) + f) * (g + h) en expresi\u00f3n prefija expresi\u00f3n postfija","title":"Ejercicio 5.3.11"},{"location":"practica/5/#ejercicio-5312","text":"El recorrido en pre-orden de un determinado \u00e1rbol binario es: GEAIBMCLDFKJH y en-orden IABEGLDCFMKHJ . Dibujar el \u00e1rbol binario. Dar el recorrido en post-orden. Dise\u00f1ar un algoritmo para recorrer el \u00e1rbol en post-orden.","title":"Ejercicio 5.3.12"},{"location":"practica/5/#ejercicio-5313","text":"Supongamos que tenemos una funci\u00f3n valor tal que dado un valor de tipo char (una letra del alfabeto) devuelve un valor entero asociado a dicho identificador. Supongamos tambi\u00e9n la existencia de un \u00e1rbol de expresi\u00f3n T cuyos nodos hoja son letras del alfabeto y cuyos nodos interiores son los caracteres *, +, -, /. Dise\u00f1ar una funci\u00f3n que tome como par\u00e1metros un nodo y un \u00e1rbol binario y devuelva el resultado entero de la evaluaci\u00f3n de la expresi\u00f3n representada.","title":"Ejercicio 5.3.13"},{"location":"practica/5/#ejercicio-5314","text":"\u00bfPuede reconstruirse de forma \u00fanica un ABB dado su inorden? \u00bfY dados el preorden y el postorden?","title":"Ejercicio 5.3.14"},{"location":"practica/5/#ejercicio-5315","text":"Construir un ABB con las claves 50, 25, 75, 10, 40, 60, 90, 35, 45, 70, 42.","title":"Ejercicio 5.3.15"},{"location":"practica/5/#ejercicio-5316","text":"\u00bfBajo qu\u00e9 condiciones puede un \u00e1rbol ser parcialmente ordenado y binario de b\u00fasqueda simult\u00e1neamente?. Razonar la respuesta.","title":"Ejercicio 5.3.16"},{"location":"practica/5/#ejercicio-5317","text":"Dados los siguientes \u00e1rboles indicar cu\u00e1l es AVL y cu\u00e1l no.","title":"Ejercicio 5.3.17"},{"location":"teoria/actualizacion/","text":"Actualizacion \u00b6 Tipos de Actualizaci\u00f3n \u00b6 POR LOTES Varios registros de movimiento para un registro maestro. UNITARIA Un registro movimiento para un registro maestro. Ficheros \u00b6 Ficheros de entrada: por lo menos dos: MAESTRO Y MOVIMIENTOS. Ficheros de salida: como m\u00ednimo uno. Tipos de Ficheros Maestros \u00b6 Hist\u00f3rico Com\u00fan o Normal Tipos de Ficheros de Movimientos \u00b6 Actualizaci\u00f3n General o Combinado Actualizaci\u00f3n Parcial o Individual Tipos de Movimientos \u00b6 Alta Baja Modificaci\u00f3n Algoritmo Actualizaci\u00f3n Unitaria \u00b6 Utilizando ciclo incluyente Accion Act_Uni es Algoritmo Abrir_Archivos Leer_Maestro Leer_Movimiento Mientras (Clave_Mae <> HV) o (Clave_Mov <> HV) hacer Si (Clave_Mae = Clave_Mov) entonces Proceso_Iguales sino Si (Clave_Mae < Clave_Mov) entonces Reg_sal:= Reg_mae Escribir(Arch_sal, Reg_sal) Leer_Maestro sino Proceso_Distintos Fin Si Fin Si Fin Mientras Cerrar_Archivos Fin Accion Subaccion Leer_Movimiento es Leer(Arch_mov, Reg_mov) Si FDA(Arch_mov) entonces Clave_mov:= HV Fin Si Fin Subaccion Subaccion Leer_Maestro es Leer(Arch_mae, Reg_mae) Si FDA(Arch_mae) entonces Clave_mae : = HV Fin Si Fin Subaccion Subacci\u00f3n Proceso_Iguales es Si Reg_mov.Cod_mov = 'ALTA' entonces Escribir('Error alta no existe') Reg_sal:= Reg_mae Escribir(Arch_sal, Reg_sal) Sino Si (Reg_mov.Cod_Mov = 'MODIF') entonces Proceso_Mod_Maestro Reg_sal : = Reg_mae Escribir(Arch_sal, Reg_sal) Sino // eliminaci\u00f3n l\u00f3gica Marcar_Registro Reg_sal:= Reg_mae Escribir(Arch_sal, Reg_sal) Fin Si Fin Si Leer_Maestro Leer_Movimiento Fin Subacci\u00f3n. Subaccion Proceso_Distintos es Si (Reg_mov.Cod_Mov = 'BAJA') entonces Escribir('Error baja no existe') Sino Si (Reg_mov.Cod_Mov = 'MODIF') entonces Escribir('Error mofificaci\u00f3n no existe') Sino // Asigna campo por campo, porque Reg_sal y Reg_mov tienen distinto formato Reg_sal.clave:= Reg_mov.clave Reg_sal.campo1:= Reg_mov.campo1 Reg_sal.campo2:= Reg_mov.campo2 ........ Reg_sal.campoN:= Reg_mov.campoN Reg_sal.Marca_baja:= '' Escribir(Arch_sal, Reg_sal) Fin Si Fin Si Leer_Movimiento Fin Subaccion Subaccion Proceso_Modif_Maestro es Si (Reg_Mov.campo1 <> '') entonces Reg_mae.campo1:= Reg_mov.campo1 Fin Si Si (Reg_Mov.campo2 <> '') entonces Reg_mae.campo2 := Reg_mov.campo2 Fin Si Si (Reg_Mov.campo3 <> '') entonces Reg_mae.campo3 := Reg_mov.campo3 Fin Si // ... y as\u00ed sucesivamente para todos los campos del registro... Fin Subaccion Subaccion Marcar_Registro es Reg_mae.Marca_baja:= '*' // en vez de asterisco, se puede asignar la fecha del d\u00eda, o cualquier otro dato, seg\u00fan el problema // Fin Subaccion Actualizacion Secuencial Por lotes \u00b6 Consideraciones \u00b6 Utilizamos un ciclo incluyente . Los tipos de movimientos son: Alta: Siempre el primer registro va a ser del tipo alta, y luego modificaciones. Modificaci\u00f3n: pueden existir varias modificaciones a un maestro. Baja: son bajas logicas. Solo el ultimo movimiento puede ser una baja logica. No existen altas o bajas entre las modificaciones. Ambiente \u00b6 El ambiente esta formado por 2 archivos con la siguiente estructura: Formato_Clave = Registro clave1: ... clave2: ... ... claven: ... fin registro formato_Maestro = Registro clave: formato_clave campo1: ... campo2: ... ... campon: ... Marca_baja: ... fin registro formato_Movimiento = Registro clave: formato_clave campo1: ... campo2: ... ... campon: ... cod_mov: (\"A\", \"M\", \"B\") fin registro mae, mae_sal: archivo de formato_Maestro ordenado por clave reg_sal, reg_mae, aux: formato_Maestro mov: archivo de formato_movimiento ordenado por clave reg_mov: formato_movimiento Algoritmo \u00b6 Abrir_Archivos Leer_Maestro Leer_Movimiento MIENTRAS (reg_mov.clave <> High_Value) o (reg_mae.clave <> High_Value) HACER SI Creg_mae.clave < Creg_mov.clave ENTONCES //Maestro sin Movimiento Reg_sal : = Reg_mae ESCRIBIR(mae_sal, Reg_sal) Leer_Maestro SINO SI Creg_mae.clave = Creg_mov.clave Movimiento aux : = reg_mae MIENTRAS (Creg_mae.clave = Creg_mov.clave) HACER Proceso_Movim Leer_Movimiento Fin Mientras reg_sal : = Aux ESCRIBIR(mae_sal, reg_sal) Leer_Maestro SINO // Movimiento sin Maestro ~ 1 Alta y 0-1 Modific. y/o Bajas // Asigna campo por campo, porque Aux y Reg_mov tienen distinto formato Aux.clave := Reg_mov.clave Aux.campo1 := Reg_mov.campo3 Aux.campo2 := Reg_mov.campo4 ........ Aux.campon := Reg_mov.campon Aux.Marca_baja := \"\" Leer_Movimiento MIENTRAS (Clave_Aux = Clave_Mov) HACER Proceso_Movim Leer_Movimiento FMientras reg_sal : = aux ESCRIBIR(mae_sal, reg_sal) FIN SI FIN SI FIN MIENTRAS CERRAR(mae) CERRAR(mae_sal) CERRAR(mov) Subacciones \u00b6 Subacci\u00f3n Leer_Movimiento es LEER(mov, Reg_mov) SI FDA(mov) ENTONCES reg_mov.clave := High_value FSI; FAcci\u00f3n Subacci\u00f3n Leer_Maestro es LEER(mae, reg_mae) SI FDA(mae) ENTONCES reg_mae.clave : = High_value FSI; FAcci\u00f3n Subacci\u00f3n Proceso_Movim es //Comparar la informaci\u00f3n del Registro de Movimientos y, de acuerdo a los valores que //tengan, y alterar los contenidos del Registro Auxiliar (Aux). SI reg_mov.Cod_Mov = \"M\" ENTONCES //Modificaci\u00f3n Proceso_modif_maestro SINO SI reg_mov.Cod_Mov = \"B\" ENTONCES //eliminaci\u00f3n l\u00f3gica Marcar_registro Fsi Fsi FAcci\u00f3n Subacci\u00f3n Proceso_modif_maestro es Si Reg_Mov.campo1 <> \"\" entonces // No se actualizan los campos claves. Aux.campo1 := Reg_mov.campo1 fsi; Si Reg_Mov.campo2 <> \"\" entonces Aux.campo2 := Reg_mov.campo2 fsi; .............................. //... y as\u00ed sucesivamente para todos los campos del registro... .............................. Si Reg_Mov.campon <> \"\" entonces Aux.campon := Reg_mov.campon fsi; FAcci\u00f3n. Subacci\u00f3n Marcar_registro es //en vez de asterisco, se puede asignar la fecha del d\u00eda, //o cualquier otro dato, seg\u00fan el problema Aux.Marca_baja:= \"*\" FAcci\u00f3n. Modificar \u00b6 Que pasa si se pide que se tengan en cuenta los siguientes errores: Las altas no siempre estan al principio. Las bajas no siempre estan al final. Actualizacion Indexada \u00b6 Consideraciones \u00b6 Archivo maestro indexado por clave Se ingresan movimientos por terminal Ambiente \u00b6 El ambiente esta formado por 1 solo archivos con la siguiente estructura: formato_mae = Registro clave: formato_clave campo1: ... campo2: ... ... campon: ... Marca_baja: ... fin registro arch_mae: Archivo de formato_mae indexado por clave. reg_mae: formato cod_mov: AN(1) valido = ('A', 'B', 'C') clave: formato_clave Algoritmo \u00b6 Abrir E/S (arch) Escribir (\u2018Por favor ingrese la clave a procesar y el c\u00f3digo de movimiento (A: incorporaciones, B: bajas, M: modificaciones) Para finalizar ingrese cualquier otra letra.\u2019) Leer(clave, cod_mov) MIENTRAS (cod_mov en valido) HACER reg_mae.clave := clave LEER (arch_mae, reg_mae) SI no existe ENTONCES SI cod_mov = 'B' ENTONCES ESCRIBIR(\u2018Error baja no existe\u2019) SINO SI cod_mov = 'M' ENTONCES ESCRIBIR(\u2018Error modificaci\u00f3n no existe\u2019) SINO // Ingresar por teclado los datos correspondientes a la nueva clave LEER(reg_mae.campo1) LEER(reg_mae.campo2) ... LEER(reg_mae.campon) ESCRIBIR(arch_mae, reg_mae) FSI FSI SINO SI cod_mov = 'A' ENTONCES ESCRIBIR(\u2018Error clave existe, alta no es posible\u2019) SINO SI cod_mov = 'M' ENTONCES // Ingresar por teclado los datos que se desean modificar LEER(campo1) SI campo1 <> '' ENTONCES reg_mae.campo1 := campo1 FSI LEER(campo2) SI campo2 <> '' ENTONCES reg_mae.campo2 := campo2 FSI ... LEER(campon) SI campon <> '' ENTONCES reg_mae.campon := campon FSI RE-ESCRIBIR(arch_mae, reg_mae) SINO // Baja l\u00f3gica reg_mae.Marca_baja := \"*\" RE-ESCRIBIR(arch_mae, Reg_mae) // Baja F\u00edsica BORRAR(arch_mae, reg_mae) FSI FSI FSI ESCRIBIR (\u2018Por favor ingrese la clave a procesar y el c\u00f3digo de movimiento (A: incorporaciones, B: bajas, M: odificaciones) Para finalizar ingrese cualquier otra letra.\u2019) LEER(clave, cod_mov) FIN MIENTRAS CERRAR(arch_mae)","title":"Actualizacion"},{"location":"teoria/actualizacion/#actualizacion","text":"","title":"Actualizacion"},{"location":"teoria/actualizacion/#tipos-de-actualizacion","text":"POR LOTES Varios registros de movimiento para un registro maestro. UNITARIA Un registro movimiento para un registro maestro.","title":"Tipos de Actualizaci\u00f3n"},{"location":"teoria/actualizacion/#ficheros","text":"Ficheros de entrada: por lo menos dos: MAESTRO Y MOVIMIENTOS. Ficheros de salida: como m\u00ednimo uno.","title":"Ficheros"},{"location":"teoria/actualizacion/#tipos-de-ficheros-maestros","text":"Hist\u00f3rico Com\u00fan o Normal","title":"Tipos de Ficheros Maestros"},{"location":"teoria/actualizacion/#tipos-de-ficheros-de-movimientos","text":"Actualizaci\u00f3n General o Combinado Actualizaci\u00f3n Parcial o Individual","title":"Tipos de Ficheros de Movimientos"},{"location":"teoria/actualizacion/#tipos-de-movimientos","text":"Alta Baja Modificaci\u00f3n","title":"Tipos de Movimientos"},{"location":"teoria/actualizacion/#algoritmo-actualizacion-unitaria","text":"Utilizando ciclo incluyente Accion Act_Uni es Algoritmo Abrir_Archivos Leer_Maestro Leer_Movimiento Mientras (Clave_Mae <> HV) o (Clave_Mov <> HV) hacer Si (Clave_Mae = Clave_Mov) entonces Proceso_Iguales sino Si (Clave_Mae < Clave_Mov) entonces Reg_sal:= Reg_mae Escribir(Arch_sal, Reg_sal) Leer_Maestro sino Proceso_Distintos Fin Si Fin Si Fin Mientras Cerrar_Archivos Fin Accion Subaccion Leer_Movimiento es Leer(Arch_mov, Reg_mov) Si FDA(Arch_mov) entonces Clave_mov:= HV Fin Si Fin Subaccion Subaccion Leer_Maestro es Leer(Arch_mae, Reg_mae) Si FDA(Arch_mae) entonces Clave_mae : = HV Fin Si Fin Subaccion Subacci\u00f3n Proceso_Iguales es Si Reg_mov.Cod_mov = 'ALTA' entonces Escribir('Error alta no existe') Reg_sal:= Reg_mae Escribir(Arch_sal, Reg_sal) Sino Si (Reg_mov.Cod_Mov = 'MODIF') entonces Proceso_Mod_Maestro Reg_sal : = Reg_mae Escribir(Arch_sal, Reg_sal) Sino // eliminaci\u00f3n l\u00f3gica Marcar_Registro Reg_sal:= Reg_mae Escribir(Arch_sal, Reg_sal) Fin Si Fin Si Leer_Maestro Leer_Movimiento Fin Subacci\u00f3n. Subaccion Proceso_Distintos es Si (Reg_mov.Cod_Mov = 'BAJA') entonces Escribir('Error baja no existe') Sino Si (Reg_mov.Cod_Mov = 'MODIF') entonces Escribir('Error mofificaci\u00f3n no existe') Sino // Asigna campo por campo, porque Reg_sal y Reg_mov tienen distinto formato Reg_sal.clave:= Reg_mov.clave Reg_sal.campo1:= Reg_mov.campo1 Reg_sal.campo2:= Reg_mov.campo2 ........ Reg_sal.campoN:= Reg_mov.campoN Reg_sal.Marca_baja:= '' Escribir(Arch_sal, Reg_sal) Fin Si Fin Si Leer_Movimiento Fin Subaccion Subaccion Proceso_Modif_Maestro es Si (Reg_Mov.campo1 <> '') entonces Reg_mae.campo1:= Reg_mov.campo1 Fin Si Si (Reg_Mov.campo2 <> '') entonces Reg_mae.campo2 := Reg_mov.campo2 Fin Si Si (Reg_Mov.campo3 <> '') entonces Reg_mae.campo3 := Reg_mov.campo3 Fin Si // ... y as\u00ed sucesivamente para todos los campos del registro... Fin Subaccion Subaccion Marcar_Registro es Reg_mae.Marca_baja:= '*' // en vez de asterisco, se puede asignar la fecha del d\u00eda, o cualquier otro dato, seg\u00fan el problema // Fin Subaccion","title":"Algoritmo Actualizaci\u00f3n Unitaria"},{"location":"teoria/actualizacion/#actualizacion-secuencial-por-lotes","text":"","title":"Actualizacion Secuencial Por lotes"},{"location":"teoria/actualizacion/#consideraciones","text":"Utilizamos un ciclo incluyente . Los tipos de movimientos son: Alta: Siempre el primer registro va a ser del tipo alta, y luego modificaciones. Modificaci\u00f3n: pueden existir varias modificaciones a un maestro. Baja: son bajas logicas. Solo el ultimo movimiento puede ser una baja logica. No existen altas o bajas entre las modificaciones.","title":"Consideraciones"},{"location":"teoria/actualizacion/#ambiente","text":"El ambiente esta formado por 2 archivos con la siguiente estructura: Formato_Clave = Registro clave1: ... clave2: ... ... claven: ... fin registro formato_Maestro = Registro clave: formato_clave campo1: ... campo2: ... ... campon: ... Marca_baja: ... fin registro formato_Movimiento = Registro clave: formato_clave campo1: ... campo2: ... ... campon: ... cod_mov: (\"A\", \"M\", \"B\") fin registro mae, mae_sal: archivo de formato_Maestro ordenado por clave reg_sal, reg_mae, aux: formato_Maestro mov: archivo de formato_movimiento ordenado por clave reg_mov: formato_movimiento","title":"Ambiente"},{"location":"teoria/actualizacion/#algoritmo","text":"Abrir_Archivos Leer_Maestro Leer_Movimiento MIENTRAS (reg_mov.clave <> High_Value) o (reg_mae.clave <> High_Value) HACER SI Creg_mae.clave < Creg_mov.clave ENTONCES //Maestro sin Movimiento Reg_sal : = Reg_mae ESCRIBIR(mae_sal, Reg_sal) Leer_Maestro SINO SI Creg_mae.clave = Creg_mov.clave Movimiento aux : = reg_mae MIENTRAS (Creg_mae.clave = Creg_mov.clave) HACER Proceso_Movim Leer_Movimiento Fin Mientras reg_sal : = Aux ESCRIBIR(mae_sal, reg_sal) Leer_Maestro SINO // Movimiento sin Maestro ~ 1 Alta y 0-1 Modific. y/o Bajas // Asigna campo por campo, porque Aux y Reg_mov tienen distinto formato Aux.clave := Reg_mov.clave Aux.campo1 := Reg_mov.campo3 Aux.campo2 := Reg_mov.campo4 ........ Aux.campon := Reg_mov.campon Aux.Marca_baja := \"\" Leer_Movimiento MIENTRAS (Clave_Aux = Clave_Mov) HACER Proceso_Movim Leer_Movimiento FMientras reg_sal : = aux ESCRIBIR(mae_sal, reg_sal) FIN SI FIN SI FIN MIENTRAS CERRAR(mae) CERRAR(mae_sal) CERRAR(mov)","title":"Algoritmo"},{"location":"teoria/actualizacion/#subacciones","text":"Subacci\u00f3n Leer_Movimiento es LEER(mov, Reg_mov) SI FDA(mov) ENTONCES reg_mov.clave := High_value FSI; FAcci\u00f3n Subacci\u00f3n Leer_Maestro es LEER(mae, reg_mae) SI FDA(mae) ENTONCES reg_mae.clave : = High_value FSI; FAcci\u00f3n Subacci\u00f3n Proceso_Movim es //Comparar la informaci\u00f3n del Registro de Movimientos y, de acuerdo a los valores que //tengan, y alterar los contenidos del Registro Auxiliar (Aux). SI reg_mov.Cod_Mov = \"M\" ENTONCES //Modificaci\u00f3n Proceso_modif_maestro SINO SI reg_mov.Cod_Mov = \"B\" ENTONCES //eliminaci\u00f3n l\u00f3gica Marcar_registro Fsi Fsi FAcci\u00f3n Subacci\u00f3n Proceso_modif_maestro es Si Reg_Mov.campo1 <> \"\" entonces // No se actualizan los campos claves. Aux.campo1 := Reg_mov.campo1 fsi; Si Reg_Mov.campo2 <> \"\" entonces Aux.campo2 := Reg_mov.campo2 fsi; .............................. //... y as\u00ed sucesivamente para todos los campos del registro... .............................. Si Reg_Mov.campon <> \"\" entonces Aux.campon := Reg_mov.campon fsi; FAcci\u00f3n. Subacci\u00f3n Marcar_registro es //en vez de asterisco, se puede asignar la fecha del d\u00eda, //o cualquier otro dato, seg\u00fan el problema Aux.Marca_baja:= \"*\" FAcci\u00f3n.","title":"Subacciones"},{"location":"teoria/actualizacion/#modificar","text":"Que pasa si se pide que se tengan en cuenta los siguientes errores: Las altas no siempre estan al principio. Las bajas no siempre estan al final.","title":"Modificar"},{"location":"teoria/actualizacion/#actualizacion-indexada","text":"","title":"Actualizacion Indexada"},{"location":"teoria/actualizacion/#consideraciones_1","text":"Archivo maestro indexado por clave Se ingresan movimientos por terminal","title":"Consideraciones"},{"location":"teoria/actualizacion/#ambiente_1","text":"El ambiente esta formado por 1 solo archivos con la siguiente estructura: formato_mae = Registro clave: formato_clave campo1: ... campo2: ... ... campon: ... Marca_baja: ... fin registro arch_mae: Archivo de formato_mae indexado por clave. reg_mae: formato cod_mov: AN(1) valido = ('A', 'B', 'C') clave: formato_clave","title":"Ambiente"},{"location":"teoria/actualizacion/#algoritmo_1","text":"Abrir E/S (arch) Escribir (\u2018Por favor ingrese la clave a procesar y el c\u00f3digo de movimiento (A: incorporaciones, B: bajas, M: modificaciones) Para finalizar ingrese cualquier otra letra.\u2019) Leer(clave, cod_mov) MIENTRAS (cod_mov en valido) HACER reg_mae.clave := clave LEER (arch_mae, reg_mae) SI no existe ENTONCES SI cod_mov = 'B' ENTONCES ESCRIBIR(\u2018Error baja no existe\u2019) SINO SI cod_mov = 'M' ENTONCES ESCRIBIR(\u2018Error modificaci\u00f3n no existe\u2019) SINO // Ingresar por teclado los datos correspondientes a la nueva clave LEER(reg_mae.campo1) LEER(reg_mae.campo2) ... LEER(reg_mae.campon) ESCRIBIR(arch_mae, reg_mae) FSI FSI SINO SI cod_mov = 'A' ENTONCES ESCRIBIR(\u2018Error clave existe, alta no es posible\u2019) SINO SI cod_mov = 'M' ENTONCES // Ingresar por teclado los datos que se desean modificar LEER(campo1) SI campo1 <> '' ENTONCES reg_mae.campo1 := campo1 FSI LEER(campo2) SI campo2 <> '' ENTONCES reg_mae.campo2 := campo2 FSI ... LEER(campon) SI campon <> '' ENTONCES reg_mae.campon := campon FSI RE-ESCRIBIR(arch_mae, reg_mae) SINO // Baja l\u00f3gica reg_mae.Marca_baja := \"*\" RE-ESCRIBIR(arch_mae, Reg_mae) // Baja F\u00edsica BORRAR(arch_mae, reg_mae) FSI FSI FSI ESCRIBIR (\u2018Por favor ingrese la clave a procesar y el c\u00f3digo de movimiento (A: incorporaciones, B: bajas, M: odificaciones) Para finalizar ingrese cualquier otra letra.\u2019) LEER(clave, cod_mov) FIN MIENTRAS CERRAR(arch_mae)","title":"Algoritmo"},{"location":"teoria/arreglos/","text":"Arreglos \u00b6 B\u00fasqueda \u00b6 B\u00fasqueda lineal \u00b6 LEER(x) PARA i:= 1 a N HACER SI A[i] = x ENTONCES Escribir ('El elemento', x, 'est\u00e1 en la posici\u00f3n', i) FIN SI FIN PARA B\u00fasqueda lineal con centinela \u00b6 LEER(x) i:=1 MIENTRAS (i < N) y A[i] <> x HACER i:=i+1 FIN MIENTRAS SI A[i] = x ENTONCES ESCRIBIR ('El elemento', x, 'se encontr\u00f3 en la posici\u00f3n', i) SINO ESCRIBIR ('No encontrado') FIN SI B\u00fasqueda binaria o dicot\u00f3mica \u00b6 LEER(x) iz:=1 de:=N cen:=(iz+de) DIV 2 MIENTRAS (iz < de) y (nom[cen] <> x) HACER SI (nom[cen] > x) ENTONCES de:=cen-1 SINO iz:=cen+1 FIN SI cen:=(iz+de) div 2; FIN MIENTRAS SI (nom[cen] = x) ENTONCES ESCRIBIR ('El elemento buscado est\u00e1 en la posici\u00f3n ',cen) SINO ESCRIBIR ('El elemento buscado no est\u00e1 en el arreglo'); FIN SI Ordenamiento \u00b6 Inserci\u00f3n directa \u00b6 // Ordena de menor a mayor CARGAR_ARREGLO PARA i:= 2 a n HACER x:=a[i] j:=i-1 MIENTRAS (j > 0) y (x < a[j]) HACER a[j+1]:=a[j] j:=j-1 FIN MIENTRAS a[j+1]:=x FIN PARA Seleccion directa \u00b6 // Ordena de mayor a menor CARGAR_ARREGLO PARA i:= 1 a n-1 HACER x:=a[i] max:=i PARA j:= i+1 a n HACER SI (x < a[j]) ENTONCES max:=j x:=a[j] FIN SI FIN PARA a[max]:=a[i] a[i]:=x FIN PARA Intercambio directo / Burbuja \u00b6 // Ordena de mayor a menor CARGAR_ARREGLO Bandera:= Falso MIENTRAS No Bandera HACER Bandera:= Verdadero PARA j:=1 a n-1 HACER SI (a[j] < a[j+1]) ENTONCES x:=a[j] a[j]:=a[j+1] a[j+1]:=x Bandera:= Falso FIN SI FIN PARA FIN MIENTRAS","title":"Arreglos"},{"location":"teoria/arreglos/#arreglos","text":"","title":"Arreglos"},{"location":"teoria/arreglos/#busqueda","text":"","title":"B\u00fasqueda"},{"location":"teoria/arreglos/#busqueda-lineal","text":"LEER(x) PARA i:= 1 a N HACER SI A[i] = x ENTONCES Escribir ('El elemento', x, 'est\u00e1 en la posici\u00f3n', i) FIN SI FIN PARA","title":"B\u00fasqueda lineal"},{"location":"teoria/arreglos/#busqueda-lineal-con-centinela","text":"LEER(x) i:=1 MIENTRAS (i < N) y A[i] <> x HACER i:=i+1 FIN MIENTRAS SI A[i] = x ENTONCES ESCRIBIR ('El elemento', x, 'se encontr\u00f3 en la posici\u00f3n', i) SINO ESCRIBIR ('No encontrado') FIN SI","title":"B\u00fasqueda lineal con centinela"},{"location":"teoria/arreglos/#busqueda-binaria-o-dicotomica","text":"LEER(x) iz:=1 de:=N cen:=(iz+de) DIV 2 MIENTRAS (iz < de) y (nom[cen] <> x) HACER SI (nom[cen] > x) ENTONCES de:=cen-1 SINO iz:=cen+1 FIN SI cen:=(iz+de) div 2; FIN MIENTRAS SI (nom[cen] = x) ENTONCES ESCRIBIR ('El elemento buscado est\u00e1 en la posici\u00f3n ',cen) SINO ESCRIBIR ('El elemento buscado no est\u00e1 en el arreglo'); FIN SI","title":"B\u00fasqueda binaria o dicot\u00f3mica"},{"location":"teoria/arreglos/#ordenamiento","text":"","title":"Ordenamiento"},{"location":"teoria/arreglos/#insercion-directa","text":"// Ordena de menor a mayor CARGAR_ARREGLO PARA i:= 2 a n HACER x:=a[i] j:=i-1 MIENTRAS (j > 0) y (x < a[j]) HACER a[j+1]:=a[j] j:=j-1 FIN MIENTRAS a[j+1]:=x FIN PARA","title":"Inserci\u00f3n directa"},{"location":"teoria/arreglos/#seleccion-directa","text":"// Ordena de mayor a menor CARGAR_ARREGLO PARA i:= 1 a n-1 HACER x:=a[i] max:=i PARA j:= i+1 a n HACER SI (x < a[j]) ENTONCES max:=j x:=a[j] FIN SI FIN PARA a[max]:=a[i] a[i]:=x FIN PARA","title":"Seleccion directa"},{"location":"teoria/arreglos/#intercambio-directo-burbuja","text":"// Ordena de mayor a menor CARGAR_ARREGLO Bandera:= Falso MIENTRAS No Bandera HACER Bandera:= Verdadero PARA j:=1 a n-1 HACER SI (a[j] < a[j+1]) ENTONCES x:=a[j] a[j]:=a[j+1] a[j+1]:=x Bandera:= Falso FIN SI FIN PARA FIN MIENTRAS","title":"Intercambio directo / Burbuja"},{"location":"teoria/corte/","text":"Corte de Control \u00b6 Estructura del Corte de Control \u00b6 Primero vamos a ver la estructura generica del algoritmo (o el esqueleto): Definimos un registro que tiene 3 claves: reg = Registro clave3: N(8) clave2: N(4) clave1: N(2) clave0: N(2) campo1: (\"Si\", \"No\") campo2: N(2) campo3: AN(50) fin Registro Nota: de esta forma la clave3 es la de mayor peso, seguido por la clave2, y luego por la clave1. Ahora el archivo y la variable para recorrer: Arch: Archivo de reg ordenado por clave3, clave2, clave1 y clave0 r: reg Las variables que se van a ocupar son: Resguardo de clave (Reg1, Reg2, Reg3) Contadores y Acumuladores La subaccion corte_n va a tener las siguientes acciones: subaccion corte_n es llamada al corte_n-1 Emitir resultados del nivel Acumular totales al nivel superior Reiniciar totales de este nivel Resguardar la nueva clave fin subaccion Nota: la primera accion no se va a realizar si estamos en el corte de menor peso. Esqueleto del algoritmo: Algoritmo Inicializar_archivos Inicializar_totalizadores Inicializar_resguardos Mientras NFDA(Arch) Hacer Tratar_corte Tratar_registro Leer_registro Fin Mientras Corte_3 Emitir_totales cerrar_archivo Fin accion Ahora la subaccion Tratar_corte: Subaccion Tratar_Corte es Si r.clave3 <> Reg3 entonces Corte_3 sino Si r.clave2 <> Reg2 entonces Corte_2 sino Si r.clave1 <> Reg1 entonces Corte_1 fin si fin si fin si fin subaccion Nota: las subacciones: Inicializar, tratar_registro y Emitir_totales, no se escribieron dado a que dependen del enunciado. Un ejemplo \u00b6 Ahora un ejemplo con el mismo archivo, con el siguiente enunciado: \"Se pide mostrar cuantas entradas existen en el archivo, discriminando por la clave1, clave2, clave3 y total general.\" Accion ejemplo es Ambiente reg = Registro clave3: N(8) clave2: N(4) clave1: N(2) clave0: N(2) campo1: (\"Si\", \"No\") campo2: N(2) campo3: AN(50) fin Registro Arch : archivo de reg ordenado por clave3, clave2, clave1 y clave0 r : reg Reg3: N(8) Reg2: N(4) Reg1: N(2) contt, cont3, cont2, cont1: entero subaccion inicializar es Abrir E/(Arch) leer(Arch, r) contt := 0 cont3 := 0 cont2 := 0 cont1 := 0 Reg3 := r.clave3 Reg2 := r.clave2 Reg1 := r.clave1 Fin subaccion subaccion corte_1 es Esc(\"Para el \", Reg1, \" existen: \", cont1) cont2 := cont2 + cont1 cont1 := 0 Reg1 := r.clave1 fin subaccion subaccion corte_2 es corte_1 Esc(\"Para el \", Reg2, \" existen: \", cont2) cont3 := cont3 + cont2 cont2 := 0 Reg2 := r.clave2 fin subaccion subaccion corte_3 es corte_2 Esc(\"Para el \", Reg3, \" existen: \", cont3) contt := contt + cont3 cont3 := 0 Reg3 := r.clave3 fin subaccion Subaccion tratar_corte es Si r.clave3 <> Reg3 entonces corte_3 sino si r.clave2 <> Reg2 entonces corte_2 sino si r.clave1 <> Reg1 entonces corte_1 fin si fin si fin si fin subaccion subaccion tratar_registro es cont1 := cont1 + 1 Fin subaccion subaccion emitir_totales es Esc(\"El total general de entradas es: \", contt) fin subaccion Algoritmo Inicializar Mientras NFDA(Arch) hacer tratar_corte tratar_registro leer(Arch, r) Fin Mientras corte_3 emitir_totales cerrar(arch) fin accion Otro ejercicios \u00b6 Manteniendo el mismo archivo pero cambiando un poco el enunciado: Se pide mostrar cuantas entradas que tengan el campo1 = \"Si\" existen en el archivo, discriminando por la clave1, clave2, clave3 y total general. Se pide mostrar cuantas entradas que tengan existen en el archivo, discriminando por la clave1, clave2 y clave3. Se pide mostrar cuantas entradas que tengan existen en el archivo, discriminando por la clave2, clave3 y total general. Se pide mostrar cuantas entradas poseen un numero mayores o iguales a 50 en el campo2 y cuantas entradas (en el campo2) se tienen menores a 50 del archivo, discriminando por la clave1, clave2, clave3 y total general. Generar un archivo con el siguiente formato: Clave3, clave2, total de Si y total de No, para el archivo anterior explicado.","title":"Corte de Control"},{"location":"teoria/corte/#corte-de-control","text":"","title":"Corte de Control"},{"location":"teoria/corte/#estructura-del-corte-de-control","text":"Primero vamos a ver la estructura generica del algoritmo (o el esqueleto): Definimos un registro que tiene 3 claves: reg = Registro clave3: N(8) clave2: N(4) clave1: N(2) clave0: N(2) campo1: (\"Si\", \"No\") campo2: N(2) campo3: AN(50) fin Registro Nota: de esta forma la clave3 es la de mayor peso, seguido por la clave2, y luego por la clave1. Ahora el archivo y la variable para recorrer: Arch: Archivo de reg ordenado por clave3, clave2, clave1 y clave0 r: reg Las variables que se van a ocupar son: Resguardo de clave (Reg1, Reg2, Reg3) Contadores y Acumuladores La subaccion corte_n va a tener las siguientes acciones: subaccion corte_n es llamada al corte_n-1 Emitir resultados del nivel Acumular totales al nivel superior Reiniciar totales de este nivel Resguardar la nueva clave fin subaccion Nota: la primera accion no se va a realizar si estamos en el corte de menor peso. Esqueleto del algoritmo: Algoritmo Inicializar_archivos Inicializar_totalizadores Inicializar_resguardos Mientras NFDA(Arch) Hacer Tratar_corte Tratar_registro Leer_registro Fin Mientras Corte_3 Emitir_totales cerrar_archivo Fin accion Ahora la subaccion Tratar_corte: Subaccion Tratar_Corte es Si r.clave3 <> Reg3 entonces Corte_3 sino Si r.clave2 <> Reg2 entonces Corte_2 sino Si r.clave1 <> Reg1 entonces Corte_1 fin si fin si fin si fin subaccion Nota: las subacciones: Inicializar, tratar_registro y Emitir_totales, no se escribieron dado a que dependen del enunciado.","title":"Estructura del Corte de Control"},{"location":"teoria/corte/#un-ejemplo","text":"Ahora un ejemplo con el mismo archivo, con el siguiente enunciado: \"Se pide mostrar cuantas entradas existen en el archivo, discriminando por la clave1, clave2, clave3 y total general.\" Accion ejemplo es Ambiente reg = Registro clave3: N(8) clave2: N(4) clave1: N(2) clave0: N(2) campo1: (\"Si\", \"No\") campo2: N(2) campo3: AN(50) fin Registro Arch : archivo de reg ordenado por clave3, clave2, clave1 y clave0 r : reg Reg3: N(8) Reg2: N(4) Reg1: N(2) contt, cont3, cont2, cont1: entero subaccion inicializar es Abrir E/(Arch) leer(Arch, r) contt := 0 cont3 := 0 cont2 := 0 cont1 := 0 Reg3 := r.clave3 Reg2 := r.clave2 Reg1 := r.clave1 Fin subaccion subaccion corte_1 es Esc(\"Para el \", Reg1, \" existen: \", cont1) cont2 := cont2 + cont1 cont1 := 0 Reg1 := r.clave1 fin subaccion subaccion corte_2 es corte_1 Esc(\"Para el \", Reg2, \" existen: \", cont2) cont3 := cont3 + cont2 cont2 := 0 Reg2 := r.clave2 fin subaccion subaccion corte_3 es corte_2 Esc(\"Para el \", Reg3, \" existen: \", cont3) contt := contt + cont3 cont3 := 0 Reg3 := r.clave3 fin subaccion Subaccion tratar_corte es Si r.clave3 <> Reg3 entonces corte_3 sino si r.clave2 <> Reg2 entonces corte_2 sino si r.clave1 <> Reg1 entonces corte_1 fin si fin si fin si fin subaccion subaccion tratar_registro es cont1 := cont1 + 1 Fin subaccion subaccion emitir_totales es Esc(\"El total general de entradas es: \", contt) fin subaccion Algoritmo Inicializar Mientras NFDA(Arch) hacer tratar_corte tratar_registro leer(Arch, r) Fin Mientras corte_3 emitir_totales cerrar(arch) fin accion","title":"Un ejemplo"},{"location":"teoria/corte/#otro-ejercicios","text":"Manteniendo el mismo archivo pero cambiando un poco el enunciado: Se pide mostrar cuantas entradas que tengan el campo1 = \"Si\" existen en el archivo, discriminando por la clave1, clave2, clave3 y total general. Se pide mostrar cuantas entradas que tengan existen en el archivo, discriminando por la clave1, clave2 y clave3. Se pide mostrar cuantas entradas que tengan existen en el archivo, discriminando por la clave2, clave3 y total general. Se pide mostrar cuantas entradas poseen un numero mayores o iguales a 50 en el campo2 y cuantas entradas (en el campo2) se tienen menores a 50 del archivo, discriminando por la clave1, clave2, clave3 y total general. Generar un archivo con el siguiente formato: Clave3, clave2, total de Si y total de No, para el archivo anterior explicado.","title":"Otro ejercicios"},{"location":"teoria/listas/","text":"Listas \u00b6 Listas Simplemente enlazadas \u00b6 Definicion de un nodo Nodo = Registro Dato: <tipo> Prox: Puntero a Nodo Fin Registro Prim, p, a, q: puntero a Nodo; valor: <tipo> B\u00fasqueda \u00b6 LEER (valor) p:= Prim MIENTRAS (p <> nil) y (*p.dato <> valor) HACER p = *p.prox FIN MIENTRAS SI (p <> nil) ENTONCES Escribir ('Se encontro el elemento') SINO Escribir ('No se encontro el elemento') FIN SI Carga Apilada \u00b6 LEER (valor) Prim:= nil MIENTRAS (valor <> '*') HACER NUEVO (p) *p.Dato:= valor *p.Prox:= Prim Prim:= p LEER(valor) FIN MIENTRAS Carga Encolada \u00b6 LEER (valor) Prim:= nil MIENTRAS (valor <> '*') HACER NUEVO (p) *p.Dato:= valor *p.Prox:= nil SI Prim = nil ENTONCES Prim = p SINO *a.Prox:= p FIN SI a:=p LEER(valor) FIN MIENTRAS Carga Ordenada \u00b6 Prim:= nil A:= nil; LEER (valor) NUEVO (p) *p.dato:= valor q:= Prim MIENTRAS (q <> nil) y (*q.dato < valor) HACER a:= q q:= *q.prox FIN MIENTRAS SI (a = nil) ENTONCES *p.prox:= Prim Prim:= p SINO *p.prox:= q *a.prox:= p FIN SI Eliminacion \u00b6 LEER (valor) q:= Prim MIENTRAS (q <> nil) y (*q.dato <> valor) HACER a:= q q:= *q.prox FIN MIENTRAS SI (q = nil) ENTONCES Escribir ('Error, el valor no existe') SINO SI (a = nil) ENTONCES Prim = *q.prox SINO *a.prox:= *q.prox FIN SI DISPONER(q) FIN SI","title":"Listas"},{"location":"teoria/listas/#listas","text":"","title":"Listas"},{"location":"teoria/listas/#listas-simplemente-enlazadas","text":"Definicion de un nodo Nodo = Registro Dato: <tipo> Prox: Puntero a Nodo Fin Registro Prim, p, a, q: puntero a Nodo; valor: <tipo>","title":"Listas Simplemente enlazadas"},{"location":"teoria/listas/#busqueda","text":"LEER (valor) p:= Prim MIENTRAS (p <> nil) y (*p.dato <> valor) HACER p = *p.prox FIN MIENTRAS SI (p <> nil) ENTONCES Escribir ('Se encontro el elemento') SINO Escribir ('No se encontro el elemento') FIN SI","title":"B\u00fasqueda"},{"location":"teoria/listas/#carga-apilada","text":"LEER (valor) Prim:= nil MIENTRAS (valor <> '*') HACER NUEVO (p) *p.Dato:= valor *p.Prox:= Prim Prim:= p LEER(valor) FIN MIENTRAS","title":"Carga Apilada"},{"location":"teoria/listas/#carga-encolada","text":"LEER (valor) Prim:= nil MIENTRAS (valor <> '*') HACER NUEVO (p) *p.Dato:= valor *p.Prox:= nil SI Prim = nil ENTONCES Prim = p SINO *a.Prox:= p FIN SI a:=p LEER(valor) FIN MIENTRAS","title":"Carga Encolada"},{"location":"teoria/listas/#carga-ordenada","text":"Prim:= nil A:= nil; LEER (valor) NUEVO (p) *p.dato:= valor q:= Prim MIENTRAS (q <> nil) y (*q.dato < valor) HACER a:= q q:= *q.prox FIN MIENTRAS SI (a = nil) ENTONCES *p.prox:= Prim Prim:= p SINO *p.prox:= q *a.prox:= p FIN SI","title":"Carga Ordenada"},{"location":"teoria/listas/#eliminacion","text":"LEER (valor) q:= Prim MIENTRAS (q <> nil) y (*q.dato <> valor) HACER a:= q q:= *q.prox FIN MIENTRAS SI (q = nil) ENTONCES Escribir ('Error, el valor no existe') SINO SI (a = nil) ENTONCES Prim = *q.prox SINO *a.prox:= *q.prox FIN SI DISPONER(q) FIN SI","title":"Eliminacion"},{"location":"teoria/mezcla/","text":"Mezcla \u00b6 Caracter\u00edsticas \u00b6 Se aplica la \u201ct\u00e9cnica de apareo\u201d Las estructuras de los ficheros deben tener un elemento com\u00fan: la \u201cclave de apareo\u201d o \u201ccampo clave\u201d Los ficheros deben estar ordenados por el \u201ccampo clave\u201d Ficheros de entrada: por lo menos dos. Ficheros de salida: uno (resultado de la combinaci\u00f3n de los dos de entrada). Tipos de Mezcla \u00b6 Caracteristicas Directa Indirecta Formato de los registros de los Ficheros de entrada Igual Distinto Formato de los registros del Fichero de Salida Igual al de los Ficheros de Entrada Igual a Alguno de los ficheros de entrada o una combinacion de estos Cantidad de registros del Fichero de Salida Es igual a la sumatoria de las cantidades de los registros de los ficheros de entrada No es posible predecir Ciclos de Apareo \u00b6 Incluyente \u00b6 Mientras (Clave1 <> HV) o (Clave2 <> HV) o .... (ClaveN <> HV) hacer PROCESO Fin Mientras Excluyente \u00b6 Mientras NFDA (Arch_1) y NFDA(Arch_2) hacer PROCESO de registros comunes Fin Mientras Mientras NFDA (Arch_1) hacer ** Uno de estos ciclos por cada fichero interviniente** PROCESO de Registros del Arch_1 Fin Mientras Mientras NFDA (Arch_2) hacer PROCESO de Registros del Arch_2 Fin Mientras Si hay m\u00e1s de 2 ficheros se necesitar\u00e1n m\u00e1s ciclos, adem\u00e1s del ciclo principal. Por ej: para 3 ficheros se necesitar\u00e1n 7 ciclos: Condici\u00f3n: NFDA (Arch_1) y NFDA (Arch_2) y NFDA (Arch_3) - Ciclo principal que procesa registros comunes. Condici\u00f3n: NFDA (Arch_1) y NFDA (Arch_2) Condici\u00f3n: NFDA (Arch_1) y NFDA (Arch_3) Condici\u00f3n: NFDA (Arch_2) y NFDA (Arch_3) Condici\u00f3n: NFDA (Arch_1) Condici\u00f3n: NFDA (Arch_2) Condici\u00f3n: NFDA (Arch_3)","title":"Mezcla"},{"location":"teoria/mezcla/#mezcla","text":"","title":"Mezcla"},{"location":"teoria/mezcla/#caracteristicas","text":"Se aplica la \u201ct\u00e9cnica de apareo\u201d Las estructuras de los ficheros deben tener un elemento com\u00fan: la \u201cclave de apareo\u201d o \u201ccampo clave\u201d Los ficheros deben estar ordenados por el \u201ccampo clave\u201d Ficheros de entrada: por lo menos dos. Ficheros de salida: uno (resultado de la combinaci\u00f3n de los dos de entrada).","title":"Caracter\u00edsticas"},{"location":"teoria/mezcla/#tipos-de-mezcla","text":"Caracteristicas Directa Indirecta Formato de los registros de los Ficheros de entrada Igual Distinto Formato de los registros del Fichero de Salida Igual al de los Ficheros de Entrada Igual a Alguno de los ficheros de entrada o una combinacion de estos Cantidad de registros del Fichero de Salida Es igual a la sumatoria de las cantidades de los registros de los ficheros de entrada No es posible predecir","title":"Tipos de Mezcla"},{"location":"teoria/mezcla/#ciclos-de-apareo","text":"","title":"Ciclos de Apareo"},{"location":"teoria/mezcla/#incluyente","text":"Mientras (Clave1 <> HV) o (Clave2 <> HV) o .... (ClaveN <> HV) hacer PROCESO Fin Mientras","title":"Incluyente"},{"location":"teoria/mezcla/#excluyente","text":"Mientras NFDA (Arch_1) y NFDA(Arch_2) hacer PROCESO de registros comunes Fin Mientras Mientras NFDA (Arch_1) hacer ** Uno de estos ciclos por cada fichero interviniente** PROCESO de Registros del Arch_1 Fin Mientras Mientras NFDA (Arch_2) hacer PROCESO de Registros del Arch_2 Fin Mientras Si hay m\u00e1s de 2 ficheros se necesitar\u00e1n m\u00e1s ciclos, adem\u00e1s del ciclo principal. Por ej: para 3 ficheros se necesitar\u00e1n 7 ciclos: Condici\u00f3n: NFDA (Arch_1) y NFDA (Arch_2) y NFDA (Arch_3) - Ciclo principal que procesa registros comunes. Condici\u00f3n: NFDA (Arch_1) y NFDA (Arch_2) Condici\u00f3n: NFDA (Arch_1) y NFDA (Arch_3) Condici\u00f3n: NFDA (Arch_2) y NFDA (Arch_3) Condici\u00f3n: NFDA (Arch_1) Condici\u00f3n: NFDA (Arch_2) Condici\u00f3n: NFDA (Arch_3)","title":"Excluyente"}]}